<!-- CSS -->
<link rel="stylesheet" type="text/css" href="/css/PM/PMContent.css">
<link rel="stylesheet" type="text/css" href="/css/PM/DataTables/Bootstrap-3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/css/PM/DataTables/DataTables-1.10.18/css/dataTables.bootstrap.css">
<link href="/css/PM/datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen">
<link rel="stylesheet" href="/css/PM/bootstrap-select.min.css" />


<!-- JS  -->

<script src="/css/PM/DataTables/Bootstrap-3.3.7/js/bootstrap.min.js"></script>
<script src="/css/PM/bootstrap-select.min.js"></script>
<script type="text/javascript" src="/css/PM/datetimepicker/bootstrap-datetimepicker.min.js" charset="UTF-8"></script>
<script type="text/javascript" src="/css/PM/datetimepicker/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>

<script type="text/javascript" src="/css/PM/DataTables/DataTables-1.10.18/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/css/PM/DataTables/DataTables-1.10.18/js/dataTables.bootstrap.min.js"></script>
<script src="/js/PM/FileSaver.min.js"></script>
<script src="/js/PM/tableExport.js"></script>
<script src="/js/PM/PMfuns.js"></script>

<script src="/js/sweetalert.min.js"></script>
<script src="/public/funs.js"></script>

<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>


<!------begin view-------------------------->
<div class="divcontent">
	<h1>工作流程-任务单</h1>
	<hr>

	<!-- 操作区（按钮等） -->
	<div class="lineitem">

		<!--   <button id="BTNInfo" class="btn btn-warning">详情</button> -->

		<!-- 按钮触发模态框 -->

		<button id="BTNTaskRecord" type="button" class="btn btn-info" data-toggle="modal">任务登记</button>
		<button id="BTNTaskUpdVer" type="button" class="btn btn-danger" data-toggle="modal">更新版本</button>


		<div class="btn-group" style="margin-left:20px">
			<button id="BTNFilterSimple" type="button" class="btn btn-default">未完成单据</button>
			<button id="BTNFilterAll" type="button" class="btn btn-default">全部单据</button>
		</div>

		<a href="/app/PM/workCenter"><button id="BTNWorkCenter" type="button" class="btn btn-success"
				style="float:right">个人中心</button></a>
		<!-- 模态框（Modal） -->
		<div class="modal fade" id="BillTask" tabindex="-1" role="dialog" aria-labelledby="BillTaskLabel"
			aria-hidden="true" data-backdrop="static">
			<div class="modal-dialog" style="width:80%">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" id="BTNModelClose" class="close" aria-hidden="true">&times;</button>
						<h4 class="modal-title" id="BillTaskLabel">任务单详情</h4>
					</div>
					<div class="modal-body">

						<!---折叠------------------------>

						<div class="panel-group" id="accordion">

							<div class="panel panel-default">
								<div class="panel-heading">
									<h4 class="panel-title">
										<a data-toggle="collapse" data-parent="#accordion" href="#collapseTrack">
											流程跟踪面板:点击可收起
										</a>
									</h4>
								</div>
								<div id="collapseTrack" class="panel-collapse collapse ">
									<div class="panel-body">

										<!--------------panel--------------------->
										<button id="BTNTrack" type="button" style="float: right">跳转到进度跟踪</button>

										<h3 class="panel-title">计划单信息</h3>
										</br>

										<table id="tableTrackPLD" class="table table-bordered">
											<thead></thead>

											<tbody></tbody>
										</table>

										<h3 class="panel-title">方案单信息</h3>
										</br>

										<table id="tableTrackBPT" class="table table-bordered">
											<thead></thead>
											<tbody></tbody>
										</table>

										<h3 class="panel-title">任务单信息</h3>
										</br>

										<table id="tableTrackTask" class="table table-bordered">
											<thead></thead>
											<tbody></tbody>
										</table>



										<!--------------panel--------------------->
									</div>
								</div>
							</div>

						</div>

						<!---折叠------------------------>


						<div id="DivTaskPanel" class="panel panel-info">
							<div class="panel-heading">
								<h3 class="panel-title">
									<a data-toggle="collapse" href="#collapseTaskInfo">
										任务信息:点击可收起
									</a>
								</h3>
							</div>
							<div id="collapseTaskInfo" class="panel-collapse collapse in">

								<div class="panel-body">


									<div class="form-horizontal">
										<span id="DBID" style="display:none"></span>
										<span id="taskBPID" style="display:none"></span>
										<!-------------------------------------------------------------------------->

										<div class="form-group">

											<label class="col-sm-1 control-label">任务单号:</label>
											<div class="col-sm-2">

												<span id="BTID" class="help-block"></span>

											</div>

											<label class="col-sm-2 control-label">任务单版本号:</label>
											<div class="col-sm-1">
												<span id="BTVersion" class="help-block"></span>
											</div>

											<label class="col-sm-1 control-label">客户名称:</label>
											<div class="col-sm-1">
												<span id="taskCTRName" class="help-block"></span>
											</div>

											<label class="col-sm-1 control-label">任务类型:</label>
											<div class="col-sm-1">
												<span id="taskTypeText" class="help-block"></span>
											</div>


											<label class="col-sm-1 control-label">类型码:</label>
											<div class="col-sm-1">
												<span id="taskSortType" class="help-block"></span>
											</div>


										</div>

										<!-------------------------------------------------------------------------->



										<div id="divTaskInfo">
											<!-----divTaskInfo--------------------------------------------------------------------->
											<div class="form-group">

												<label class="col-sm-1 control-label">修改属性:</label>
												<div class="col-sm-8">
													<label class="checkbox-inline">
														<input type="checkbox" name="modifyABE" value="ABE1"> 画面
													</label>
													<label class="checkbox-inline">
														<input type="checkbox" name="modifyABE" value="ABE2"> 结构
													</label>
													<label class="checkbox-inline">
														<input type="checkbox" name="modifyABE" value="ABE3"> 参数
													</label>

													<label class="checkbox-inline">
														<input type="checkbox" name="modifyABE" value="ABE4">通信
													</label>
													<label class="checkbox-inline">
														<input type="checkbox" name="modifyABE" value="ABE5">逻辑
													</label>

												</div>


											</div>



											<!-------------------------->

											<div class="form-group">

												<label class="col-sm-1 control-label" for="name">机型:</label>
												<div class="col-sm-3">
													<select id="taskMHEName" class="selectpicker"
														data-live-search="true" data-dropup-auto="false">
													</select>
												</div>

												<label class="col-sm-1 control-label" for="name">系统:</label>
												<div class="col-sm-3">
													<select id="taskModel" class="selectpicker" data-live-search="true"
														data-dropup-auto="false">
													</select>
												</div>

											</div>
											<!-------------------------->
											<div class="form-group">

												<label class="col-sm-1 control-label">原系统版本:</label>
												<div class="col-sm-3">
													<input id="taskOGNSystemVersion" class="form-control" type="text"
														value="">
												</div>

												<label class="col-sm-1 control-label">BugID:</label>
												<div class="col-sm-3">
													<input id="taskBugID" class="form-control" type="text" value="">
												</div>


											</div>
											<!-------------------------->

											<div class="form-group">

												<label class="col-sm-1 control-label" for="name">负责人:</label>
												<div class="col-sm-2">
													<!--  <span id="taskStaff"  class="help-block"></span>-->
													<select id="taskStaff" class="selectpicker" data-live-search="true">
													</select>
												</div>





												<label for="limitDate" class="col-sm-2 control-label">任务完成期限:</label>
												<div class="col-sm-3">
													<div class="input-group date form_date " data-date=""
														data-date-format="yyyy-mm-dd" data-link-field="limitDate"
														data-link-format="yyyy-mm-dd">
														<input id="taskLimitDate" class="form-control " size="16"
															type="text" value="" readonly>
														<span class="input-group-addon"><span
																class="glyphicon glyphicon-calendar"></span></span>
													</div>
													<input type="hidden" id="taskLimitDate" value="" />
												</div>

											</div>

											<!-------------------------------------------------------------------------->
											<div class="form-group">
												<label class="col-sm-1 control-label">任务要求:</label>
												<div class="col-sm-10">
													<!-- <span id="taskDBE" class="help-block"></span>-->

													<textarea id="taskDBE" class="form-control" rows="6"></textarea>
												</div>

											</div>
											<!-------------------------------------------------------------------------->
											<div class="form-group">

												<label class="col-sm-1 control-label" for="name">发布人:</label>
												<div class="col-sm-3">
													<span id="taskMaker" class="help-block"></span>
												</div>

												<label class="col-sm-1 control-label" for="name">发布日期:</label>
												<div class="col-sm-3">

													<span id="taskMakeDate" class="help-block"></span>
												</div>


											</div>
											<!-------------------------------------------------------------------------->
											<div class="form-group">
												<label class="col-sm-1 control-label" for="name"></label>
												<div class="col-sm-3">
													<button id="BTNTaskSave" type="button" class="btn btn-primary"
														data-toggle="modal">修改任务</button>

												</div>
											</div>
											<!-------------------------------------------------------------------------->

										</div>
										<!-----divTaskInfo--------------------------------------------------------------------->

										<hr>

										<!-------------------------------------------------------------------------->

										<div id="divTaskAccept">
											<!-----divTaskAccept--------------------------------------------------------------------->
											<div class="form-group">
												<label class="col-sm-1 control-label">确认意见:</label>
												<div class="col-sm-10">

													<textarea id="BTAcceptOpinion" class="form-control"
														rows="2"></textarea>
												</div>

											</div>

											<!-------------------------------------------------------------------------->
											<div class="form-group">

												<label class="col-sm-1 control-label">FQC申请:</label>
												<div class="col-sm-3">
													<label class="radio-inline">
														<input type="radio" name="FQCRequest" id="radio1" value="1">
														<span>有</span>
													</label>
													<label class="radio-inline">
														<input type="radio" name="FQCRequest" id="radio2" value="0"
															checked>
														<span>无</span>
													</label>

												</div>

												<div id="divFQCMaker">

													<label class="col-sm-1 control-label">FQC检测:</label>

													<div class="col-sm-3 ">
														<select id="FQCMaker" class="selectpicker"
															data-live-search="true">
														</select>
													</div>
												</div>

											</div>



											<!-------------------------------------------------------------------------->
											<div class="form-group">
												<label class="col-sm-1 control-label">返工任务:</label>
												<div class="col-sm-3">
													<span id="taskRepeat" style="display:none"></span>
													<span id="taskRepeatText" class="help-block"></span>
												</div>


												<label class="col-sm-1 control-label">IPQC检测:</label>

												<div class="col-sm-3 ">
													<select id="IPQCMaker" class="selectpicker" data-live-search="true">
													</select>
												</div>

											</div>

											<!-------------------------------------------------------------------------->
											<div class="form-group">

												<label class="col-sm-1 control-label" for="name">确认状态:</label>
												<div class="col-sm-3">
													<span id="BTAcceptResultText" class="help-block"></span>
												</div>

												<label class="col-sm-1 control-label" for="name">确认日期:</label>
												<div class="col-sm-3">

													<span id="BTAcceptDate" class="help-block"></span>
												</div>
											</div>
											<!-------------------------------------------------------------------------->

											<div class="form-group" id="DivTaskAcceptBTNS">
												<label class="col-sm-1 control-label">确认:</label>
												<div class="col-sm-10">

													<button id="BTNTaskAcceptYes" type="button" class="btn btn-success"
														data-toggle="modal">确认任务</button>
													<button id="BTNTaskAcceptNo" type="button" class="btn btn-warning"
														data-toggle="modal">驳回任务</button>
												</div>

											</div>

											<!-------------------------------------------------------------------------->
										</div>
										<!-------divTaskAccept------------------------------------------------------>

									</div>
								</div>
							</div>
						</div>

						<!------代码审查---------------->
						<div class="panel-group" id="codeAuditPanel">

							<div class="panel panel-default">
								<div class="panel-heading">
									<h4 class="panel-title">
										<a data-toggle="collapse" href="#collapseCodeCheck">
											代码审查面板:点击可收起
										</a>
									</h4>
								</div>
								<div id="collapseCodeCheck" class="panel-collapse">
									<div class="panel-body">

										<div class="form-horizontal">

											<div class="form-group">
												<label class="col-sm-1 control-label">出货目录:</label>
												<div class="col-sm-5">
													<input id="codeAdr" class="form-control" type="text" value="">
												</div>

												<label class="col-sm-1 control-label">检查人:</label>
												<div class="col-sm-5 ">
													<select id="codeAuditor" class="selectpicker"
														data-dropup-auto="false" data-live-search="true">
													</select>
													<button id="defaultAuditorBtn" type="button"
														class="btn btn-primary">默认检查人</button>
													<button id="agentAuditorBtn" type="button"
														class="btn btn-primary">代理人</button>
												</div>
											</div>

											<div class="form-group">
												<label class="col-sm-1 control-label">代码审核</label>
												<div class="col-sm-3">
													<span id="codeAuditResult" class="help-block"></span>
												</div>
											</div>


											<div class="form-group">
												<label class="col-sm-1 control-label"></label>
												<div class="col-sm-3">
													<button id="saveCodeInfoBtn" type="button"
														class="btn btn-success">保存</button>
													<!-- <button id="codeAuditorRemindBtn" type="button"
														class="btn btn-success">提醒检查</button> -->
												</div>
											</div>

										</div>
										<hr />

										<div id="codeAuditRecordDiv">
											<div class="form-group">
												<button id="addCodeAuditBtn" type="button"
													class="btn btn-success">开始检查</button>
											</div>


											<table id="codeCheckRecordTable" class="table table-bordered"
												style="width:100%;">
												<thead>
													<tr>
														<th>序号号</th>
														<th>检查日期</th>
														<th>检查人</th>
														<th>结果</th>
														<th>备注</th>
													</tr>
												</thead>
											</table>
										</div>

									</div>
								</div>
							</div>

						</div>



						<!-------------------------------------------------------------------------->
						<div class="panel panel-warning" id="taskRecordPanel">
							<div class="panel-heading">
								<h3 class="panel-title">任务记录</h3>
							</div>
							<div class="panel-body">

								<div class="form-horizontal">

									<button id="BTNTaskRecordAdd" type="button" class="btn btn-success"
										data-toggle="modal">添加记录</button>
									<button id="BTNTaskRecordAudit" type="button" class="btn btn-warning"
										data-toggle="modal">审核记录</button>
									<!-- <button id="BTNTaskRecordClear" class="btn btn-danger" data-toggle="modal" >清除记录</button>-->

									<hr>

									<table id="tableRecords" class="table table-bordered" style="width:100%;">
										<thead>
											<tr>
												<th>记录号</th>
												<th>修改内容</th>
												<th>功能说明</th>
												<th>记录人</th>
												<th>记录日期</th>
												<th>审核人</th>
												<th>审核日期</th>
											</tr>
										</thead>
									</table>

									<hr>

									<div id="DIVRecordContent">


										<span id="recordDBID" style="display:none"></span>

										<!-------------------------------------------------------------------------->
										<div class="form-group">
											<label class="col-sm-1 control-label">修改内容说明:</label>
											<div class="col-sm-10">
												<textarea id="modifyContent" class="form-control" rows="6"></textarea>
											</div>

										</div>
										<!-------------------------------------------------------------------------->
										<div class="form-group">
											<label class="col-sm-1 control-label">程序功能说明:</label>
											<div class="col-sm-10">
												<textarea id="functionsDBE" class="form-control" rows="6"></textarea>
											</div>

										</div>

										<!-------------------------------------------------------------------------->

										<div class="form-group" id="DivUploadBTNS">
											<label class="col-sm-1 control-label" for="name">上传:</label>

											<div class="col-sm-8">
												<input type="file" name="myHead" multiple="multiple" id="fileToUpload"
													style="display:none" onchange="taskFileSelected()">
												<a class="btn btn-info" onclick="$('#fileToUpload').click()">上传程序文件</a>

												<input type="button" type="button" class="btn btn-warning"
													onclick="taskDeleteFile()" value="清空附件">

											</div>

										</div>

										<!-------------------------------------------------------------------------->
										<div class="form-group">
											<label class="col-sm-1 control-label" for="name">程序附件:</label>

											<div class="col-sm-6">
												<div id="div_previewImages"></div>
												<div id="progressNumber"></div>
												<div id="divFilesUploaded"></div>
											</div>

											<label class="col-sm-1 control-label" for="name">版本号:</label>
											<div class="col-sm-3">
												<input id="fileVersion" class="form-control" type="text" value="">
											</div>

										</div>

										<!-------------------------------------------------------------------------->


										<div class="form-group">
											<label class="col-sm-1 control-label">备注:</label>
											<div class="col-sm-10">
												<textarea id="recordRemark" class="form-control" rows="2"></textarea>
											</div>

										</div>


										<!-------------------------------------------------------------------------->
										<div class="form-group">

											<label for="recordMaker" class="col-sm-1 control-label">记录人:</label>
											<div class="col-sm-5">
												<span id="recordMaker" class="help-block"></span>
											</div>



											<label for="recordMakeDate" class="col-sm-1 control-label">记录日期:</label>
											<div class="col-sm-5">
												<span id="recordMakeDate" class="help-block"></span>
											</div>
										</div>

										<!-------------------------------------------------------------------------->
										<div class="form-group" id="DivRecordAuditInfo">

											<label class="col-sm-1 control-label" for="name">审核人:</label>
											<div class="col-sm-5">

												<select id="recordAuditor" class="selectpicker" data-live-search="true">
												</select>

												<button id="BTNGetTaskAuditor" type="button" class="btn btn-success"
													data-toggle="modal">系统指定</button>

											</div>


											<label for="recordAuditDate" class="col-sm-1 control-label">审核日期:</label>
											<div class="col-sm-5">
												<span id="recordAuditDate" class="help-block"></span>
											</div>


										</div>


										<!-------------------------------------------------------------------------->

										<div class="form-group" id="DivTaskRecordBTNS">
											<label class="col-sm-1 control-label">登记:</label>
											<div class="col-sm-10">
												<button id="BTNTaskRecordSave" type="button" class="btn btn-success"
													data-toggle="modal">保存记录</button>
											</div>

										</div>
										<!-------------------------------------------------------------------------->

										<div class="form-group" id="DivTaskUpdVerBTN">
											<label class="col-sm-1 control-label"></label>
											<div class="col-sm-10">

											</div>

										</div>
										<!-------------------------------------------------------------------------->

									</div>

								</div>


							</div>
						</div>



						<!---------清除浮动---------------------------------->
						<div style='clear:both'></div>



					</div>
					<div class="modal-footer">




						<button id="BTNFormClose" type="button" class="btn btn-default" data-dismiss="modal">关闭</button>

					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal -->
		</div>


		<!-- 模态框（Modal） -->
		<div class="modal fade" id="codeCheckRuleModal"" aria-hidden=" true" data-backdrop="static">
			<div class="modal-dialog" style="width:75%">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" aria-hidden="true" data-dismiss="modal">&times;</button>
						<h4 class="modal-title" id="BillTaskLabel">代码检查项目</h4>
					</div>
					<div class="modal-body">

						<table id="dspCodeCheckRuleTable" class="table table-bordered" style="width:100%;">
							<thead>
								<tr>
									<th colspan="3" style="text-align: center;">
										<h4>主机代码检查项目</h4>
									</th>
								</tr>
								<tr>
									<th>序号</th>
									<th>检查模块</th>
									<th>检查内容</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>
										1
									</td>
									<td>
										代码规范化
									</td>
									<td>
										1、语法问题：<br />
										①没有-1结束或多余-1；
										②运算时分母为0；
										③程序命名，版本日期是否正确；<br />
										2、规范问题：<br />
										①注释明确，必要的地方必须注释代码说明、人员、日期；
										②模块化，尽量使用子函数，增加可读性；<br />
										③同一家程序尽量不要使用新的LC，保证代码同一性。
										④资料定义每家必须在统一的地方，防止冲突，且不得使用核心预留。<br />
										3、系统规范：<br />
										因系统要求的小数位，CODE等是否规范<br />
										4、代码冗余<br />
										相同功能代码重复书写；<br />
									</td>
								</tr>
								<tr>
									<td>
										2
									</td>
									<td>
										功能修改方案是否合理
									</td>
									<td>
										1、是否能实现客户要求<br />
										2、是否还有更简更优替代方案<br />
									</td>
								</tr>
								<tr>
									<td>
										3
									</td>
									<td>
										功能修改是否全面性、是否新旧兼容性
									</td>
									<td>
										1、标配到原程序的是否有选项，而不影响已出机出去的<br />
										2、是否考虑新旧HMI搭配问题
									</td>
								</tr>

								<tr>
									<td>
										4
									</td>
									<td>
										功能必备项目
									</td>
									<td>
										1、@92-0001：温控使用接触器；<br />
										2、F6-0001: TALK超时不警报 “通讯断线超时”；<br />
										3、@92-0080：PWM<br />
										4、DA线性无底流、直线型<br />
										5、温度PID匹配<br />
									</td>
								</tr>
								<tr>
									<td>
										5
									</td>
									<td>
										SVN提交
									</td>
									<td>
										1、改完一单就需要提交一次；<br />
										2、有多余垃圾文件（如.bak）；<br />
										3、打印未删除；<br />
									</td>
								</tr>
							</tbody>
						</table>


						<table id="hmiCodeCheckRuleTable" class="table table-bordered" style="width:100%;">
							<thead>
								<tr>
									<th colspan="3" style="text-align: center;">
										<h4>面板代码检查项目</h4>
									</th>
								</tr>
								<tr>
									<th>序号</th>
									<th>检查模块</th>
									<th>检查内容</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>
										1
									</td>
									<td>
										代码规范化
									</td>
									<td>
										1、基本语法<br />
										①缺少非空判断（子函数已有则不需添加）；
										②运算时分母为0；
										③open文件后一定要close；<br />
										2、版本管理<br />
										①特殊功能无Define；
										②代码影响其他版本/厂家；
										③包含其他厂家的Define(如：泰瑞程序包含中鸿泰D_0HT)；<br />
										3、变量定义<br />
										①新定义变量未初始化；
										②变量名称规范：首字母（变量类型）+变量名称；<br />
										4、代码冗余<br />
										①相同功能代码重复书写；"
									</td>
								</tr>
								<tr>
									<td>
										2
									</td>
									<td>
										功能修改方案是否合理
									</td>
									<td>
										1、是否能实现客户要求<br />
										2、是否还有更简更优替代方案<br />
									</td>
								</tr>
								<tr>
									<td>
										3
									</td>
									<td>
										功能修改是否全面性、是否新旧兼容性
									</td>
									<td>
										1、温度PID，模温、多个RMTP12时的处理。（tmTaskdsp28m3、cpp）；<br />
										2、温度只用作监测时，注意PID自学习情况；<br />
										3、主机lib核心变更，HMI配合修改；考虑新旧主机兼容性<br />
									</td>
								</tr>

								<tr>
									<td>
										4
									</td>
									<td>
										功能必备项目
									</td>
									<td>
										1、改完一单就需要提交一次；<br />
										2、有多余垃圾文件（如.bak）；<br />
										3、打印未删除<br />
									</td>
								</tr>

							</tbody>
						</table>
						<div class="form-horizontal">
							<!-- <span id="codeAuditDBID" style="display:none"></span> -->
							<span id="codeAuditRowId"></span>

							<div class="form-group">
								<label class="col-sm-1 control-label">检查结果:</label>
								<div class="col-sm-3">
									<label class="radio-inline">
										<input type="radio" name="codeAduditResult" value="通过">
										<span>通过</span>
									</label>
									<label class="radio-inline">
										<input type="radio" name="codeAduditResult" value="未通过" checked>
										<span>未通过</span>
									</label>

								</div>
							</div>
							<div class="form-group">
								<label class="col-sm-1 control-label">备注:</label>
								<div class="col-sm-11">
									<textarea id='codeAuditRemark' class="form-control" rows="2"></textarea>
								</div>
							</div>
							<div class="form-group">
								<label class="col-sm-1 control-label"></label>
								<div class="col-sm-10">
									<button id='saveCodeAuditRecordBtn'>保存</button>
								</div>
							</div>
						</div>




					</div>
				</div>
			</div>
		</div>



	</div>




	<br />

	<!--数据呈现区-->
	<table id="billsTaskTable" class="table table-striped table-bordered">
		<thead>
			<tr>
				<th>时间戳</th>
				<th>数据库ID</th>
				<th>任务单号</th>
				<th>版本号</th>
				<th>任务类别</th>
				<th>客户名称</th>
				<th>任务系统信息</th>
				<th>任务负责人</th>
				<th>完成期限</th>
				<th>确认结果</th>
				<th>记录状态</th>
				<th>记录审核人</th>
				<th>IPQC结果</th>
				<th>任务完结状态</th>

			</tr>
		</thead>
	</table>

	<!-- 点击详情后弹出的窗口 -->
	<div id="winDetail" class="easyui-window" title="表单详情" closed="true" style="width:80%;height:90%;">

		<table id="tableDetail" class="table table-bordered">

		</table>

	</div>
	<!-- 点击详情后弹出的窗口 -->


</div>

<!--------end view-------------------->
<script>
	////函数:计划单号生成规则
	//
	//function Fun_billIDCreate(para){
	//	var BillID=new Date(Ndate).Format("yyyyMMdd")+para+Math.floor(Math.random()*1000);
	//	return BillID;
	//}

	//函数:加载 系统内最新单据数据

	function Fun_getTaskTrackData(dataSelect) {



		var SQLParamPLD = {
			"tableName": "ppm_bills_plan",
			"titles": [
				"DBID",
				"BPID",
				"version",
				"CTRName",
				"topic",
				"PGEMaker",
				"MHEName",
				"files",
				//				"modelD",
				//				"modelH",
				"applyDate",
				"limitDate"
			],
			"filter": "BPID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackPLD", SQLParamPLD);

		var SQLParamBPT = {
			"tableName": "ppm_bills_blueprint",
			"titles": [
				"DBID",
				"BPTID",
				"BPTVersion",
				"CTRName",
				"PGEMaker",
				"auditDate",
				"files",
				//				"modelD",
				//				"modelH",
				"limitDate",
				"makeDate"
			],
			"filter": "BPTID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackBPT", SQLParamBPT);

		//数据量不能过多,否则会报错
		var SQLParamTask = {
			"tableName": "ppm_bills_task",
			"titles": [
				"DBID",
				"BTID",
				"BTVersion",
				"taskTypeText",
				"taskStaff",
				"taskLimitDate",
				"BTAcceptDate",
				"IPQCMakeDate",
				"BTStatusText",
				"taskFiles"
			],
			"filter": "taskBPID='" + dataSelect.taskBPID + "'",
			"orderBy": "BTID "
		};


		Fun_fillTrackTableWithDBID("#tableTrackTask", SQLParamTask);

	}


	//函数-添加任务单,并刷新任务单列表
	function Fun_saveTaskRecord(DBData) {

		$.ajax({
			method: 'post',
			url: '/app/PM/saveDBData',
			data: DBData,
			success: function (data) {
				//            swal("成功数据:" + JSON.stringify(data));
				if (data.affectedRows != 0) {

					Fun_showRecordsLiteTable(recordsTableSQL, tasksTableInfo);
					$('#DIVRecordContent').hide();

					// swal("保存任务记录成功!");

					// let i={alertMsg:"保存任务记录成功!"}
					// swalAndRefresh(i)
				}
			},
			error: function (err) {
				swal("失败数据:" + JSON.stringify(err));
			}
		});
	}





	//函数-添加任务单,并刷新任务单列表
	function Fun_delTaskRecord(IDData) {
		$.ajax({
			method: 'post',
			url: '/app/PM/delDBData',
			data: IDData,
			success: function (data, textStatus) {
				//  swal("成功数据:"+JSON.stringify(data));
				if (data.affectedRows != 0) {
					swal("删除任务单成功!");
					Fun_showRecordsLiteTable(recordsTableSQL, tasksTableInfo);
					//                $('#BTNTaskRecordAdd').click();
					$('#DIVRecordContent').hide();

				} else {
					swal("删除任务单失败!");
				}
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {}
		});
	}

	//代码审查记录
	const loadCodeAuditRecordTable = async ({
		BTID, //任务单号
		BTVersion //任务单版本
	}) => {
		//check-参数检查
		if (!BTID && BTVersion) {
			console.log('loadCodeAuditRecordTable 参数异常');
			return
		}

		//d-获取审核记录
		let codeAuditRecord = await getDataBySql({
			sql: 'getCodeAuditRecord',
			params: {
				filter: 'BTID="' + BTID + '" and BTVersion="' + BTVersion + '"',
				orderBy: 'rowId'
			}
		})

		console.log('codeAuditRecord', codeAuditRecord);

		//r-生成表格
		loadBillDataTable({
			elementId: 'codeCheckRecordTable',
			dtParams: {
				dtConfig: 'dtConfigData',
				data: codeAuditRecord,
				columns: [{
					data: 'rowId',
				}, {
					data: 'saveDate',
				}, {
					data: 'codeAuditor',
				}, {
					data: 'result',
				}, {
					data: 'remark',
				}]
				// scrollX: true,
				// bAutoWidth: true
			}
		})

		//如数据为0,清空tbody 避免直接获取size =1;
		if (codeAuditRecord.length === 0) {
			$('#codeCheckRecordTable tbody').html("");
		}

		//解绑原事件
		$('#codeCheckRecordTable tbody').unbind();
		// 添加子表双击事件

		let table = $('#codeCheckRecordTable').DataTable();
		$('#codeCheckRecordTable tbody').on('click', 'tr', function () {

			if ($(this).hasClass('selected')) {
				$(this).removeClass('selected');
			} else {
				table.$('tr.selected').removeClass('selected');
				$(this).addClass('selected');

				let rowSelect = table.row('.selected').data();
				console.log("rowSelect:" + JSON.stringify(rowSelect));
				$('#codeAuditRowId').text(rowSelect.rowId)
				$("input:radio[name=codeAduditResult][value=" + rowSelect.result + "]").prop("checked",
					true);
				$('#codeAuditRemark').val(rowSelect.remark)


				showAuditRuleTable({
					taskType: $('#taskSortType').text()
				})


				$('#codeCheckRuleModal').modal('show');
			}

		});

	}


	//代码审查面板
	const fillCodeAuditPanel = async ({
		BTID, //任务单号
		BTVersion //任务单版本
	}) => {

		//c-参数检查
		if (!BTID && BTVersion) {
			console.log('fillCodeAuditPanel 参数异常');
			return
		}

		//d-加载任务单数据
		let TaskCodeAuditData = await getDataBySql({
			sql: 'getTaskCodeAuditData',
			params: {
				filter: 'BTID="' + BTID + '" and BTVersion="' + BTVersion + '"'
			}
		})
		console.log('TaskCodeAuditData:', TaskCodeAuditData);

		//r-填写信息
		if (TaskCodeAuditData.length === 0) {
			console.log('TaskCodeAuditData 未找到数据');
			return
		}
		$('#codeAdr').val(TaskCodeAuditData[0].codeAdr)
		$("#codeAuditor").selectpicker('val', TaskCodeAuditData[0].codeAuditor)
		$('#codeAuditResult').text(TaskCodeAuditData[0].codeAuditResult)


		//d-重载记录表
		loadCodeAuditRecordTable({
			BTID, //任务单号
			BTVersion //任务单版本
		})



	}


	//函数:记录按钮详情页自动填写内容------------------------
	function Fun_taskRecordInit(dataChoose) {


		let dataSelect = NulltoEmpty(dataChoose);

		$('#BillTask').modal('show');
		Fun_getTaskTrackData(dataSelect);

		$('#DBID').text(dataSelect.DBID);
		$('#taskBPID').text(dataSelect.taskBPID);

		$('#taskRepeat').text(dataSelect.taskRepeat);
		$('#taskRepeatText').text(dataSelect.taskRepeatText);

		$('#BTID').text(dataSelect.BTID);
		$('#BTVersion').text(dataSelect.BTVersion);
		$('#taskCTRName').text(dataSelect.taskCTRName);
		$('#taskTypeText').text(dataSelect.taskTypeText);
		$('#taskSortType').text(dataSelect.taskSortType);

		//	 $("input:radio[name=taskSortType][value="+dataSelect.taskSortType+"]").prop("checked",true);
		//   $('input:radio[name="taskSortType"]').attr("disabled",true);
		//     $("input:radio[name=taskType][value="+dataSelect.taskType+"]").prop("checked",true);
		//     $('input:radio[name="taskType"]').attr("disabled",true);

		$('input:checkbox[name="modifyABE"]').prop("checked", false);
		setCheckBoxValue("modifyABE", dataSelect.modifyABE);
		//    $('input:checkbox[name="modifyABE"]').attr("disabled",true);


		Fun_getSQLSelectDBData({
			SQL: "SQLSRMachines"
		}, "#taskMHEName", dataSelect.taskMHEName);

		switch (dataSelect.taskSortType) {
			case 'D':
				Fun_getSQLFullSelectDBData({
					SQL: "SQLSRSystems",
					filter: "belong='DSP' AND status=1"
				}, "#taskModel", dataSelect.taskModel);
				break;
			case 'H':
				Fun_getSQLFullSelectDBData({
					SQL: "SQLSRSystems",
					filter: "belong='HMI' AND status=1"
				}, "#taskModel", dataSelect.taskModel);
				break;
			case 'M':
				Fun_getSQLFullSelectDBData({
					SQL: "SQLSRSystems",
					filter: "belong='运动控制卡' AND status=1"
				}, "#taskModel", dataSelect.taskModel);
				break;
			case 'P':
				Fun_getSQLFullSelectDBData({
					SQL: "SQLSRSystems",
					filter: "belong='PLC' AND status=1"
				}, "#taskModel", dataSelect.taskModel);
				break;
			case 'C':
				Fun_getSQLFullSelectDBData({
					SQL: "SQLSRSystems",
					filter: "belong='codesys' AND status=1"
				}, "#taskModel", dataSelect.taskModel);
				break;

		}

		$('#taskOGNSystemVersion').val(dataSelect.taskOGNSystemVersion);

		$('#taskBugID').val(dataSelect.taskBugID);



		Fun_getSQLSelectDBData({
			SQL: "SQLSRStaffs"
		}, "#taskStaff", dataSelect.taskStaff);

		$('#taskLimitDate').val(dataSelect.taskLimitDate);


		$('#taskDBE').val(dataSelect.taskDBE.replace(/<br\/>/g, '\n'));

		$('#BTStatusText').text(dataSelect.BTStatusText);

		$("#taskMaker").text(dataSelect.taskMaker);

		$("#taskMakeDate").text(dataSelect.taskMakeDate);


		$("input:radio[name=FQCRequest][value=" + dataSelect.FQCRequest + "]").prop("checked", true);

		//添加FQCMaker

		// console.log("dataSelect.FQCRequest :"+dataSelect.FQCRequest )

		if (dataSelect.FQCRequest === 1) {

			$("#divFQCMaker").show();
			if (dataSelect.FQCMaker === "") {
				Fun_getSQLSelectDBData({
					SQL: "SQLSRStaffs"
				}, "#FQCMaker", "刘梦");
			} else {
				Fun_getSQLSelectDBData({
					SQL: "SQLSRStaffs"
				}, "#FQCMaker", dataSelect.FQCMaker);
			}

		} else {
			$("#divFQCMaker").hide();
		}




		// $('input:radio[name="FQCRequest"]').attr("disabled", true);

		Fun_getSQLSelectDBData({
			SQL: "SQLSRStaffs"
		}, "#IPQCMaker", dataSelect.IPQCMaker);


		$("#BTAcceptResultText").text(dataSelect.BTAcceptResultText);
		$("#BTAcceptDate").text(dataSelect.BTAcceptDate);


		//新增功能,如任务单版本号不为0 则可以自行修改完成期限.

		if (dataSelect.BTVersion !== 0 && dataSelect.BTAcceptResult === 0) {

			$('#taskLimitDate').attr("disabled", false);

			$('.form_date').datetimepicker({
				language: 'zh-CN',
				weekStart: 1,
				todayBtn: 1,
				autoclose: 1,
				todayHighlight: 1,
				startView: 2,
				minView: 2,
				forceParse: 0
			});
		}


		recordsTableSQL = {
			"SQL": "SQLTaskRecords",
			"filter": "BTID = '" + dataSelect.BTID + "' AND BTVersion='" + dataSelect.BTVersion +
				"' AND disable IS NULL ",
			"orderBy": " saveTimeStamp DESC"
		};

		tasksTableInfo = {
			"tableID": "#tableRecords",
			"columnsData": [{
					data: 'DBID',
					"visible": false
				},
				{
					data: 'modifyContent',
					width: '30%'
				},
				{
					data: 'functionsDBE',
					width: '30%'
				},
				{
					data: 'recordMaker'
				},
				{
					data: 'recordMakeDate'
				},
				{
					data: 'recordAuditor'
				},
				{
					data: 'recordAuditDate'
				}
			]
		}


		Fun_showRecordsLiteTable(recordsTableSQL, tasksTableInfo);

		// console.log("dataSelect.BTAcceptResult:" + dataSelect.BTAcceptResult);
		switch (dataSelect.BTAcceptResult) {
			case 0:

				$('#divTaskInfo input').attr("disabled", false);
				$('#divTaskInfo select').attr("disabled", false);
				$('#divTaskInfo textarea').attr("disabled", false);

				if (sessionName == $('#taskMaker').text()) {

					$("#BTNTaskSave").show();
				} else {
					$("#BTNTaskSave").hide();
				}


				$('#divTaskAccept input').attr("disabled", false);
				$('#divTaskAccept select').attr("disabled", false);
				$('#divTaskAccept textarea').attr("disabled", false);

				$('#modifyContent').val("");
				$('#functionsDBE').val("");

				$('#fileVersion').val("");
				$('#recordRemark').val("");

				$('#DivTaskAcceptBTNS').show();

				$('#codeAuditPanel').hide();
				// $('#taskRecordPanel').hide();

				break;
			case 1:
				$('#divTaskInfo input').attr("disabled", true);
				$('#divTaskInfo select').attr("disabled", true);
				$('#divTaskInfo textarea').attr("disabled", true);

				$("#BTNTaskSave").hide();

				$('#divTaskAccept input').attr("disabled", true);
				$('#divTaskAccept select').attr("disabled", true);
				$('#divTaskAccept textarea').attr("disabled", true);

				$('#DivTaskAcceptBTNS').hide();

				$('#codeAuditPanel').show();

				//有记录则隐藏

				let tableRecord = $('#tableRecords').DataTable();
				let RecordNum = (tableRecord.page.info()).recordsTotal; //总记录数

				if (RecordNum == 0) {
					$('#DIVRecordContent').show();

					$('#modifyContent').val("");
					$('#functionsDBE').val("");

					$('#fileVersion').val("");
					$('#recordRemark').val("");

					Fun_getSQLSelectDBData({
						SQL: "SQLSRStaffs"
					}, "#recordAuditor");
				} else {
					$('#DIVRecordContent').hide();
				}

				break;
			case 2:
				$('#divTaskInfo input').attr("disabled", true);
				$('#divTaskInfo select').attr("disabled", true);
				$('#divTaskInfo textarea').attr("disabled", true);

				$("#BTNTaskSave").hide();

				$('#divTaskAccept input').attr("disabled", true);
				$('#divTaskAccept select').attr("disabled", true);
				$('#divTaskAccept textarea').attr("disabled", true);

				$('#DivTaskAcceptBTNS').hide();

				$('#codeAuditPanel').hide();
				// $('#taskRecordPanel').hide();


				break;

		}

		//fillCodeAuditPanel--------

		fillCodeAuditPanel({
			BTID: dataSelect.BTID,
			BTVersion: dataSelect.BTVersion
		})

		//r-控制代码审核面板内容显示

		if (dataSelect.codeAuditor && dataSelect.BTAcceptResult == 1) {
			$('#codeAuditRecordDiv').show();
		} else {
			$('#codeAuditRecordDiv').hide();
		}

		//r-提交代码审核按钮显示控制
		if (dataSelect.taskStaff == sessionName) {
			$('#collapseCodeCheck input').attr("disabled", false);
			$('#collapseCodeCheck select').attr("disabled", false);
			$('#saveCodeInfoBtn').show();
			$('#defaultAuditorBtn').show();
			$('#agentAuditorBtn').show();

		} else {
			$('#collapseCodeCheck input').attr("disabled", true);
			$('#collapseCodeCheck select').attr("disabled", true);
			$('#saveCodeInfoBtn').hide();
			$('#defaultAuditorBtn').hide();
			$('#agentAuditorBtn').hide();
		}

		//r--开始代码审核按钮显示控制
		if (dataSelect.codeAuditor == sessionName) {
			$('#codeAuditRecordDiv').show();
			$('#addCodeAuditBtn').show();
		} else {
			$('#addCodeAuditBtn').hide();
		}








		if (dataSelect.codeAuditResult === '通过' && dataSelect.BTAcceptResult == 1) {
			$('#taskRecordPanel').show();
		} else {
			$('#taskRecordPanel').hide();
		}







	}

	//函数 -加载任务记录表格

	function Fun_showRecordsLiteTable(SQL, tableInfo) {

		//swal(JSON.stringify(DataPara));

		$(tableInfo.tableID).DataTable().destroy(); //销毁原数据表格,防止加载错误

		$(tableInfo.tableID).DataTable({
			ajax: {
				url: '/app/PM/getSQLDBData',
				data: SQL,
				async: false,
				dataSrc: ''
			},
			columns: tableInfo.columnsData,
			aaSorting: [0, 'desc'], //默认排序
			bAutoWidth: false, //取消自动宽度。
			paging: false, // 禁止分页
			bFilter: false, //去掉搜索框方法三：这种方法可以
			//	        bLengthChange: false,   //去掉每页显示多少条数据方法
			"language": languageCN
		});

		//		//判断是否选中数据-------
		//
		$(tableInfo.tableID + ' tbody').unbind(); //解除事件绑定,防止重复定义.

		var tableRecords = $(tableInfo.tableID).DataTable();

		//		 console.log("tableRecords:"+JSON.stringify(tableRecords));


		$(tableInfo.tableID + ' tbody').on('click', 'tr', function () {

			if ($(this).hasClass('selected')) {
				$(this).removeClass('selected');

				$('#DIVRecordContent').hide();

			} else {
				tableRecords.$('tr.selected').removeClass('selected');
				$(this).addClass('selected');

				let recordNum = (tableRecords.page.info()).recordsTotal; //总记录数

				if (recordNum != 0) {

					$('#DIVRecordContent').show();


					var dataSelectChoose = tableRecords.row('.selected').data();

					var dataSelectRecord = NulltoEmpty(dataSelectChoose);

					//				     console.log("dataSelectRecord11111:"+JSON.stringify(dataSelectRecord));

					$('#DIVRecordContent').show();


					$('#recordDBID').text(dataSelectRecord.DBID);

					$('#modifyContent').val(dataSelectRecord.modifyContent.replace(/<br\/>/g, '\n'));
					$('#functionsDBE').val(dataSelectRecord.functionsDBE.replace(/<br\/>/g, '\n'));


					$('#fileVersion').val(dataSelectRecord.fileVersion);
					$('#recordRemark').val(dataSelectRecord.recordRemark.replace(/<br\/>/g, '\n'));


					$('#div_previewImages').html("");
					$('#progressNumber').html("");
					$('#divFilesUploaded').html("");



					if (dataSelectRecord.taskFiles != "") {

						var taskFiles = JSON.parse(dataSelectRecord.taskFiles);
						if (taskFiles != null) {

							var fileLink = "";
							if (taskFiles.length > 0) {
								for (var i = 0; i < taskFiles.length; i++) {


									fileLink = fileLink + "<a  href=" + '/system.files.download/' + taskFiles[i]
										.fileKey + " download=" + taskFiles[i].fileName + ">" + "<span>" +
										taskFiles[i].fileName + "</span></a>" + " ; ";
								}
							}
							fileLink = fileLink.substr(0, fileLink.length - 3);


							var downloadurl = fileLink;
						} else {
							downloadurl = "";
						}
						$('#divFilesUploaded').html(downloadurl);
					}


					$('#recordMaker').text(dataSelectRecord.recordMaker);
					$('#recordMakeDate').text(dataSelectRecord.recordMakeDate);

					Fun_getSQLSelectDBData({
						SQL: "SQLSRStaffs"
					}, "#recordAuditor", dataSelectRecord.recordAuditor);

					//				     $('#recordAuditor').text(dataSelectRecord.recordAuditor);
					$('#recordAuditDate').text(dataSelectRecord.recordAuditDate);


					if (dataSelectRecord.recordAuditDate != "") {

						$('#DIVRecordContent input').attr("disabled", true);
						$('#DIVRecordContent select').attr("disabled", true);
						$('#DIVRecordContent textarea').attr("disabled", true);

						$("#BTNGetTaskAuditor").hide();

						$("#DivUploadBTNS").hide();
						$("#BTNTaskRecordSave").hide();
					} else {

						$('#DIVRecordContent select').attr("disabled", false);
						$('#DIVRecordContent textarea').attr("disabled", false);


						$("#BTNGetTaskAuditor").show();

						$("#DivUploadBTNS").show();
						$("#BTNTaskRecordSave").show();
					}



				}




			}
		});


	}

	//检查输入项
	function checkTaskInput() {

		if ($("#taskMHEName").val() == null || $("#taskMHEName").val() == "") {
			swal("机型未选择,请检查!");
			return false;
		} else if ($("#taskModel").val() == null || $("#taskModel").val() == "") {
			swal("系统未选择,请检查!");
			return false;
		} else if (getCheckBoxValue("modifyABE") == "") {
			swal("修改内容未选择,请检查!");
			return false;
		} else if ($("#taskStaff").val() == null || $("#taskStaff").val() == "") {
			swal("任务负责人未选则,请检查!");
			return false;
		} else if ($("#taskDBE").val() == "") {
			swal("任务说明未输入,请检查!");
			return false;
		}


		return true;

	}


	//检查确认输入项

	function checkAcceptInput() {



		if ($("#taskStaff").val() == null || $("#taskStaff").val() == "") {
			swal("任务负责人未选择,请检查!");
			return false;
		} else if ($("#taskOGNSystemVersion").val() == "") {
			swal("原系统版本必填,请检查!");
			return false;
		} else if ($('input:radio[name="FQCRequest"]:checked').val() === '1' && ($("FQCMaker").val() === null || $(
				"#FQCMaker").val() === "")) {
			swal("已申请FQC检测,请检查FQC检测人!");
			return false;
		} else if ($('#taskTypeText').text() === "APP" && ($("#IPQCMaker").val() === null || $("#IPQCMaker").val() ===
				"")) {
			swal("IPQC填单人未选择,请检查!");
			return false;
		}
		return true;
	}




	//检查输入项
	function checkRecordInput() {

		// console.log("isInternship(sessionName):" + isInternship(sessionName));

		if ($("#modifyContent").val() == "") {
			swal("修改内容未填写,请检查!");
			return false;
		} else if ($("#functionsDBE").val() == "") {
			swal("功能说明未填写,请检查!");
			return false;
		} else if ($("#fileVersion").val() == "") {
			swal("版本号未填写,请检查!");
			return false;
		} else if (isInternship(sessionName) && $('#recordAuditor option:selected').text() == sessionName) {
			swal("您现在处于实习期,不允许自我审核,请重新选择审核人!");
			return false;
		}


		return true;

	}

	//获取系统审核人

	var getTaskAuditor = function (modifyABE, staff) {

		let modifyABECheck = true;

		let arrCompare = ['ABE1', 'ABE3'];


		$("[name='modifyABE']:checked").each(function () {
			if (arrCompare.indexOf($(this).val()) > -1) {
				modifyABECheck = modifyABECheck && true;
			} else {
				modifyABECheck = modifyABECheck && false;
			}
		})

		// console.log("modifyABECheck:" + modifyABECheck);

		$.ajax({
			method: 'get',
			data: {
				SQL: "SQLGetUpAuditor",
				filter: "staffName='" + staff + "'"
			},
			url: "/app/PM/getSQLDBData",
			//        async:false, 
			success: function (data) {
				//       	 console.log("data555:"+JSON.stringify(data));
				if (data.length != 0 && data[0].upAuditor != "") {
					if (data[0].entryDays < 90) {
						Fun_getSQLSelectDBData({
							SQL: "SQLSRStaffs"
						}, "#recordAuditor", $('#taskMaker').text());
					} else if (data[0].entryDays > 90 && modifyABECheck) {
						Fun_getSQLSelectDBData({
							SQL: "SQLSRStaffs"
						}, "#recordAuditor", staff);
					} else {
						Fun_getSQLSelectDBData({
							SQL: "SQLSRStaffs"
						}, "#recordAuditor", data[0].upAuditor);
					}
				} else {
					swal('系统内无指定人,请选择!')
				}
			},
			error: function () {}
		})

	}


	//检查是否处于实习期
	var isInternship = function (staff, result) {

		$.ajax({
			method: 'get',
			data: {
				SQL: "SQLGetEntryDays",
				filter: "staffName='" + staff + "'"
			},
			url: "/app/PM/getSQLDBData",
			async: false,
			success: function (data) {
				// console.log("data:" + JSON.stringify(data));


				if (data.length != 0) {
					if (data[0].entryDays > 90) {

						result = false;
					} else {
						result = true;

					}

				}
			},
			error: function () {}
		})

		return result;
	}

	//更新计划单完成期限函数
	const checkAndUpdatePLDLimitDate = async (limtDate) => {
		var set = [];
		$('#tableTrackPLD tbody tr').each(function () {
			var row = [];
			$(this).find('td').each(function () {
				row.push($(this).text());
			});
			set.push(row);
		});

		// console.log('set', set[set.length - 1]);

		let BPID = set[set.length - 1][1]
		let maxVersion = set[set.length - 1][2]
		let pldLimitDate = set[set.length - 1][9]

		if (limtDate > pldLimitDate) {


			var PLDUpdData = {
				"DBTable": "ppm_bills_plan",
				"BillIDName": "BPID",
				"BillID": $('#taskBPID').text(),
				"limitDate": limtDate,
				"updateReason": "任务期限更新",
				"filter": "version = '" + maxVersion + "'"
			}

			var ajaxPLD = await $.ajax({
				method: 'post',
				url: '/app/PM/updBillStatus',
				data: PLDUpdData,
				success: function (data, textStatus) {},
				error: function (XMLHttpRequest, textStatus, errorThrown) {}
			});

		}
	}


	//显示审核规则表

	const showAuditRuleTable = ({
		taskType //任务类型
	}) => {
		//c-参数检查
		if (!taskType) {
			console.log('showAuditRuleTable 参数错误');
			return
		}

		//r-选择显示表
		switch (taskType) {
			case 'D':
				$("#dspCodeCheckRuleTable").show();
				$("#hmiCodeCheckRuleTable").hide();
				break;
			case 'H':
				$("#dspCodeCheckRuleTable").hide();
				$("#hmiCodeCheckRuleTable").show();
				break;
			default:
				$("#dspCodeCheckRuleTable").hide();
				$("#hmiCodeCheckRuleTable").hide();
				break;
		}
	}


	//页面加载函数---------------
	$(document).ready(function () {

		sessionName = "<%-locals.session.yjUser.Name%>";

		//	console.log("sessionName:"+sessionName);

		var undone = getQueryString("undone");

		switch (undone) {
			case "unAccept":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " taskStaff = '" + sessionName + "' AND BTAcceptResult =0",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "acceptNo":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " taskMaker = '" + sessionName + "' AND BTAcceptResult =2",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "unCodeSaveYes":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " taskStaff = '" + sessionName +
						"' AND BTAcceptResult =1 AND (  codeAdr is null or codeAdr ='')  ",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "unCodeAuditYes":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " codeAuditor = '" + sessionName + "' AND codeAuditResult  IS NULL ",
					"orderBy": " saveTimeStamp DESC"
				};
				break;

			case "unCodeAuditPass":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " taskStaff = '" + sessionName + "' AND codeAuditResult='未通过' ",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "unRecord":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " taskStaff = '" + sessionName +
						"' AND BTAcceptResult =1 AND recordStatus IS NULL AND codeAuditResult='通过'",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "unAudit":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " recordAuditor = '" + sessionName +
						"' AND BTAcceptResult=1 AND recordStatus='已登记,未审核' ",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "unPass":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": " taskStaff = '" + sessionName + "' AND BTStatus=4 ",
					"orderBy": " saveTimeStamp DESC"
				};
				break;
			case "all":
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"orderBy": " saveTimeStamp DESC"
				};
				$("#BTNFilterAll").addClass("active");
				break;
			default:
				//	    var tableSQL={"SQL":"SQLTableBillsTaskRecord","filter":" (taskStaff = '"+sessionName+"' OR BTAcceptor = '"+sessionName+"' OR IPQCMaker = '"+sessionName+"'  OR IPQCAuditor = '"+sessionName+"') AND BTStatus <>3","orderBy":" saveTimeStamp DESC"};
				var tableSQL = {
					"SQL": "SQLTableBillsTaskRecord",
					"filter": "BTStatus <> 3 ",
					"orderBy": " saveTimeStamp DESC"
				};
				$("#BTNFilterSimple").addClass("active");
				break;

		}


		//	if(undone=="true"){
		//		
		//		var tableSQL={"SQL":"SQLTableBillsTaskRecord","filter":" (taskStaff = '"+sessionName+"' OR BTAcceptor = '"+sessionName+"' OR IPQCMaker = '"+sessionName+"'  OR IPQCAuditor = '"+sessionName+"') AND BTStatus <>3","orderBy":" saveTimeStamp DESC"};
		//	}else{
		//		var tableSQL={"SQL":"SQLTableBillsTaskRecord","orderBy":" saveTimeStamp DESC"};
		//	}


		const tableInfo = {
			"tableID": "#billsTaskTable",
			"columnsData": [{
					data: 'saveTimeStamp',
					"visible": false
				},
				{
					data: 'DBID',
					"visible": false
				},
				{
					data: 'BTID'
				},
				{
					data: 'BTVersion'
				},
				{
					data: 'taskSortTypeText'
				},
				{
					data: 'taskCTRName'
				},

				{
					data: 'taskModel'
				},
				{
					data: 'taskStaff'
				},
				{
					data: 'taskLimitDate'
				},
				{
					data: 'BTAcceptResultText'
				},
				{
					data: 'recordStatus'
				},
				{
					data: 'recordAuditor'
				},
				{
					data: 'IPQCAuditResultText'
				},
				{
					data: 'BTStatusText'
				}
			]
		}


		Fun_showSQLTable(tableSQL, tableInfo)


		//判断是否选中数据-------
		var table = $('#billsTaskTable').DataTable();
		$('#billsTaskTable tbody').on('click', 'tr', function () {
			if ($(this).hasClass('selected')) {
				$(this).removeClass('selected');
			} else {
				table.$('tr.selected').removeClass('selected');
				$(this).addClass('selected');
			}

			var dataSelect = table.row('.selected').data();

		});

		//dbclick 测试判断是否选中数据-------

		$('#billsTaskTable tbody').on('dblclick', 'tr', function () {
			table.$('tr.selected').removeClass('selected');
			$(this).addClass('selected');
			$('#BTNTaskRecord').click();

		});


		//过滤按钮组

		$('#BTNFilterSimple').click(function () {

			window.location.href = '/app/PM/billsTask';

		});

		$('#BTNFilterAll').click(function () {

			window.location.href = '/app/PM/billsTask?undone=all';

		});




		//按钮-任务保存

		$('#BTNTaskSave').click(async function () {


			if (sessionName == $('#taskMaker').text()) {

				if (checkTaskInput()) {

					let taskMakeDate = $("#taskMakeDate").text();
					if (!taskMakeDate) {
						taskMakeDate = Ndate;
					}

					var taskData = {
						"DBTable": "ppm_bills_task",
						"DBID": $('#DBID').text(),
						//						"BTID":$('#BTID').text(),
						//						"BTVersion":0,
						//						"taskBPID":taskBPID,
						//						"taskCTRName":Fun_getSelectText($('#CTRName option:selected').text()),
						//						"taskSortType":$('input:radio[name="taskSortType"]:checked').val(),
						//						"taskSortTypeText":$('input:radio[name="taskSortType"]:checked').next("span").text(),
						//						"taskType":$('input:radio[name="taskType"]:checked').val(),
						//						"taskTypeText":$('input:radio[name="taskType"]:checked').next("span").text(),
						"taskMHEName": Fun_getSelectText($(
							'#taskMHEName option:selected').text()),
						//						"taskModel":Fun_getSelectText($('#taskModel option:selected').text()),
						"taskModel": $('#taskModel option:selected').text(),
						"taskOGNSystemVersion": $('#taskOGNSystemVersion').val(),
						"taskBugID": $('#taskBugID').val(),
						"taskStaff": $('#taskStaff option:selected').text(),
						"modifyABE": getCheckBoxValue('modifyABE'),
						"taskDBE": $('#taskDBE').val().replace(/\n|\r\n/g, '<br/>')
							.replace(/'/g, '"'),
						"taskLimitDate": $('#taskLimitDate').val(),
						"taskMaker": sessionName,
						"taskMakeDate": taskMakeDate
					}

					if ($('#BTVersion').text() !== '0') {
						await checkAndUpdatePLDLimitDate($('#taskLimitDate').val());

					}


					updDBData(taskData, "任务单数据");

					//如完成期限大于计划单完成期限,自动更新计划单完成期限


				}

			} else {
				swal("非发布人不允许修改!");
			}

		});

		//按钮-任务审核通过按钮
		$('#BTNTaskAcceptYes').click(async function () {


			if (checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "Task01")) {


				//c-人员检查
				if (sessionName != $('#taskStaff option:selected').text()) {
					swal("您不是该任务单的负责人,无法确认任务!");
					return
				}

				if (sessionName == $('#IPQCMaker option:selected').text()) {
					swal("IPQC已关闭自审,请选择其他审核人!");
					return
				}



				//增加完成期限提醒功能 外网确认问题临时去除测试
				if ($('#BTVersion').text() !== '0') {
					let rsOldLimitDate = await $.ajax({
						method: 'get',
						data: {
							"SQL": "select taskLimitDate from ppm_bills_task",
							"filter": "BTID='" + $('#BTID').text() + "' and BTVersion='" +
								parseInt($('#BTVersion').text() - 1) + "'"
						},
						url: "/app/PM/getSQLDBData",
						success: function (data) {
							// console.log("oldLimitDate:" + JSON.stringify(data));
							// // return data[0].taskLimitDate
						},
						error: function () {}
					})

					let oldTaskLimitDate = rsOldLimitDate[0].taskLimitDate;
					// console.log('oldTaskLimitDate', oldTaskLimitDate);

					if ($('#taskLimitDate').val() === oldTaskLimitDate) {
						if (confirm('是否需调整完成期限?')) {
							return;
						}
					}
				}



				if (checkAcceptInput()) {


					var msg = confirm("确认后即将开始任务单流程!");
					if (msg == true) {
						//do-自动更新计划单完成期限功能-2020-07-10


						// // alert('debug5')  外网确认异常问题点
						// let planData = await getBizDataBySQL({
						// 	SQL: "select version,limitDate from `ppm_bills_plan` where BPID='" +
						// 		$('#taskBPID').text() +
						// 		"' order by version desc limit 1"
						// })

						// console.log('planData', planData);

						console.log('debug5');

						// //备选方案
						// let planData = $.ajax({
						// 	method: 'get',
						// 	async: false, //必须同步
						// 	data: {
						// 		SQL: "select version,limitDate from `ppm_bills_plan` where BPID='" +
						// 			$('#taskBPID').text() +
						// 			"' order by version desc limit 1"
						// 	},
						// 	url: "/app/PM/getSQLDBData",
						// 	success: function (data) {
						// 		// console.log("oldLimitDate:" + JSON.stringify(data));
						// 		// // return data[0].taskLimitDate
						// 	},
						// 	error: function () {}
						// })
						//	alert('debug6')

						// let planData = $.ajax({
						// 	method: 'get',
						// 	async: false, //必须同步
						// 	data: {
						// 		SQL: "select version,limitDate from `ppm_bills_plan` where BPID='" +
						// 			$('#taskBPID').text() +
						// 			"' order by version desc limit 1"
						// 	},
						// 	url: "/app/PM/getSQLDBData",
						// 	success: function (data) {
						// 		// console.log("oldLimitDate:" + JSON.stringify(data));
						// 		// // return data[0].taskLimitDate
						// 	},
						// 	error: function () {}
						// })

						// console.log('planData', planData);
						let a = await postDBData({
							excuteSql: "select version,limitDate from `ppm_bills_plan` where BPID='" +
								$('#taskBPID').text() +
								"' order by version desc limit 1"
						})

					
						let planData = [{
							version: a[0],
							limitDate: a[1]
						}]
						



						// return

						// alert('debug6')

						// alert(JSON.stringify(planData))
						if ($('#taskLimitDate').val() > planData[0].limitDate) {
							let updatePlanLimitDate = {
								"DBTable": "ppm_bills_plan",
								"BillIDName": "BPID",
								"BillID": $('#taskBPID').text(),
								"limitDate": $('#taskLimitDate').val(),
								"filter": "version =" + planData[0].version,
							}

							$.ajax({
								method: 'post',
								url: '/app/PM/updBillStatus',
								data: updatePlanLimitDate,
								success: function (data, textStatus) {

								},
								error: function (XMLHttpRequest,
									textStatus,
									errorThrown) {}
							});
						}
						//do-自动更新计划单完成期限功能-2020-07-10

						var FQCRequest = $('input:radio[name="FQCRequest"]:checked')
							.val();

						if (FQCRequest == 1) {

							var acceptData = {
								"DBTable": "ppm_bills_task",
								"DBID": $('#DBID').text(),
								"taskStaff": $('#taskStaff option:selected')
									.text(),
								"taskDBE": $('#taskDBE').val().replace(/\n|\r\n/g,
										'<br/>')
									.replace(/'/g, '"'),
								"taskLimitDate": $('#taskLimitDate').val(),
								"BTAcceptOpinion": $('#BTAcceptOpinion').val()
									.replace(/\n|\r\n/g,
										'<br/>').replace(/'/g, '"'),
								"BTAcceptor": sessionName,
								"BTAcceptDate": Ndate,
								"FQCRequest": $(
										'input:radio[name="FQCRequest"]:checked')
									.val(),
								"FQCMaker": $('#FQCMaker option:selected').text(),
								"FQCRequestText": $(
										'input:radio[name="FQCRequest"]:checked')
									.next(
										"span").text(),
								"IPQCMaker": $('#IPQCMaker option:selected')
									.text(),
								"BTAcceptResult": 1,
								"BTAcceptResultText": "已确认",
								"BTStatus": 2,
								"BTStatusText": "进行中"
							}


							var PLDUpdData = {
								"DBTable": "ppm_bills_plan",
								"BillIDName": "BPID",
								"BillID": $('#taskBPID').text(),
								"FQCRequest": 1,
								"FQCStaff": $('#FQCMaker option:selected').text(),
								"FQCRequestText": "有"
							}


							var ajax1 = $.ajax({
								method: 'post',
								url: '/app/PM/updDBData',
								data: acceptData,
								success: function (data, textStatus) {},
								error: function (XMLHttpRequest, textStatus,
									errorThrown) {}
							});

							var ajax2 = $.ajax({
								method: 'post',
								url: '/app/PM/updBillStatus',
								data: PLDUpdData,
								success: function (data, textStatus) {},
								error: function (XMLHttpRequest, textStatus,
									errorThrown) {}
							});


							$.when(ajax1, ajax2).done(function () {
								swal("任务单确认状态已更新,计划单FQC申请更新!");


							});

							//updDBData(acceptData,"任务单确认状态");



						} else {
							var acceptData = {
								"DBTable": "ppm_bills_task",
								"DBID": $('#DBID').text(),
								"taskLimitDate": $('#taskLimitDate').val(),
								"BTAcceptOpinion": $('#BTAcceptOpinion').val()
									.replace(/\n|\r\n/g,
										'<br/>').replace(/'/g, '"'),
								"BTAcceptor": sessionName,
								"BTAcceptDate": Ndate,
								"FQCRequest": $(
										'input:radio[name="FQCRequest"]:checked')
									.val(),
								"FQCRequestText": $(
										'input:radio[name="FQCRequest"]:checked')
									.next(
										"span").text(),
								"taskStaff": $('#taskStaff option:selected')
									.text(),
								"IPQCMaker": $('#IPQCMaker option:selected')
									.text(),
								"BTAcceptResult": 1,
								"BTAcceptResultText": "已确认",
								"BTStatus": 2,
								"BTStatusText": "进行中"
							}

							$.ajax({
								method: 'post',
								url: '/app/PM/updDBData',
								data: acceptData,
								success: function (data, textStatus) {
									console.log("任务单确认状态已更新!");

								},
								error: function (XMLHttpRequest, textStatus,
									errorThrown) {}
							});
							//					updDBData(acceptData,"任务单确认状态");
						}


						if ($('#taskTypeText').text() != "APP") {



							let i = {
								confirmMsg: '内核任务已确认,是否发送钉钉消息?',
								DDMsg: {
									at: '"' + $('#taskMaker').text() + '"',
									msg: '@' + $('#taskMaker').text() +
										' 内核任务已确认,请新增内核计划!'
								},
								alertMsg: '发送成功'
							}
							let o = {
								f: io_refresh
							}
							aio_chooseSendDDMsg(i, o)

						} else {

							let msgnext = confirm("是否立即登记任务?");
							if (msgnext) {

								$('#divTaskInfo input').attr("disabled", true);
								$('#divTaskInfo select').attr("disabled", true);
								$('#divTaskInfo textarea').attr("disabled", true);

								$("#BTNTaskSave").hide();

								$('#divTaskAccept input').attr("disabled", true);
								$('#divTaskAccept select').attr("disabled", true);
								$('#divTaskAccept textarea').attr("disabled", true);

								$('#DivTaskAcceptBTNS').hide();


								$('#BTAcceptResultText').text("已确认");
								$('#BTAcceptDate').text(Ndate);

								$('#codeAuditPanel').show();

								if ($('#codeAuditResult').text() === '通过') {
									$('#taskRecordPanel').show();
								} else {
									$('#taskRecordPanel').hide();
								}

								// Fun_getSQLSelectDBData({
								// 	SQL: "SQLSRStaffs"
								// }, "#recordAuditor");

							} else {
								window.location.reload();
							}

						}

					}

				}


			}

		});


		//按钮-任务审核驳回按钮
		$('#BTNTaskAcceptNo').click(function () {

			if (checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "Task01")) {

				if (sessionName == $('#taskStaff option:selected').text()) {

					if ($('#BTAcceptOpinion').val() === '') {
						swal('驳回任务必须填写确认意见!')
					} else {

						var msg = confirm("驳回后该任务终止,是否立即审核驳回?");
						if (msg == true) {
							var acceptData = {
								"DBTable": "ppm_bills_task",
								"DBID": $('#DBID').text(),
								"BTAcceptOpinion": $('#BTAcceptOpinion').val().replace(
										/\n|\r\n/g,
										'<br/>')
									.replace(/'/g, '"'),
								"BTAcceptor": sessionName,
								"BTAcceptDate": Ndate,
								"taskStopDate": Ndate,
								"BTAcceptResult": 2,
								"BTAcceptResultText": "已驳回",
								"BTStatus": 4,
								"BTStatusText": "任务终止"
							}

							updDBData(acceptData, "任务单驳回状态");

						}
					}
				} else {
					swal("您不是该任务单的负责人,无法驳回任务!");
				}

			}
		});




		//按钮-记录任务单---------
		$('#BTNTaskRecord').click(function () {

			var dataSelect = table.row('.selected').data();
			if (dataSelect == undefined) {
				swal("操作提示:单击选中数据行后,再双击可快速打开表单!");
			} else {
				// console.log("dataSelect:" + JSON.stringify(dataSelect))
				Fun_taskRecordInit(dataSelect);

			}
		});

		//按钮-任务记录保存按钮
		$('#BTNTaskRecordSave').click(function () {

			//检查权限
			if (!checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "Task01")) {
				return;
			}

			//检查任务人
			if (sessionName !== $('#taskStaff option:selected').text()) {
				swal("您不是该任务单的负责人,无法登记任务!");
				return
			}

			//检查输入
			if (!checkRecordInput()) {
				return
			}

			//--------------------
			var taskFiles = [];

			$('#divFilesUploaded a').each(function () {
				var fileKey = $(this).attr('href').substring(23);
				var fileName = $(this).attr('download');

				var fileInfo = {
					"fileName": fileName,
					"fileKey": fileKey
				}

				taskFiles.push(fileInfo);
			});
			// 检查附件
			if (taskFiles.length == 0) {
				swal("未上传程序，请检查附件是否上传正确!");
				return
			}

			if (sessionName == $('#recordAuditor option:selected')
				.text()) {

				let msgNext = confirm("登记后是否自动审核,开始IPQC流程?");
				if (msgNext) {

					var recordData = {
						"DBTable": "ppm_bills_taskrecord",
						"DBID": $('#recordDBID').text(),
						"BTID": $('#BTID').text(),
						"BTVersion": $('#BTVersion').text(),
						"BPID": $('#taskBPID').text(),
						"modifyContent": $('#modifyContent').val()
							.replace(/\n|\r\n/g,
								'<br/>').replace(/'/g, '"'),
						"functionsDBE": $('#functionsDBE').val()
							.replace(/\n|\r\n/g,
								'<br/>').replace(/'/g, '"'),
						"recordRemark": $('#recordRemark').val()
							.replace(/\n|\r\n/g,
								'<br/>').replace(/'/g, '"'),
						"fileVersion": $('#fileVersion').val(),
						"taskFiles": JSON.stringify(taskFiles),
						"recordMaker": sessionName,
						"recordMakeDate": Ndate,
						"recordStatus": "已登记,已审核",
						"recordAuditor": $(
								'#recordAuditor option:selected')
							.text(),
						"recordAuditDate": Ndate
					}


					var ajax1 = $.ajax({
						method: 'post',
						url: '/app/PM/saveDBData',
						data: recordData,
						success: function (data) {
							//						            swal("成功数据:" + JSON.stringify(data));
							if (data.affectedRows != 0) {

								$('#DIVRecordContent').hide();
							}
						},
						error: function (err) {
							swal("失败数据:" + JSON.stringify(
								err));
						}
					});


					var taskData = {
						"DBTable": "ppm_bills_task",
						"BillIDName": "BTID",
						"BillID": $('#BTID').text(),
						"recordNum": 1,
						"IPQCStatus": "未填写"
					}

					var ajax2 = $.ajax({
						method: 'post',
						url: '/app/PM/updBillStatus',
						data: taskData,
						success: function (data, textStatus) {},
						error: function (XMLHttpRequest,
							textStatus,
							errorThrown) {}
					});

					$.when(ajax1, ajax2).done(function () {


						Fun_showRecordsLiteTable(recordsTableSQL,
							tasksTableInfo);
						$('#DIVRecordContent').hide();


						// let i = { alertMsg: "任务登记审核完成,可开始IPQC检测!" }
						// swalAndRefresh(i)

						let i = {
							confirmMsg: '任务登记审核完成,是否发送钉钉IPQC提醒消息?',
							DDMsg: {
								at: $(
										'#IPQCMaker option:selected')
									.text(),
								msg: "@" + $(
										'#IPQCMaker option:selected'
									)
									.text() +
									"任务记录已审核,请登陆系统填写IPQC!"
							}
						}
						let o = {
							f: io_refresh
						}

						aio_chooseSendDDMsg(i, o)


					});


				} else {
					var recordData = {
						"DBTable": "ppm_bills_taskrecord",
						"DBID": $('#recordDBID').text(),
						"BTID": $('#BTID').text(),
						"BTVersion": $('#BTVersion').text(),
						"BPID": $('#taskBPID').text(),
						"modifyContent": $('#modifyContent').val()
							.replace(/\n|\r\n/g,
								'<br/>').replace(/'/g, '"'),
						"functionsDBE": $('#functionsDBE').val()
							.replace(/\n|\r\n/g,
								'<br/>').replace(/'/g, '"'),
						"recordRemark": $('#recordRemark').val()
							.replace(/\n|\r\n/g,
								'<br/>').replace(/'/g, '"'),
						"fileVersion": $('#fileVersion').val(),
						"taskFiles": JSON.stringify(taskFiles),
						"recordMaker": sessionName,
						"recordMakeDate": Ndate,
						"recordStatus": "已登记,未审核",
						"recordAuditor": $(
								'#recordAuditor option:selected')
							.text()
					}

					// console.log("11111:" + JSON.stringify(recordData));

					Fun_saveTaskRecord(recordData);

					let i = {
						alertMsg: "保存任务记录成功!"
					}
					swalAndRefresh(i)
				}

			} else {

				var recordData = {
					"DBTable": "ppm_bills_taskrecord",
					"DBID": $('#recordDBID').text(),
					"BTID": $('#BTID').text(),
					"BTVersion": $('#BTVersion').text(),
					"BPID": $('#taskBPID').text(),
					"modifyContent": $('#modifyContent').val().replace(
						/\n|\r\n/g,
						'<br/>').replace(/'/g, '"'),
					"functionsDBE": $('#functionsDBE').val().replace(
						/\n|\r\n/g,
						'<br/>').replace(/'/g, '"'),
					"recordRemark": $('#recordRemark').val().replace(
						/\n|\r\n/g,
						'<br/>').replace(/'/g, '"'),
					"fileVersion": $('#fileVersion').val(),
					"taskFiles": JSON.stringify(taskFiles),
					"recordMaker": sessionName,
					"recordMakeDate": Ndate,
					"recordStatus": "已登记,未审核",
					"recordAuditor": $(
						'#recordAuditor option:selected').text()
				}


				Fun_saveTaskRecord(recordData);

				let i = {
					confirmMsg: '任务保存成功,是否发送钉钉审核提醒消息?',
					DDMsg: {
						at: $('#recordAuditor option:selected').text(),
						msg: "@" + $('#recordAuditor option:selected')
							.text() +
							"任务记录已保存,请登陆系统审核!"
					}
				}
				let o = {
					f: io_refresh
				}

				aio_chooseSendDDMsg(i, o)
			}
		});

		////详情按钮---------
		//$('#BTNInfo').click(function() {
		//    console.log("seclet: "+JSON.stringify(table.row('.selected').data()));
		//    // table.row('.selected').remove().draw( false );
		//    var dataSelect = table.row('.selected').data();
		//    if (dataSelect == undefined) {
		//        swal("请先点击表格中的表单!");
		//    } else {
		//    	
		//    	
		//    	$('#BillTask').modal('show')
		//    	Fun_winDetailInit(dataSelect);
		//    	
		//
		//    }
		//});

		//
		//
		//按钮-更新版本---------
		$('#BTNTaskUpdVer').click(async function () {

			//check-检查权限
			if (!checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "Task03")) {
				return
			}

			//check-检查选中
			var dataSelect = table.row('.selected').data();

			console.log('update dataSelect', dataSelect);

			// return

			if (dataSelect == undefined) {
				swal("请先选中需要更新版本的任务单!");
				return
			}

			//check-检查是否为任务人
			if (dataSelect.taskStaff !== sessionName) {
				swal('禁止更新非本人负责的任务单!')
				return
			}

			//check-关联内核任务
			if (dataSelect.T_BPID != null && dataSelect.T_BPID != "") {
				swal("该任务单内核流程已启动,不允许版本更新,变更信息请更新内核流程相关单据进行调整!");
				return
			}

			//check-更新确认
			var msg1 = confirm("风险操作！更新任务版本后,系统内任务单将被新版本替代!");
			if (!msg1) {
				return
			}



			//do-完成任务更新版本

			//确定代码审核状态

			let codeAuditResult = dataSelect.codeAuditResult;
			if (!confirm('保留代码审核结果?')) {
				codeAuditResult = ''
			}

			var newBTVersion = parseInt(dataSelect.BTVersion) + 1;
			var IPQCResultText = $('#IPQCResultText').text();
			if (dataSelect.BTStatusText === "任务完成") {
				var taskRepeat = 1;
				var taskRepeatText = '是';

				let oldTaskData = {
					"DBTable": "ppm_bills_task",
					"BillIDName": "BTID",
					"BillID": dataSelect.BTID,
					"BTStatus": 0,
					"BTStatusText": '废弃',
					"filter": "BTVersion <>" + newBTVersion,
				}

				let ajax1 = $.ajax({
					method: 'post',
					url: '/app/PM/updBillStatus',
					data: oldTaskData,
					success: function (data, textStatus) {},
					error: function (XMLHttpRequest,
						textStatus,
						errorThrown) {}
				});

				let newTaskData = {
					"DBTable": "ppm_bills_task",
					"BTID": dataSelect.BTID,
					"BTVersion": newBTVersion,
					"taskSortType": dataSelect.taskSortType,
					"taskSortTypeText": dataSelect
						.taskSortTypeText,
					"taskType": dataSelect.taskType,
					"taskTypeText": dataSelect.taskTypeText,
					"taskMHEName": dataSelect.taskMHEName,
					"taskModel": dataSelect.taskModel,
					"taskOGNSystemVersion": dataSelect
						.taskOGNSystemVersion,
					"taskBugID": dataSelect.taskBugID,
					"codeAdr": dataSelect.codeAdr,
					"codeAuditor": dataSelect.codeAuditor,
					"codeSaveDate": dataSelect.codeSaveDate,
					"codeAuditResult": codeAuditResult,
					"taskRepeat": taskRepeat,
					"taskRepeatText": taskRepeatText,
					"taskCTRName": dataSelect.taskCTRName,
					"taskStaff": dataSelect.taskStaff,
					"taskBPID": dataSelect.taskBPID,
					"modifyABE": dataSelect.modifyABE,
					"taskDBE": dataSelect.taskDBE,
					"taskLimitDate": dataSelect.taskLimitDate,
					"taskMaker": sessionName,
					// "taskMakeDate": Ndate,
					"taskMakeDate": dataSelect.taskMakeDate,
					"IPQCMaker": dataSelect.IPQCMaker,
					"FQCMaker": dataSelect.FQCMaker,
					"BTAcceptResult": 0,
					"BTStatus": 1,
					"BTStatusText": "新增"
				}

				let ajax2 = $.ajax({
					method: 'post',
					url: '/app/PM/addDBData',
					data: newTaskData,
					success: function (data) {

					},
					error: function (err) {

						if (err.responseText.indexOf("ER_DUP_ENTRY") != 1) {
							swal("系统中已存在重复数据,请检查!");
						} else {
							swal("失败数据:" + JSON.stringify(
								err));
						}


					}
				});

				//更新计划单信息,如果是已完成任务单跟新 则计划单已完成任务数减1


				let PLDUpdData = {
					"DBTable": "ppm_bills_plan",
					"BillIDName": "BPID",
					"BillID": dataSelect.taskBPID,
					"TaskNumDoneCancel": 1,
					// "WFStatus": 30
				}

				let ajax3 = $.ajax({
					method: 'post',
					url: '/app/PM/updBillStatus',
					data: PLDUpdData,
					success: function (data, textStatus) {},
					error: function (XMLHttpRequest,
						textStatus,
						errorThrown) {}
				});


				//给发布单新增重发布状态
				let PBHUpdData = {
					"DBTable": "ppm_bills_pbh",
					"BillIDName": "pbhBPID",
					"BillID": dataSelect.taskBPID,
					"emailResult": 3
				}

				let ajax4 = $.ajax({
					method: 'post',
					url: '/app/PM/updBillStatus',
					data: PBHUpdData,
					success: function (data, textStatus) {},
					error: function (XMLHttpRequest,
						textStatus,
						errorThrown) {}
				});

				$.when(ajax1, ajax2, ajax3, ajax4).done(function () {


					// let i = {
					// 	alertMsg: "更新版本成功!"
					// }
					// swalAndRefresh(i)


					// $('#BillPLD').modal('hide');

					let i = {
						msg: '更新版本成功,请填写更新原因!',
						updateParams: {
							"DBTable": "ppm_bills_task",
							"BillIDName": "BTID",
							"BillID": dataSelect.BTID,
							"updateReason": '',
							"filter": "BTVersion =" +
								dataSelect
								.BTVersion

						}
					}

					updateAndWriteReason(i);

				});


			}

			//do-未完成任务更新版本
			if (dataSelect.BTStatusText !== "任务完成") {

				var taskRepeat = 0;
				var taskRepeatText = '否';

				let oldTaskData = {
					"DBTable": "ppm_bills_task",
					"BillIDName": "BTID",
					"BillID": dataSelect.BTID,
					"BTStatus": 0,
					"BTStatusText": '废弃',
					"filter": "BTVersion <>" + newBTVersion,
				}

				let ajax1 = $.ajax({
					method: 'post',
					url: '/app/PM/updBillStatus',
					data: oldTaskData,
					success: function (data, textStatus) {},
					error: function (XMLHttpRequest,
						textStatus,
						errorThrown) {}
				});

				let newTaskData = {
					"DBTable": "ppm_bills_task",
					"BTID": dataSelect.BTID,
					"BTVersion": newBTVersion,
					"taskSortType": dataSelect.taskSortType,
					"taskSortTypeText": dataSelect
						.taskSortTypeText,
					"taskType": dataSelect.taskType,
					"taskTypeText": dataSelect.taskTypeText,
					"taskMHEName": dataSelect.taskMHEName,
					"taskModel": dataSelect.taskModel,
					"taskOGNSystemVersion": dataSelect
						.taskOGNSystemVersion,
					"taskBugID": dataSelect.taskBugID,
					"codeAdr": dataSelect.codeAdr,
					"codeAuditor": dataSelect.codeAuditor,
					"codeSaveDate": dataSelect.codeSaveDate,
					"codeAuditResult": codeAuditResult,
					"taskRepeat": taskRepeat,
					"taskRepeatText": taskRepeatText,
					"taskCTRName": dataSelect.taskCTRName,
					"taskStaff": dataSelect.taskStaff,
					"taskBPID": dataSelect.taskBPID,
					"modifyABE": dataSelect.modifyABE,
					"taskDBE": dataSelect.taskDBE,
					"taskLimitDate": dataSelect.taskLimitDate,
					"taskMaker": sessionName,
					"taskMakeDate": dataSelect.taskMakeDate,
					"IPQCMaker": dataSelect.IPQCMaker,
					"FQCMaker": dataSelect.FQCMaker,
					"BTAcceptResult": 0,
					"BTStatus": 1,
					"BTStatusText": "新增"
				}

				let ajax2 = $.ajax({
					method: 'post',
					url: '/app/PM/addDBData',
					data: newTaskData,
					success: function (data) {

					},
					error: function (err) {

						if (err.responseText.indexOf(
								"ER_DUP_ENTRY") != -
							1) {
							swal("系统中已存在重复数据,请检查!");
						} else {
							swal("失败数据:" + JSON.stringify(
								err));
						}
					}
				});

				//更新计划单信息,如果是已完成任务单跟新 则计划单已完成任务数减1

				$.when(ajax1, ajax2).done(function () {


					// let i = {
					// 	alertMsg: "更新版本成功!"
					// }
					// swalAndRefresh(i)

					let i = {
						msg: '更新版本成功,请填写更新原因!',
						updateParams: {
							"DBTable": "ppm_bills_task",
							"BillIDName": "BTID",
							"BillID": dataSelect.BTID,
							"updateReason": '',
							"filter": "BTVersion =" +
								dataSelect
								.BTVersion

						}
					}

					updateAndWriteReason(i);

				});

			}


		});



		//按钮-添加记录
		$('#BTNTaskRecordAdd').click(function () {

			//c-检查是否为任务人
			if (sessionName !== $('#taskStaff option:selected').text()) {
				swal('非任务人无法添加任务记录')
				return
			}

			//c-代码审查通过判定
			let dataSelect = table.row('.selected').data();

			if (dataSelect.codeAuditResult !== '通过') {
				swal('该任务单未通过代码审核,无法添加任务记录,请通过后重试')
				return
			}

			//c-任务状态检测
			if (dataSelect.BTStatusText !== '进行中') {
				swal('无法添加记录,请更新版本!')
				return
			}

			let tableRecord = $('#tableRecords').DataTable();
			let RecordNum = (tableRecord.page.info()).recordsTotal; //总记录数


			if (RecordNum == 0) {

				$('#DIVRecordContent').show();

				$('#recordDBID').text("");

				$('#modifyContent').val("");
				$('#functionsDBE').val("");
				$('#recordRemark').val("");
				$('#fileVersion').val("");

				$('#recordMaker').text("");
				$('#recordMakeDate').text("");

				//	    Fun_getSQLSelectDBData({SQL:"SQLSRStaffs"},"#recordAuditor",sessionName);
				//	    $('#recordAuditor').text("");
				$('#recordAuditDate').text("");

				$('#div_previewImages').html("");
				$('#progressNumber').html("");
				$('#divFilesUploaded').html("");
			} else {
				swal("暂不开放多记录功能,此任务已有登记记录,请勿重复登记!");
			}
		});

		//按钮-记录审核按钮
		$('#BTNTaskRecordAudit').click(function () {

			var tableRecords = $("#tableRecords").DataTable();

			var dataSelectRecord = tableRecords.row('.selected').data();

			//	console.log("dataSelectRecord:"+JSON.stringify(dataSelectRecord));


			if (dataSelectRecord == undefined) {
				swal("当前未选择任何记录,请先点击需要审核的记录!");
			} else {

				if (dataSelectRecord.recordAuditDate != "") {
					swal("该记录已审核,无需再次审核!");
				} else {

					if (sessionName == dataSelectRecord.recordAuditor) {
						var msg = confirm("审核后无法再次进行任务登记,如任务记录有误,请修改后再审核,是否立即审核通过?");
						if (msg == true) {

							var recordData = {
								"DBTable": "ppm_bills_taskrecord",
								"DBID": $('#recordDBID').text(),
								"recordAuditor": sessionName,
								"recordStatus": "已登记,已审核",
								"recordAuditDate": Ndate
							}


							var taskData = {
								"DBTable": "ppm_bills_task",
								"BillIDName": "BTID",
								"BillID": $('#BTID').text(),
								"recordNum": 1,
								// "taskFinishDate": Ndate,
								"IPQCStatus": "未填写"
							}



							var ajax1 = $.ajax({
								method: 'post',
								url: '/app/PM/updDBData',
								data: recordData,
								success: function (data, textStatus) {},
								error: function (XMLHttpRequest, textStatus,
									errorThrown) {}
							});

							var ajax2 = $.ajax({
								method: 'post',
								url: '/app/PM/updBillStatus',
								data: taskData,
								success: function (data, textStatus) {},
								error: function (XMLHttpRequest, textStatus,
									errorThrown) {}
							});


							$.when(ajax1, ajax2).done(function () {

								Fun_showRecordsLiteTable(recordsTableSQL,
									tasksTableInfo);
								//						          	$('#BTNTaskRecordAdd').click();
								$('#DIVRecordContent').hide();

								// let i = { alertMsg: "任务登记审核完成,可开始IPQC检测!" }
								// swalAndRefresh(i)

								let i = {
									confirmMsg: '任务登记审核完成,是否发送钉钉IPQC提醒消息?',
									DDMsg: {
										at: $('#IPQCMaker option:selected')
											.text(),
										msg: "@" + $(
												'#IPQCMaker option:selected')
											.text() +
											"任务记录已审核,请登陆系统填写IPQC!"
									}
								}
								let o = {
									f: io_refresh
								}

								aio_chooseSendDDMsg(i, o)



							});
						}


					} else {
						swal("您不是该记录的指定审核人,无法审核!");
					}



				}

			}

		});



		//获取任务单审核人
		$('#BTNGetTaskAuditor').click(function () {

			getTaskAuditor($("input[name='modifyABE']:checked"), sessionName);

		});


		//按钮-表单关闭按钮,添加刷新数据功能
		$('#BTNFormClose').click(function () {
			window.location.reload();
		});


		$('#BTNModelClose').click(function () {
			window.location.reload();
		});

		//按钮-流程跟踪
		$('#BTNTrack').click(function () {
			window.location.href = '/app/PM/billsTrack?BPID=' + $('#taskBPID').text();
		});


		//FQC申请radio 控制


		$('input[type=radio][name=FQCRequest]').change(function () {


			let FQCRequest = $('input:radio[name="FQCRequest"]:checked').val();
			if (FQCRequest === '1') {
				$("#divFQCMaker").show();
				Fun_getSQLSelectDBData({
					SQL: "SQLSRStaffs"
				}, "#FQCMaker", "刘梦");

			} else {
				$("#divFQCMaker").hide();
			}

		})


		loadBootStrapSelector({
			elementId: 'codeAuditor',
			sqlParams: {
				sql: 'getStaffSelector'
			},
			// initValue:'中国,北京'
		})

		//saveCodeInfoBtn 保存代码检查信息按钮
		$('#saveCodeInfoBtn').click(async function () {
			//c-检查是否为任务人
			if (sessionName !== $('#taskStaff option:selected').text()) {
				swal('非任务人无法保存')
				return
			}





			//c-检查代码审核结果状态
			if ($('#codeAuditResult').text() === '通过') {
				if (!confirm('该任务单代码审核已通过,保存会清空结果,需要重新代码审核,是否继续?')) {
					return
				}
			}

			//c-必填
			// console.log($('#codeAdr').text());
			// console.log($('#codeAuditor option:selected').val());
			// console.log(!$('#codeAdr').text() && $('#codeAuditor option:selected').val());
			if (!$('#codeAdr').val()) {
				swal('出货目录必填')
				return
			}

			if (!$('#codeAuditor option:selected').val()) {
				swal('审核人必填')
				return
			}

			//c-检查是否选择自审
			if ($('#codeAuditor option:selected').val() === sessionName) {
				swal('代码审核已关闭自审,请选择其他代码审核人!')
				return
			}


			//d-保存代码信息
			let codeInfo = {
				BTID: $('#BTID').text(),
				BTVersion: $('#BTVersion').text(),
				codeAdr: $('#codeAdr').val(),
				codeAuditor: $('#codeAuditor option:selected').val(),
				codeAuditResult: '',
				codeSaveDate: Ndate,
			}

			let rc = await postDBData({
				sql: 'update',
				params: {
					tableId: 'ppm_bills_task',
					data: [codeInfo],
					key: ['BTID', 'BTVersion']
				}
			})

			if (!rc) {
				swal('保存异常')
				return
			}

			//d-发送提醒
			if (!confirm('保存成功,是否立即发送系统消息提醒代码审核人?')) {
				$('#BillTask').modal('hide');
				return
			}

			let rs = await sendDDMsg({
				at: $('#codeAuditor option:selected').text(),
				msg: '@' + $('#codeAuditor option:selected').text() + ',任务单号:' + $('#BTID')
					.text() + ',客户:' + $('#taskCTRName').text() +
					',代码已提交,请进行代码审核!'
			})

			// console.log('rs', rs);

			if (rs) {
				swal('发送成功').then((value) => {
					io_refresh()
				})
			}
			// io_refresh()



		})

		//defaultAuditorBtn 默认检查人按钮
		$('#defaultAuditorBtn').click(async function () {
			let codeAuditor = await getDataBySql({
				sql: 'getCodeAuditor',
				params: {
					filter: 'programmer="' + $('#taskStaff option:selected').text() + '"'
				}
			})

			if (codeAuditor.length === 0) {
				console.log('codeAuditor 未找到数据');
				return
			}
			$("#codeAuditor").selectpicker('val', codeAuditor[0].codeAuditor)

		});


		//agentAuditorBtn 代理检查人按钮
		$('#agentAuditorBtn').click(async function () {
			let codeAuditor = await getDataBySql({
				sql: 'getCodeAuditor',
				params: {
					filter: 'programmer="' + $('#taskStaff option:selected').text() + '"'
				}
			})

			if (codeAuditor.length === 0) {
				console.log('codeAuditor 未找到数据');
				return
			}
			$("#codeAuditor").selectpicker('val', codeAuditor[0].agentAuditor)

		});

		// // 提醒审核代码按钮

		// $('#codeAuditorRemindBtn').click(async function () {
		// 	let rs = await sendDDMsg({
		// 		at: $('#codeAuditor option:selected').text(),
		// 		msg: '@' + $('#codeAuditor option:selected').text() + ',任务单号:' + $('#BTID')
		// 			.text() + ',客户:' + $('#taskCTRName').text() +
		// 			',代码已提交,请进行代码审核!'
		// 	})

		// 	// console.log('rs', rs);

		// 	if (rs) {
		// 		swal('发送成功').then((value) => {
		// 			io_refresh()
		// 		})
		// 	}
		// 	// io_refresh()


		// });

		//addCodeAuditBtn 检查项目按钮
		$('#addCodeAuditBtn').click(function () {


			//c-检查是否为任务人
			let table = $('#billsTaskTable').DataTable();
			let dataSelect = table.row('.selected').data();

			if (sessionName !== dataSelect.codeAuditor) {
				swal('非指定检查人,无法添加审核记录')
				return
			}

			showAuditRuleTable({
				taskType: $('#taskSortType').text()
			})

			$('#codeAuditRowId').text('')
			$("input:radio[name=codeAduditResult][value=未通过]").prop("checked",
				true);
			$('#codeAuditRemark').val('')
			$('#codeCheckRuleModal').modal('show');
		});

		//saveCodeAuditRecordBtn 保存代码审查记录按钮
		$('#saveCodeAuditRecordBtn').click(async function () {

			//c-检查是否为任务记录人

			let table = $('#codeCheckRecordTable').DataTable();
			let rowSelect = table.row('.selected').data();

			if (rowSelect) {
				if (sessionName !== rowSelect.codeAuditor) {
					swal('您不是该审核记录的检查人,无法保存更新!')
					return
				}
			}


			let rowId = $('#codeAuditRowId').text()
			if (!rowId) {
				rowId = $("#codeCheckRecordTable tbody tr").size() + 1;
			}

			let codeType = '';
			switch ($('#taskSortType').text()) {
				case 'D':
					codeType = 'DSP'
					break;
				case 'H':
					codeType = 'HMI'
					break;
			}

			let codeAuditRecord = {
				// DBID: $('#codeAuditDBID').text(),
				BPID: $('#taskBPID').text(),
				BTID: $('#BTID').text(),
				BTVersion: $('#BTVersion').text(),
				rowId: rowId,
				codeType: codeType,
				codeAuditor: sessionName,
				result: $('input:radio[name="codeAduditResult"]:checked').val(),
				remark: $('#codeAuditRemark').val(),
				saveDate: Ndate
			}

			let rs = await postDBData({
				sql: 'replace',
				params: {
					tableId: 'ppm_bills_codeaudit',
					data: [codeAuditRecord]
				}
			})

			let codeInfo = {
				BTID: $('#BTID').text(),
				BTVersion: $('#BTVersion').text(),
				codeAuditor: sessionName,
				codeAuditResult: $('input:radio[name="codeAduditResult"]:checked').val(),
			}


			let rc = await postDBData({
				sql: 'update',
				params: {
					tableId: 'ppm_bills_task',
					data: [codeInfo],
					key: ['BTID', 'BTVersion']
				}
			})

			if (rs.affectedRows > 0 && rc.affectedRows > 0) {
				if (confirm('添加审核记录成功,是否通知任务人?')) {
					let DDMsg = $('input:radio[name="codeAduditResult"]:checked').val() === '通过' ? {
						at: $('#taskStaff option:selected').text(),
						msg: '@' + $('#taskStaff option:selected').text() + ', 任务单号:' +
							$('#BTID').text() + ',客户:' + $('#taskCTRName').text() +
							',代码审核通过,请进行后续操作'
					} : {
						at: $('#codeAuditor option:selected').text(),
						msg: '@' + $('#taskStaff option:selected').text() + ', 任务单号:' +
							$('#BTID').text() + ',客户:' + $('#taskCTRName').text() +
							',代码审核未通过,请修正'
					}
					let rs = await sendDDMsg(DDMsg)

					if (rs) {
						swal('发送成功').then((value) => {
							io_refresh()
						})
					}
				}
			} else {
				alert('添加审核记录失败')
			}

			await loadCodeAuditRecordTable({
				BTID: $('#BTID').text(),
				BTVersion: $('#BTVersion').text()
			})
			$('#codeCheckRuleModal').modal('hide');

		});


		// 处理多model 滚动失效问题
		$('#codeCheckRuleModal').on('hidden.bs.modal', function () {
			$(this).removeData('bs.modal');
			$(document.body).addClass("modal-open");
		})


	});
</script>