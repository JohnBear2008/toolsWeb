<!-- CSS -->
<link rel="stylesheet" type="text/css" href="/css/PM/PMContent.css">
<link rel="stylesheet" type="text/css" href="/css/PM/DataTables/Bootstrap-3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/css/PM/DataTables/DataTables-1.10.18/css/dataTables.bootstrap.css">
<link href="/css/PM/datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen">
<link rel="stylesheet" href="/css/PM/bootstrap-select.min.css" />


<!-- JS  -->

<script src="/css/PM/DataTables/Bootstrap-3.3.7/js/bootstrap.min.js"></script>
<script src="/css/PM/bootstrap-select.min.js"></script>
<script type="text/javascript" src="/css/PM/datetimepicker/bootstrap-datetimepicker.min.js" charset="UTF-8"></script>
<script type="text/javascript" src="/css/PM/datetimepicker/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>

<script type="text/javascript" src="/css/PM/DataTables/DataTables-1.10.18/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/css/PM/DataTables/DataTables-1.10.18/js/dataTables.bootstrap.min.js"></script>
<script src="/js/PM/FileSaver.min.js"></script>
<script src="/js/PM/tableExport.js"></script>
<script src="/js/PM/PMfuns.js"></script>


<script src="/js/sweetalert.min.js"></script>
<script src="/public/funs.js"></script>

<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>



<div class="divcontent">
	<h1>信息管理-T任务单</h1>
	<hr>

	<!-- 操作区（按钮等） -->
	<div class="lineitem">
		<!-- 按钮触发模态框 -->

		<div class="btn-group" style="margin-left:20px">
			<button id="BTNFilterAll" class="btn btn-default">全部模式</button>
			<button id="BTNFilterHistory" class="btn btn-default">归档模式</button>
		</div>

		<div class="btn-group" id='BTNGroupFilter'>
			<button type="text" class="btn btn-info" disabled="disabled">过滤</button>
			<button id="BTNFitlerWeek" type="button" class="btn btn-default">本周</button>
			<button id="BTNFitlerMonth" type="button" class="btn btn-default">本月</button>
			<button id="BTNFitlerYear" type="button" class="btn btn-default">本年</button>
			<button id="BTNFitlerAll" type="button" class="btn btn-default">全时间段</button>
			<button id="BTNFitlerDiv" type="button" class="btn btn-default">自定义</button>
		</div>

		<div class="btn-group">
			<button type="text" class="btn btn-info" disabled="disabled">报表</button>
			<button id="BTNReport1" class="btn btn-default">延误率</button>
			<button id="BTNReport2" class="btn btn-default">不良率</button>
		</div>

		<div class="btn-group">
			<button type="text" class="btn btn-info" disabled="disabled">操作</button>
			<button id="BTNInfo" class="btn btn-default">查看详情</button>
			<button id="BTNExportExcel" class="btn btn-default">导出数据</button>
			<!-- <button id="BTNReTrack" class="btn btn-danger">恢复计划</button> -->
		</div>




		<a href="/app/PM/workCenter"><button id="BTNWorkCenter" class="btn btn-success"
				style="float:right">个人中心</button></a>
		<!-- 模态框（Modal） -->
		<div class="modal fade" id="BillPLD" tabindex="-1" role="dialog" aria-labelledby="BillPLDLabel"
			aria-hidden="true">
			<div class="modal-dialog" style="width:90%">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						<h4 class="modal-title" id="BillPLDLabel">T进度信息汇总</h4>
					</div>
					<div class="modal-body">



						<div class="panel panel-info" style="width:100%">

							<!--------------panel--------------------->
							<div class="panel-heading">
								<h3 class="panel-title">T计划单信息</h3>
							</div>
							<div class="panel-body">

								<table id="tableTrackPLD" class="table table-bordered">
									<thead></thead>

									<tbody></tbody>
								</table>

							</div>
							<!--------------panel--------------------->
							<!--------------panel--------------------->
							<div class="panel-heading">
								<h3 class="panel-title">T方案单信息</h3>
							</div>
							<div class="panel-body">

								<table id="tableTrackBPT" class="table table-bordered">
									<thead></thead>
									<tbody></tbody>
								</table>



							</div>
							<!--------------panel--------------------->
							<!--------------panel--------------------->
							<div class="panel-heading">
								<h3 class="panel-title">T任务单信息</h3>
							</div>

							<div class="panel-body">
								<table id="tableTrackTask" class="table table-bordered">
									<thead></thead>
									<tbody></tbody>
								</table>


							</div>
							<!--------------panel--------------------->
							<!--------------panel--------------------->
							<div class="panel-heading">
								<h3 class="panel-title">TFQC信息</h3>
							</div>

							<div class="panel-body">

								<table id="tableTrackFQC" class="table table-bordered">
									<thead></thead>
									<tbody></tbody>
								</table>


							</div>
							<!--------------panel--------------------->
							<!--------------panel--------------------->
							<div class="panel-heading">
								<h3 class="panel-title">T发布单信息</h3>
							</div>

							<div class="panel-body">
								<table id="tableTrackPBH" class="table table-bordered">
									<thead></thead>
									<tbody></tbody>
								</table>

							</div>
							<!--------------panel--------------------->

						</div>

					</div>
					<div class="modal-footer">
						<button id="BTNFormClose" type="button" class="btn btn-default" data-dismiss="modal">关闭</button>

					</div>
				</div><!-- /.modal-content -->
			</div><!-- /.modal -->
		</div>

	</div>



	<br />

	<!--数据呈现区-->
	<table id="tasksTrackTable" class="table table-striped table-bordered">
		<thead>
			<tr>
				<th>数据库ID</th>
				<th>任务单号</th>
				<th>最大版本号</th>
				<th>计划单号</th>
				<th>客户简称</th>
				<th>任务类型</th>
				<th>任务负责人</th>
				<th>开始时间</th>
				<th>完成时间</th>
				<th>程序索引</th>
				<th>归档类型</th>


			</tr>
		</thead>
	</table>

	<!-- 点击详情后弹出的窗口 -->
	<div id="winDetail" class="easyui-window" title="表单详情" closed="true" style="width:80%;height:800px;">

		<table id="tableDetail" class="table table-bordered">

		</table>

	</div>

	<!-- 点击报告详情后弹出的窗口 -->
	<div id="reportDetail" class="easyui-window" title="report" closed="true" style="width:600px;height:500px;">


		<form style="padding:10px 50px;">



			<div class="form-group">
				时间段 :<span id="spanDateRange">
			</div>

			<div class="form-group">
				总单数 :<span id="spanTotalBillNum">
			</div>
			<div class="form-group">
				延误单数 :<span id="spanDelayBillNum">
			</div>

			<div class="form-group">
				延误率 :<span id="spanDelayRate">
			</div>

			<div class="form-group">
				<table>
				</table>
			</div>

			<div style="padding:5px;text-align:center;">
				<a id="BTNSendReport" 　href="#" class="easyui-linkbutton" icon="icon-ok">OK</a>
			</div>














		</form>

	</div>



</div>



<!-- 点击自定义过滤弹出的窗口 -->
<div id="DivFilter" class="easyui-window" title="自定义过滤器" closed="true" style="width:60%;height:50%;">
	<form style="padding:10px 50px;">


		<!----newfilter----------------------->

		<!-------------------------------------------------------------------------->


		<div class="form-horizontal">




			<div class="form-group">

				<label class="col-sm-2 control-label" for="name">客户:</label>
				<div class="col-sm-3 ">
					<select id="CTRName" class="selectpicker" data-live-search="true" data-dropup-auto="false">
					</select>

				</div>

				<label class="col-sm-2 control-label" for="name">任务人:</label>
				<div class="col-sm-3 ">
					<select id="taskStaff" class="selectpicker" data-live-search="true" data-dropup-auto="false">
					</select>
				</div>






			</div>



			<!-------------------------------------------------------------------------->
			<div class="form-group">

				<label class="col-sm-2 control-label" for="name">机型:</label>
				<div class="col-sm-3 ">
					<select id="taskMHEName" class="selectpicker" data-live-search="true" data-dropup-auto="false">
					</select>
				</div>


				<label class="col-sm-2 control-label" for="name">系统:</label>
				<div class="col-sm-3 ">
					<select id="taskModel" class="selectpicker" data-live-search="true" data-dropup-auto="false">
					</select>
				</div>

			</div>

			<!-------------------------------------------------------------------------->



			<!-------------------------------------------------------------------------->
			<div class="form-group">

				<label for="taskMakeDate" class="col-sm-2 control-label">开始日期范围:</label>
				<div class="col-sm-3 ">
					<div class="input-group date form_date " data-date="" data-date-format="yyyy-mm-dd"
						data-link-field="taskMakeDateB" data-link-format="yyyy-mm-dd">
						<input id="taskMakeDateB" class="form-control " size="16" type="text" value="" readonly>
						<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
					</div>
					<input type="hidden" id="taskMakeDateB" value="" />
				</div>

				<div class="col-sm-3 ">

					<div class="input-group date form_date " data-date="" data-date-format="yyyy-mm-dd"
						data-link-field="taskMakeDateE" data-link-format="yyyy-mm-dd">
						<input id="taskMakeDateE" class="form-control " size="16" type="text" value="" readonly>
						<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
					</div>
					<input type="hidden" id="taskMakeDateE" value="" />
				</div>


			</div>

			<!-------------------------------------------------------------------------->
			<div class="form-group">

				<label for="taskMakeDate" class="col-sm-2 control-label">完成日期范围:</label>
				<div class="col-sm-3 ">
					<div class="input-group date form_date " data-date="" data-date-format="yyyy-mm-dd"
						data-link-field="taskFinishDateB" data-link-format="yyyy-mm-dd">
						<input id="taskFinishDateB" class="form-control " size="16" type="text" value="" readonly>
						<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
					</div>
					<input type="hidden" id="taskFinishDateB" value="" />
				</div>

				<div class="col-sm-3 ">

					<div class="input-group date form_date " data-date="" data-date-format="yyyy-mm-dd"
						data-link-field="taskFinishDateE" data-link-format="yyyy-mm-dd">
						<input id="taskFinishDateE" class="form-control " size="16" type="text" value="" readonly>
						<span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
					</div>
					<input type="hidden" id="taskFinishDateE" value="" />
				</div>


			</div>

			<div class="form-group">
				<label class="col-sm-2 control-label"></label>
				<div class="col-sm-3 ">
					<button id="FilterComfirmBtnN" type="button" class="btn btn-primary">确认</button>
					<button id="FilterCancelBtnN" type="button" class="btn btn-warning">清空</button>
				</div>

			</div>



		</div>
		<!----newfilter----------------------->






	</form>
</div>

<!-- 点击导出excel弹出的窗口 -->
<div id="winExprotExcel" class="easyui-window" title="表单详情" closed="true"
	style="width:90%;height:800px;overflow-x: auto;">

	<table id="tableExcelExport" class="table table-bordered">
		<thead>
			<tr>
				<th>数据库ID</th>
				<th>任务单号</th>
				<th>最大版本号</th>
				<th>计划单号</th>
				<th>客户简称</th>
				<th>任务类型</th>
				<th>机型</th>
				<th>系统</th>
				<th>任务负责人</th>
				<th>任务期限</th>
				<th>开始时间</th>
				<th>完成时间</th>
				<th>终止时间</th>
				<th>任务说明</th>
				<th>修改内容</th>
				<th>功能说明</th>
				<th>IPQC制单人</th>
				<th>IPQC结果</th>
				<th>任务状态</th>
				<th>归档类型</th>

			</tr>
		</thead>
	</table>

</div>


</div>


</div>


<script>
	//函数--在表格末尾加速查看按钮,扩展查看详情



	//根据获得的DBID 详情加载
	function getDBIDInfo(tableName, DBID) {



		//	$.ajax({
		//        method:'get',
		//        data:selectPara,
		//        url:"/app/PM/getSelectDBData",
		//        success:function(data){
		// 
		//        },
		//        error:function(){}
		//    })

		$('#winDetail').window('open');

		switch (tableName) {
			case 'ppm_bills_plan_t':

				let SQLParamPLD = {
					"tableName": "ppm_bills_plan_t",
					"titles": [
						"BPID",
						"version",
						"CTRName",
						"topic",
						"detail",
						"PGEMaker",
						"OGNSystemVersion",
						"MHEName",
						"modelD",
						"modelH",
						"applyDate",
						"limitDate",
						"maker",
						"makeDate",
						"files"
					],
					"filter": "DBID='" + DBID + "'"
				};

				showDBIDInfo("#tableDetail", SQLParamPLD);

				break;
			case 'ppm_bills_blueprint_t':
				let SQLParamBPT = {
					"tableName": "ppm_bills_blueprint_t",
					"titles": [
						"DBID",
						"BPTID",
						"BPTVersion",
						"CTRName",
						"BPTDescribe",
						"PGEMaker",
						"auditor",
						"auditDate",
						"taskModel",
						"modelH",
						"BPTAuditOpinion",
						"limitDate",
						"maker",
						"makeDate",
						"files"
					],
					"filter": "DBID='" + DBID + "'"
				};
				showDBIDInfo("#tableDetail", SQLParamBPT);

				break;
			case 'ppm_bills_task_t':
				let SQLParamTask = {
					"tableName": "ppm_bills_task_t",
					"titles": [
						"DBID",
						"BTID",
						"BTVersion",
						"taskTypeText",
						"taskCTRName",
						"taskOGNSystemVersion",
						"taskStaff",
						"taskDBE",
						"taskLimitDate",
						"taskRemark",
						"taskMaker",
						"taskMakeDate",
						"BTAcceptDate",
						"modifyContent",
						"functionsDBE",
						"IPQCAuditResultText",
						"IPQCMaker",
						"IPQCMakeDate",
						"BTStatusText",

						"taskFiles",
						"IPQCTestResult"

					],
					"filter": "DBID='" + DBID + "'",
					"orderBy": "BTID"
				};

				showDBIDInfo("#tableDetail", SQLParamTask);

				break;
			case 'ppm_bills_fqc_t':
				let SQLParamFQC = {
					"tableName": "ppm_bills_fqc_t",
					"titles": [
						"DBID",
						"FQCVersion",
						"FQCRecord",
						"FQCRemark",
						"FQCMaker",
						"FQCMakeDate",
						"FQCAuditor",
						"FQCAuditDate",
						"FQCResultText",
						"FQCTestResult"
					],
					"filter": "DBID='" + DBID + "'"
				};
				showDBIDInfo("#tableDetail", SQLParamFQC);

				break;
			case 'ppm_bills_pbh_t':
				let SQLParamPBH = {
					"tableName": "ppm_bills_pbh_t",
					"titles": [
						"DBID",
						"PBHVersion",
						"PBHRemark",
						"PBHMaker",
						"PBHMakeDate",
						"PBHAuditor",
						"PBHAuditDate",
						"emailADRS",
						"files"

					],
					"filter": "DBID='" + DBID + "'"
				};

				showDBIDInfo("#tableDetail", SQLParamPBH);

				break;

		}


	}





	//函数:详情按钮详情页自动填写内容------------------------
	function Fun_winDetailInit(dataSelect) {


		var SQLParamPLD = {
			"tableName": "ppm_bills_plan_t",
			"titles": [
				"BPID",
				"version",
				"CTRName",
				"topic",
				"PGEMaker",
				"MHEName",
				//				"modelD",
				//				"modelH",
				"applyDate",
				"limitDate",
				"files"
			],
			"filter": "BPID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackPLD", SQLParamPLD);

		var SQLParamBPT = {
			"tableName": "ppm_bills_blueprint_t",
			"titles": [
				"DBID",
				"BPTID",
				"BPTVersion",
				"CTRName",
				"PGEMaker",
				"auditDate",
				//				"taskModel",
				//				"modelH",
				"limitDate",
				"makeDate",
				"files"
			],
			"filter": "BPTID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackBPT", SQLParamBPT);

		//数据量不能过多,否则会报错
		var SQLParamTask = {
			"tableName": "ppm_bills_task_t",
			"titles": [
				"DBID",
				"BTID",
				"BTVersion",
				"taskTypeText",
				"taskStaff",
				"taskLimitDate",
				"BTAcceptDate",
				"IPQCMakeDate",
				"BTStatusText",
				"taskFiles"
			],
			"filter": "taskBPID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackTask", SQLParamTask);


		var SQLParamFQC = {
			"tableName": "ppm_bills_fqc_t",
			"titles": [
				"DBID",
				"FQCVersion",
				"FQCMaker",
				"FQCMakeDate",
				"FQCAuditor",
				"FQCAuditDate",
				"FQCResultText"
			],
			"filter": "fqcBPID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackFQC", SQLParamFQC);


		var SQLParamPBH = {
			"tableName": "ppm_bills_pbh_t",
			"titles": [
				"DBID",
				"PBHVersion",
				"PBHMaker",
				"PBHMakeDate",
				"PBHAuditor",
				"PBHAuditDate",
				"emailADRS",
				"files"
			],
			"filter": "pbhBPID='" + dataSelect.taskBPID + "'"
		};


		Fun_fillTrackTableWithDBID("#tableTrackPBH", SQLParamPBH);


	}


	//函数 创建table 参数模版

	function createParams(filter) {

		console.log("filter:" + JSON.stringify(filter))

		btnFilterActive = filter.btnFilter
		divFilterActive = filter.divFilter



		let filterResult = ""

		if (filter.btnFilter !== "") {

			console.log("filter.btnFilter:" + filter.btnFilter)
			filterResult = filter.btnFilter
		} else {
			filterResult = ""
		}

		console.log("filterResult111:" + JSON.stringify(filterResult))


		var trackType = getQueryString("trackType");


		switch (trackType) {
			case 'all':

				// if (filterResult !== "") {
				// 	filterResult = "(" + filterResult + " ) OR taskFinishDate IS NULL";

				// } 

				// $("#BTNFilterAll").addClass("active");

				if (filterResult !== "") {
					filterResult = "((WFStatus=0 OR WFStatus=100 )  AND " + filterResult +
						" ) OR (WFStatus<>0 AND WFStatus<>100 ) ";

				} else {
					filterResult = "(WFStatus=0 OR WFStatus=100) OR (WFStatus<>0 AND WFStatus<>100 )"
				}

				if (filter.divFilter !== "") {
					filterResult = "(" + filterResult + ") AND " + filter.divFilter
				}

				$("#BTNFilterAll").addClass("active");

				break;
			default:
				if (filterResult !== "") {
					filterResult = " (WFStatus=0 OR WFStatus=100) AND " + filterResult;
				} else {
					filterResult = " (WFStatus=0 OR WFStatus=100)";
				}

				if (filter.divFilter !== "") {
					filterResult = "(" + filterResult + ") AND" + filter.divFilter
				}
				$("#BTNFilterHistory").addClass("active");
		}

		console.log("filterResult222:" + filterResult)




		let Params = {
			tableID: "#tasksTrackTable",
			SQLParam: {
				SQL: "SQLTableTasksDBCenter_T",
				filter: filterResult
			},
			columnsData: [{
					data: 'DBID',
					"visible": false
				},
				{
					data: 'BTID'
				},
				{
					data: 'BTVersion'
				},
				{
					data: 'taskBPID'
				},
				{
					data: 'taskCTRName'
				},
				{
					data: 'taskSortTypeText'
				},
				{
					data: 'taskStaff'
				},
				{
					data: 'taskMakeDate'
				},
				{
					data: 'taskFinishDate'
				},
				{
					data: 'taskFiles',
					"visible": false
				}, {
					data: 'WFEndText'
				}
			]
		}

		return Params;

	}

	//函数 创建excel table 参数模版

	function createExportParams(filter) {

		// let filterResult = ""

		// if (filter !== undefined) {
		// 	filterResult = filter
		// }

		console.log("filter:" + JSON.stringify(filter))

		btnFilterActive = filter.btnFilter
		divFilterActive = filter.divFilter

		let filterResult = ""

		if (filter.btnFilter !== "") {

			console.log("filter.btnFilter:" + filter.btnFilter)
			filterResult = filter.btnFilter
		} else {
			filterResult = ""
		}

		console.log("filterResult111:" + JSON.stringify(filterResult))


		var trackType = getQueryString("trackType");


		switch (trackType) {
			case 'all':

				// if (filterResult !== "") {
				// 	filterResult = "(" + filterResult + " ) OR taskFinishDate IS NULL";
				// } 

				// $("#BTNFilterAll").addClass("active");

				if (filterResult !== "") {
					filterResult = "((WFStatus=0 OR WFStatus=100 )  AND " + filterResult +
						" ) OR (WFStatus<>0 AND WFStatus<>100 ) ";

				} else {
					filterResult = "(WFStatus=0 OR WFStatus=100) OR (WFStatus<>0 AND WFStatus<>100 )"
				}

				if (filter.divFilter !== "") {
					filterResult = "(" + filterResult + ") AND " + filter.divFilter
				}

				$("#BTNFilterAll").addClass("active");

				break;
			default:
				if (filterResult !== "") {
					filterResult = " (WFStatus=0 OR WFStatus=100) AND " + filterResult;
				} else {
					filterResult = " (WFStatus=0 OR WFStatus=100)";
				}

				if (filter.divFilter !== "") {
					filterResult = "(" + filterResult + ") AND" + filter.divFilter
				}
				$("#BTNFilterHistory").addClass("active");
		}

		console.log("filterResult222:" + filterResult)


		let Params = {
			tableID: "#tableExcelExport",
			SQLParam: {
				SQL: "SQLTableTasksDBCenter_T",
				filter: filterResult
			},
			columnsData: [{
					data: 'DBID',
					"visible": false
				},
				{
					data: 'BTID'
				},
				{
					data: 'BTVersion'
				},
				{
					data: 'taskBPID'
				},
				{
					data: 'taskCTRName'
				},
				{
					data: 'taskSortTypeText'
				},
				{
					data: 'taskMHEName'
				},
				{
					data: 'taskModel'
				},
				{
					data: 'taskStaff'
				},
				{
					data: 'taskLimitDate'
				},
				{
					data: 'taskMakeDate'
				},
				{
					data: 'taskFinishDate'
				},
				{
					data: 'taskStopDate'
				},
				{
					data: 'taskDBE'
				},
				{
					data: 'modifyContent'
				},
				{
					data: 'functionsDBE'
				},
				{
					data: 'IPQCMaker'
				},
				{
					data: 'IPQCAuditResultText'
				},
				{
					data: 'BTStatusText'
				},
				{
					data: 'WFEndText'
				},
				// {
				// 	data: 'taskFiles',
				// 	"visible": false
				// }

			]
		}

		return Params;

	}

	/**
	 * 获得本周的开始日期和结束日期
	 */
	function getWeekStartDateAndEndDateRange() {
		let oneDayLong = 24 * 60 * 60 * 1000;
		let now = new Date();
		let mondayTime = now.getTime() - (now.getDay() - 1) * oneDayLong;
		let sundayTime = now.getTime() + (7 - now.getDay()) * oneDayLong;
		let monday = new Date(mondayTime);
		let sunday = new Date(sundayTime);
		let weekRange = [monday, sunday];

		return weekRange;
	}


	function getMonthStartDateAndDateRange() {
		let oneDayLong = 24 * 60 * 60 * 1000;
		let now = new Date();
		let year = now.getFullYear();

		let monthStartDate = new Date(year, now.getMonth(), 1); //当前月1号
		let nextMonthStartDate = new Date(year, now.getMonth() + 1, 1); //下个月1号
		let days = (nextMonthStartDate.getTime() -
			monthStartDate.getTime()) / oneDayLong; //计算当前月份的天数
		let monthEndDate = new Date(year, now.getMonth(), days);
		let monthRange = [monthStartDate, monthEndDate];

		return monthRange;
	}

	function getYearStartDateAndDateRange() {
		let oneDayLong = 24 * 60 * 60 * 1000;
		let now = new Date();
		let year = now.getFullYear();
		let yearStartDate = new Date(year, 0, 1); //当前月1号
		let yearEndDate = new Date(year, 11, 31);
		let yearRange = [yearStartDate, yearEndDate];

		return yearRange;
	}

	//函数重新绑定事件

	function tableClickBind() {

		$('#tasksTrackTable tbody').unbind();
		//判断是否选中数据-------
		var table = $('#tasksTrackTable').DataTable();
		$('#tasksTrackTable tbody').on('click', 'tr', function () {
			if ($(this).hasClass('selected')) {
				$(this).removeClass('selected');
			} else {
				table.$('tr.selected').removeClass('selected');
				$(this).addClass('selected');
			}

			var dataSelect = table.row('.selected').data();

		});


		//dbclick 测试判断是否选中数据-------

		$('#tasksTrackTable tbody').on('dblclick', 'tr', function () {
			table.$('tr.selected').removeClass('selected');
			$(this).addClass('selected');
			$('#BTNInfo').click();

		});
	}


	//页面加载函数---------------
	$(document).ready(function () {

		var sessionName = "<%-locals.session.yjUser.Name%>";

		btnFilterActive = ""
		divFilterActive = ""



		//详情按钮---------
		$('#BTNInfo').click(function () {

			if (checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "BillCenter02")) {
				//    console.log("seclet: "+JSON.stringify(table.row('.selected').data()));
				// table.row('.selected').remove().draw( false );
				var table = $('#tasksTrackTable').DataTable();
				var dataSelect = table.row('.selected').data();
				if (dataSelect == undefined) {
					alert("请先点击表格中的表单!");
				} else {

					$('#BillPLD').modal('show')
					console.log("dataSelect:" + dataSelect)
					Fun_winDetailInit(dataSelect);
				}

			}
		});


		//删除按钮----------
		$('#BTNReTrack').click(function () {

			if (checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "BillCenter03")) {
				var table = $('#tasksTrackTable').DataTable();
				var dataSelect = table.row('.selected').data();

				//   alert(JSON.stringify(dataSelect));
				//    
				if (dataSelect == undefined) {
					alert("请先选择需要恢复的计划!");
				} else {
					var msg1 = confirm("恢复计划单后,该计划单相关单据还原至流程系统!是否继续?");
					if (msg1 === true) {

						var PLDUpdData = {
							"DBTable": "ppm_bills_plan",
							"BillIDName": "BPID",
							"BillID": dataSelect.BPID,
							"WFStatus": 90
						}

						var taskUpdData = {
							"DBTable": "ppm_bills_task",
							"BillIDName": "taskBPID",
							"BillID": dataSelect.BPID,
							"WFStatus": 1
						}

						var ajax1 = $.ajax({
							method: 'post',
							url: '/app/PM/updBillStatus',
							data: PLDUpdData,
							success: function (data, textStatus) {},
							error: function (XMLHttpRequest, textStatus, errorThrown) {}
						});

						var ajax2 = $.ajax({
							method: 'post',
							url: '/app/PM/updBillStatus',
							data: taskUpdData,
							success: function (data, textStatus) {},
							error: function (XMLHttpRequest, textStatus, errorThrown) {}
						});

						$.when(ajax1, ajax2).done(function () {
							let i = {
								alertMsg: "该计划单已恢复!"
							}
							swalAndRefresh(i)

						});

					}

				}
				//          table.row('.selected').remove().draw( false );//前端删除显示数据 ,数据库不删除

			}
		});


		//按钮:过滤本周
		$('#BTNFitlerWeek').click(function () {
			datatableReload(createParams({
				btnFilter: "YEARWEEK(date_format(taskFinishDate,'%Y-%m-%d')) = YEARWEEK(now())",
				divFilter: ""
			}));
			tableClickBind();

			let DateRange = getWeekStartDateAndEndDateRange();
			$("#spanDateRange").text(DateRange[0].format("yyyy/MM/dd") + "至" + DateRange[1].format(
				"yyyy/MM/dd"));

			$("#BTNGroupFilter").children().removeClass("active");
			$("#BTNFitlerWeek").addClass("active")


		})

		//页面加载后默认按周过滤
		$('#BTNFitlerWeek').click();

		//按钮:过滤本周
		$('#BTNFitlerMonth').click(function () {
			datatableReload(createParams({
				btnFilter: "DATE_FORMAT( taskFinishDate, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )",
				divFilter: ""
			}));
			tableClickBind();
			let DateRange = getMonthStartDateAndDateRange();
			$("#spanDateRange").text(DateRange[0].format("yyyy/MM/dd") + "至" + DateRange[1].format(
				"yyyy/MM/dd"));

			$("#BTNGroupFilter").children().removeClass("active");
			$("#BTNFitlerMonth").addClass("active")

		})

		//按钮:过滤本周
		$('#BTNFitlerYear').click(function () {
			datatableReload(createParams({
				btnFilter: "YEAR(taskFinishDate)=YEAR(NOW())",
				divFilter: ""

			}));
			tableClickBind();
			let DateRange = getYearStartDateAndDateRange();
			$("#spanDateRange").text(DateRange[0].format("yyyy/MM/dd") + "至" + DateRange[1].format(
				"yyyy/MM/dd"));

			$("#BTNGroupFilter").children().removeClass("active");
			$("#BTNFitlerYear").addClass("active")



		})

		//按钮:过滤全部
		$('#BTNFitlerAll').click(function () {
			datatableReload(createParams({
				btnFilter: "",
				divFilter: ""
			}));
			tableClickBind();
			$("#spanDateRange").text("ALL");

			$("#BTNGroupFilter").children().removeClass("active");
			$("#BTNFitlerAll").addClass("active")

		})

		//过滤功能组 自定义按钮-----
		$('#BTNFitlerDiv').click(function () {

			$('#DivFilter').window('open');

			Fun_getSQLSelectDBData({
				SQL: "SQLSRCustomers"
			}, "#CTRName");

			Fun_getSQLSelectDBData({
				SQL: "SQLSRStaffs"
			}, "#taskStaff");

			Fun_getSQLSelectDBData({
				SQL: "SQLSRMachines"
			}, "#taskMHEName");

			Fun_getSQLFullSelectDBData({
				SQL: "SQLSRSystems"
			}, "#taskModel");




			$('.form_date').datetimepicker({
				language: 'zh-CN',
				weekStart: 1,
				todayBtn: 1,
				autoclose: 1,
				todayHighlight: 1,
				startView: 2,
				minView: 2,
				forceParse: 0
			});

			$("#BTNGroupFilter").children().removeClass("active");
			$("#BTNFitlerDiv").addClass("active")




		});





		//过滤功能组 自定义过滤确认按钮-----NNN
		$('#FilterComfirmBtnN').click(function () {

			let filter = "";
			if (Fun_getSelectText($('#CTRName option:selected').text()) !== "未选择") {
				filter = filter + "AND taskCTRName = '" + Fun_getSelectText($('#CTRName option:selected')
					.text()) + "'"
			}

			if (Fun_getSelectText($('#taskStaff option:selected').text()) !== "未选择") {
				filter = filter + "AND taskStaff like  '%" + Fun_getSelectText($(
					'#taskStaff option:selected').text()) + "%'"
			}

			if (Fun_getSelectText($('#taskMHEName option:selected').text()) !== "未选择") {
				filter = filter + "AND taskMHEName = '" + Fun_getSelectText($(
					'#taskMHEName option:selected').text()) + "'"
			}

			if ($('#taskModel option:selected').text() !== "未选择") {
				filter = filter + "AND taskModel = '" + $('#taskModel option:selected')
					.text() + "'"
			}



			if ($("#taskMakeDateB").val() !== "") {
				filter = filter + "AND taskMakeDate >='" + $("#taskMakeDateB").val() + "'";
			}

			if ($("#taskMakeDateE").val() !== "") {
				filter = filter + "AND taskMakeDate <='" + $("#taskMakeDateE").val() + "'";
			}

			if ($("#taskFinishDateB").val() !== "") {
				filter = filter + "AND taskFinishDate >='" + $("#taskFinishDateB").val() + "'";
			}

			if ($("#taskFinishDateE").val() !== "") {
				filter = filter + "AND taskFinishDate <='" + $("#taskFinishDateE").val() + "'";
			}

			// console.log("filter:"+filter);


			filter = filter.substring(3);

			datatableReload(createParams({
				// btnFilter: btnFilterActive,//按当前模式二次过滤
				btnFilter: "",
				divFilter: filter
			}));
			tableClickBind();

			$('#DivFilter').window('close');

		});

		// //过滤功能组 自定义过滤确认按钮-----
		// $('#FilterCancelBtn').click(function () {

		// 	$('#DivFilter').window('close');

		// });

		//过滤功能组 自定义过滤确认按钮-----
		$('#FilterCancelBtnN').click(function () {

			$("#CTRName").selectpicker('val', "");
			$("#taskMHEName").selectpicker('val', "");
			$("#taskModel").selectpicker('val', "");

			$("#taskStaff").selectpicker('val', "");

			$("#taskMakeDateB").val("")
			$("#taskMakeDateE").val("")

			$("#taskFinishDateB").val("")
			$("#taskFinishDateE").val("")



		});


		//报表 按钮 报表1----
		$('#BTNReport1').click(function () {

			if (checkAuthority({
					"SQL": "SQLGetAuthorities",
					"filter": "StaffName='" + sessionName + "'"
				}, "BillCenter01")) {

				$('#reportDetail').window('open');

				var table = $('#tasksTrackTable').DataTable();

				var totalNum = (table.page.info()).recordsTotal;

				let delayNum = 0;


				for (let i = 0; i < totalNum; i++) {
					let rowData = table.row(i).data();
					if (rowData.limitDate < rowData.taskFinishDate) {
						delayNum = delayNum + 1;
					}
				}

				$('#spanTotalBillNum').text(totalNum);
				$('#spanDelayBillNum').text(delayNum);

				$('#spanDelayRate').text((delayNum / totalNum * 100).toFixed(2) + "%");

			}


		});

		// tableExcelExport

		$('#BTNExportExcel').click(function () {

			$('#winExprotExcel').window('open');
			datatableReloadWithExcel(createExportParams({
				btnFilter: btnFilterActive,
				divFilter: divFilterActive
			}));

		});

		//发送email 按钮------------

		$('#sendMailBtn').click(function () {
			alert("发送模板邮件!");

			//	var Maildata={"dataRows":dataRows,"fnum":fnum,"frate":frate}
			//	  ajaxMail(Maildata);
			//	 $('#ReprotWin').window('close');

		});

		//过滤按钮组

		$('#BTNFilterHistory').click(function () {

			window.location.href = '/app/PM/T-tasksDBCenter';

		});

		$('#BTNFilterAll').click(function () {

			window.location.href = '/app/PM/T-tasksDBCenter?trackType=all';

		});





	});
</script>