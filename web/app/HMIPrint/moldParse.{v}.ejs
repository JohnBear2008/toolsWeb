<!--本地路径-->
<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>

<!-- 其他的标准/第三方库-->
<link rel="stylesheet" type="text/css" href="/bootstrap/v3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/DataTables/v1.10.15/css/dataTables.bootstrap.css">
<link rel="stylesheet" type="text/css" href="/layui/v2.4.5/css/layui.css">

<script src="/bootstrap/v3.3.7/js/bootstrap.min.js"></script>
<script src="/DataTables/v1.10.15/js/jquery.dataTables.min.js"></script>
<script src="/DataTables/v1.10.15/js/dataTables.bootstrap.min.js"></script>

<!--自己写的-->
<link rel="stylesheet" type="text/css" href="/css/HMIPrint/hmiprint-master.css">
<link rel="stylesheet" type="text/css" href="/css/HMIPrint/mold-nav-tabs.css">
<link rel="stylesheet" type="text/css" href="/css/HMIPrint/hmiprint-upFolderDiv.css">
<link rel="stylesheet" type="text/css" href="/css/HMIPrint/dataTableExtend.css">

<script type="text/javascript" src="/js/muc_jsExtend.js"></script>
<script type="text/javascript" src="/js/HMIPrint/hmiprint-common.js"></script>
<script type="text/javascript" src="/js/HMIPrint/moldParse.js"></script>

<div class="content">
    <!-- 标题区 -->
    <div class="content-title">
        <h1>Mold 文件解析</h1>
        <hr />
    </div>

    <!-- 操作区（按钮等） -->
    <div class="content-operate">
        <!-- 导出文件 按键  # TMD这个地方没办法语义化标签，只能加个 anchor-->
        <input type="file" id="upFolder" style="display:none;" webkitdirectory />
        <a class="btn btn-lg btn-info" onclick="$('#upFolder').click();">导入文件</a>

        <!--  汇出excel按键 -->
        <a id="dlink" class="btn btn-lg btn-default">汇出excel</a>

        <!-- 进度提示 -->
        <label id="PMsg" style="font-weight: bold;font-size: 15px;color: red;margin-left: 20px"></label>

        <!-- 记录单选框 加个hidden是为了防止加载中留下残影 Muc mark, 暂不需要-->
        <!-- <input id="recBox" type="checkbox" name="check-1" value="recOn" class="lcs_check" autocomplete="off" style="visibility: hidden;" checked="checked" /> -->
    </div>
    </br>

    <!-- moldhdr呈现区 -->
    <div class="mold-hdr" id="moldhdr">
    </div>

    <!-- DataTable呈现区 mark的元素勿删，DOM参考用-->
    <div class="tab" role="tabpanel">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist" id="DataUl">
            <!--
            <li role="presentation" class="active"><a href="#Section1" role="tab" data-toggle="tab">模具</a></li>
            <li role="presentation"><a href="#Section2" role="tab" data-toggle="tab">射出</a></li>
        -->
        </ul>
        <!-- Tab panes -->
        <div class="tab-content" id="tab_content">
            <!--
            <div role="tabpanel" class="tab-pane fade in active" id="Section1">
                <p>1</p>
            </div>
            <div role="tabpanel" class="tab-pane fade" id="Section2">
                <p>2</p>
            </div>
        -->
        </div>
    </div>
</div>
<script type="text/javascript">
/*jshint esversion:6*/
// tab标签页的顺序随着arr_Inx的增加依次减小
// 若有新增直接在这里按序加即可
const g_aTabOrder = ["Mold",
    "Inject",
    "InjectB",
    // "Gate",
    "Rotary",
    "Chrg",
    "ChrgB",
    "Eject",
    "EjectB",
    "AirBlast",
    "Core",
    "Nozzl",
    "NozzlB",
    "Temper",
    // "Product",
    // "Moni",
    // "Alarm",
    "Other"
];
/* 用来翻译水平标签页上的文字，表示资料分组，例：吹气，模具、储料 */
// 若有新增直接在这里加即可
const g_mTabs = new Map([
    ["Mold", "模座"],
    ["Inject", "射出"],
    ["InjectB", "射出B"],
    // ["Gate", "阀门"],
    ["Rotary", "转台"],
    ["Chrg", "储料"],
    ["ChrgB", "储料B"],
    ["Eject", "托模"],
    ["EjectB", "托模B"],
    ["AirBlast", "吹气"],
    ["Core", "中子"],
    ["Nozzl", "座台"],
    ["NozzlB", "座台B"],
    ["Temper", "温度"],
    // ["Product", "生产"],
    // ["Moni", "监测"],
    // ["Alarm", "警报限"],
    ["Other", "其他"],
]);


/*===========================================================================+
|   load                                                                     |
+===========================================================================*/
$(window).load(function() {
    // alert("text1");
});

/*===========================================================================+
|   ready                                                                    |
+===========================================================================*/
$(function(e) {
    var $pMsgID = $("#PMsg");

    let mucDB = "MucDB",
        store = "HMIPrint",
        pageID = "mold",
        sParseFlag = "moldParseStat", // 假使当前页面解析过，则为true
        obj = g_oMold,
        sPFlag = sessionStorage.getItem(sParseFlag); // sPFlag：实际解析状态

    /* === 自动呈现最后一次解析的内容 === */
    if (sPFlag == "true") {
        // $pMsgID.text("调试中，#1 MUC 把上次呈现给关了");
        $pMsgID.text("正在呈现最后一次解析结果，请稍后 . . .");
        fnGetObjFrInxDB(mucDB, store, pageID, callbackInxDB); // common.js
    }

    /* === 操作控件事件绑定 === */
    // 上传文件夹名字变化后
    $("#upFolder").change(function() {
        fnTrvlEvent('upFolder');
    });

    $("#dlink").click(() => {
        /* 解析过才开放汇出excel功能 */
        let sPFlag = sessionStorage.getItem(sParseFlag); // sPFlag：实际解析状态
        if (!sPFlag) {
            alert("请导入文件后再使用此功能！");
            return false;
        }
    });

    function callbackInxDB(objArg) {
        if (objArg) {
            /* 呈现上次的数据快照 */
            fnShowSnap(objArg);

            /* --- export xls event bind --- */
            let aTableID = [], // 各个DataTable的ID
                aWkSheet = [], // 各个DataTable的Tab标签页中文翻译，用于构建汇出excel的sheet名
                sWbName = objArg.sFolderName;
            g_mTabs.forEach((v, k) => {
                k = "dt" + k;
                if ($("#" + k).length > 0) {
                    // 当对应的table存在时，再处理
                    aTableID.push(k);
                    aWkSheet.push(v);
                }
            });

            fnExpBtnBind("dlink", aTableID, aWkSheet, sWbName, "Excel"); // common.js

            // Muc 2018-12-05 mark，已在呈现处做类似处理
            /* 解决dataTable加入垂直滚动条后，切换tab表头width变为0px的现象 */
            // $('a[data-toggle="tab"]').on('shown.bs.tab', function(e) {
            // 获取已激活的标签页的名称
            // var activeTab = $(e.target).text();
            // 获取前一个激活的标签页的名称
            // var previousTab = $(e.relatedTarget).text();
            // $(".active-tab span").html(activeTab);
            // $(".previous-tab span").html(previousTab);
            // console.log(activeTab);
            // $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            // });


        }
        $pMsgID.text("");
    }

    /*    indexedDB.deleteDatabase("MucDB");
        let mucDB = "MucDB",
            store = "HMIPrint",
            pageName = "Mold",
            sRecFlag = "sMoldRec";*/

    // Chenly 2018-11-09 mark，默认为自动记录，同时存在checkbox已经为check的状态，必须要trigger click一下的问题现象
    /*    let sRecStat = sessionStorage.getItem(sRecFlag); // String类型

        // 呈现先前成功解析的obj
        function callbackInxDB(data) {
            // console.log(data);
            if (data) {
                fnShowPreMoldData(data);
            }

            $("#PMsg").text("");
        }

        if (sRecStat === "true" || sRecCheckStat == "checked") {
            $("#PMsg").text("正在获取/解析数据文件，请稍后 . . .");
            fnGetObjFrInxDB(mucDB, store, pageName, callbackInxDB);
        }*/

    // };
});

</script>
