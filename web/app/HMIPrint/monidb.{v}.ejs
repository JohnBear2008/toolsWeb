<!--本地路径-->
<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>
<link rel="stylesheet" type="text/css" href="/css/HMIPrint/HMIContent.css">

<script src="/js/HMIPrint/FileSaver.min.js"></script>
<script src="/js/HMIPrint/tableExport.js"></script>

<script type="text/javascript" src="/DataTables/media/js/jquery.dataTables.js"></script>
<link rel="stylesheet" type="text/css" href="/DataTables/media/css/jquery.dataTables.css">

<!-- 最新的 Bootstrap 核心 JavaScript和css 文件 -->
<script src="/js/HMIPrint/bootstrap.min.js"></script>
<link href="/css/HMIPrint/bootstrap.min.css" rel="stylesheet">

<!-- mark，alert样式，暂时不做美化 -->
<!-- <script type="text/javascript" src="/js/HMIPrint/alert.min.js"></script> -->
<!-- <link rel="stylesheet" type="text/css" href="/css/HMIPrint/alert.css"> -->

<div class="content">
    <h1>Moni 数据库维护</h1>
    <hr>
    <!--<button id="Add"  onclick="javascript:$('#win').window('open')">添加</button>-->
    <!-- 操作区（按钮等） -->
    <div class="lineitem">
        <button id="Add" class="btn btn-info">添加</button>
        <button id="Upd" class="btn btn-warning">更新</button>
        <button id="Del" class="btn btn-danger">删除</button>
    </div>

    <!--数据呈现区-->
    <table id="moniDBTable" class="moniDBTableStyle">
        <thead>
            <tr>
                <th>厂家</th>
                <th>控制</th>
                <th>机型</th>
                <th>保留0</th>
                <th>保留1</th>
                <th>保留2</th>
                <th>保留3</th>
                <th>保留4</th>
                <th>内容</th>
                <th>中文</th>
                <th>繁体</th>
                <th>英文</th>
                <th>精度</th>
                <th>可见</th>
            </tr>
        </thead>
    </table>
    <!-- 点击更新、添加按钮后弹出的窗口 -->
    <div id="win" class="easyui-window" title="DBinfo" closed="true" style="width:400px;height:560px;">
        <form style="padding:10px 50px;">
            <p>厂家 : <input id="ManufacturerInput" size="30" type="text" class="required"></p>
            <p>控制 : <input id="CtrlTypeInput" size="30" type="text" class="required"></p>
            <p>机型 : <input id="MachTypeInput" size="30" type="text" class="required"></p>
            <p>保留0: <input id="Reserved0Input" size="30" type="text" class="required"></p>
            <p>保留1: <input id="Reserved1Input" size="30" type="text" class="required"></p>
            <p>保留2: <input id="Reserved2Input" size="30" type="text" class="required"></p>
            <p>保留3: <input id="Reserved3Input" size="30" type="text" class="required"></p>
            <p>保留4: <input id="Reserved4Input" size="30" type="text" class="required"></p>
            <!-- <p>内容: <input id="DDKeyInput" size="30" type="text"></p> -->
            <p>内容 : <input type="text" id="DDKeyInput" list="aDDKey" name="DDKey" size="30" class="required" /></p>
            <!--  临时方案：改用datalist，但是存在overflow的现况 -->
            <datalist id="aDDKey" class="required">
                <option value="dwShotCount" label="开模序号"></option>
                <option value="tmlCycle" label="循环计时"></option>
                <option value="tmlInject" label="射出计时"></option>
                <option value="tmllTurnToHold" label="转保压时间"></option>
                <option value="tmlCharge" label="储料计时"></option>
                <option value="adPosi_InjectStart" label="射出起点"></option>
                <option value="adPosi_TurnToHold" label="保压起点"></option>
                <option value="adPosi_InjectEnd" label="射出终点"></option>
                <option value="adPosi_InjectCushion" label="射出监控位置"></option>
                <option value="adPosi_InjectPeak" label="射出尖峰位置"></option>
                <option value="daPres_TurnToHold" label="保压转换压力"></option>
                <option value="cnChargeRPM" label="储料RPM"></option>
                <option value="tmSuckBack" label="射退计时"></option>
                <option value="tmEject" label="托模计时"></option>
                <option value="tmEjectAdvance" label="托进计时"></option>
                <option value="tmEjectReturn" label="托退计时"></option>
                <option value="daPres_InjectPeak" label="射出尖峰压力"></option>
                <option value="daPres_ChargePeak" label="储料尖峰压力"></option>
                <option value="tmlInjectB" label="B组射出计时"></option>
                <option value="tmlChargeB" label="B组储料计时"></option>
                <option value="adPosi_InjectStartB" label="B组射出起点"></option>
                <option value="adPosi_TurnToHoldB" label="B组保压起点"></option>
                <option value="adPosi_InjectCushionB" label="B组射出终点"></option>
                <option value="daPres_InjecterB" label="B组射出压力"></option>
                <option value="daPres_ChargeBackB" label="B组储料背压"></option>
                <option value="tmTake" label="取件时间"></option>
                <option value="adPosi_OpenMoldEnd" label="开模终点"></option>
                <option value="daPress_TurnToHoldB" label="B组转保压力实际值"></option>
                <option value="tmlTurnToHoldB" label="B组转保压计时"></option>
                <option value="adPosi_InjectHoldEndB" label="B组射出终点位置实际值"></option>
                <option value="daPres_InjectMiddleB" label="B组射出尖峰压力实际值"></option>
                <option value="daPres_ChargeMiddleB" label="B组储料尖峰压力实际值"></option>
                <option value="InjectMaxSpeed" label="最大射速"></option>
                <option value="InjectMaxSpeedB" label="B组最大射速"></option>
                <option value="wReservedMG[0]" label="预留"></option>
                <option value="wReservedMG[1]" label="预留"></option>
                <option value="wReservedMG[2]" label="预留"></option>
                <option value="wReservedMG[3]" label="预留"></option>
                <option value="wReservedMG[4]" label="预留"></option>
                <option value="wReservedMG[5]" label="预留"></option>
                <option value="wReservedMG[6]" label="预留"></option>
                <option value="wReservedMG[7]" label="预留"></option>
                <option value="wReservedMG[8]" label="预留"></option>
                <option value="wReservedMG[9]" label="预留"></option>
                <option value="wReservedMG[10]" label="预留"></option>
                <option value="wReservedMG[11]" label="预留"></option>
                <option value="wReservedMG[12]" label="预留"></option>
                <option value="wReservedMG[13]" label="预留"></option>
                <option value="wReservedMG[14]" label="预留"></option>
                <option value="wReservedMG[15]" label="预留"></option>
                <option value="wReservedMG[16]" label="预留"></option>
                <option value="wReservedMG[17]" label="预留"></option>
                <option value="wReservedMG[18]" label="预留"></option>
                <option value="wReservedMG[19]" label="预留"></option>
                <option value="dwReservedMG[0]" label="预留"></option>
                <option value="dwReservedMG[1]" label="预留"></option>
                <option value="dwReservedMG[2]" label="预留"></option>
                <option value="dwReservedMG[3]" label="预留"></option>
                <option value="dwReservedMG[4]" label="预留"></option>
                <option value="dwReservedMG[5]" label="预留"></option>
                <option value="dwReservedMG[6]" label="预留"></option>
                <option value="dwReservedMG[7]" label="预留"></option>
                <option value="dwReservedMG[8]" label="预留"></option>
                <option value="dwReservedMG[9]" label="预留"></option>
                <option value="wSource" label="来源"></option>
            </datalist>
            <p>中文 : <input id="CNInput" size="30" type="text" class="required"></p>
            <p>繁体 : <input id="TWInput" size="30" type="text"></p>
            <p>英文 : <input id="ENInput" size="30" type="text"></p>
            <p>精度 : <input id="PrecInput" size="30" type="text" class="required"></p>
            <p>可见 : <input id="VisbInput" size="30" type="text" class="required"></p>
            <div style="padding:5px;text-align:center;">
                <a id="AddDoButton"　href="#" class="easyui-linkbutton" icon="icon-ok">添加</a>
                <a id="UpdDoButton"　href="#" class="easyui-linkbutton" icon="icon-ok">更新</a>
                <a id="CancelButton" href="#" class="easyui-linkbutton" icon="icon-cancel">取消</a>
            </div>
        </form>
    </div>
</div>
<script>
/*jshint esversion: 6 */
// 构建moni数据结构
// warning:形参的顺序必须和oInput 对象完全一致
function moniData(UID, Manufacturer, CtrlType, MachType, Reserved0, Reserved1, Reserved2, Reserved3, Reserved4, DDKey, CN, TW, EN, Prec, Visb) {
    this.UID = UID;
    this.Manufacturer = Manufacturer;
    this.CtrlType = CtrlType;
    this.MachType = MachType;
    this.Reserved0 = Reserved0;
    this.Reserved1 = Reserved1;
    this.Reserved2 = Reserved2;
    this.Reserved3 = Reserved3;
    this.Reserved4 = Reserved4;
    this.DDKey = DDKey;
    this.CN = CN;
    this.TW = TW;
    this.EN = EN;
    this.Prec = Prec;
    this.Visb = Visb;
}

// 检查Form输入数据是否符号规范
function checkinput(Data) {
    if (Data.Manufacturer.length > 4) {
        alert('厂家的数据长度应 <=4 位，请检查!');
        return false;
    } else if (Data.CtrlType.length !== 4) {
        alert('控制的数据长度应为4位，请检查!');
        return false;
    } else if (Data.MachType.length !== 8) {
        alert('机型的数据长度应为8位，请检查!');
        return false;
    } else if (Data.Reserved0 === "" || Data.Reserved1 === "" || Data.Reserved2 === "" || Data.Reserved3 === "" || Data.Reserved4 === "") {
        alert('保留信息不能为空，请检查!');
        return false;
    } else if (Data.Prec == "") {
        alert("精度不能为空,请检查!");
        return false;
    } else if (Data.Prec > 5) {
        alert("精度必须为小于5的整数,请检查!");
        return false;
    } else if (Data.DDKey == "") {
        alert("内容不能为空,请检查!");
        return false;
    } else if (Data.CN == "") {
        alert("中文不能为空,请检查!");
        return false;
    } else if (Data.Visb == "") {
        alert("可见性不能为空,请检查!");
        return false;
    } else if (Data.Visb != "0" && Data.Visb != "1") {
        alert("可见性只能输入0或1,0代表不可见,1代表可见!");
        return false;
    }
    return true;
}
//AJAX新增函数
function ajaxAdd(moniData) {
    $.ajax({
        method: 'post',
        url: '/app/HMIPrint/moniAdd',
        data: moniData,
        success: function(data, textStatus) {
            // alert("成功数据:" + JSON.stringify(data));
            if (data.affectedRows != 0) {
                alert("新增数据成功!");
                window.location.reload();
            }
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert('新增失败！失败原因：相同内容的数据已存在，请以更新的方式更新此数据！');
        }
    });
}
//ajax更新函数
function ajaxUpd(moniData) {
    $.ajax({
        method: 'post',
        url: '/app/HMIPrint/moniUpd',
        data: moniData,
        success: function(data, textStatus) {
            //      alert("成功数据:"+JSON.stringify(data));
            if (data.changedRows != 0) {
                alert("更新数据成功!");
                window.location.reload();
            } else {
                alert("未有数据更新!");
            }
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {}
    });
}
//ajax删除函数
function ajaxDel(UID) {
    $.ajax({
        method: 'post',
        url: '/app/HMIPrint/moniDel',
        data: UID,
        success: function(data, textStatus) {
            //  alert("成功数据:"+JSON.stringify(data));
            if (data.affectedRows != 0) {
                alert("删除数据成功!");
                window.location.reload();
            } else {
                alert("删除数据失败!");
            }
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {}
    });
}
//加载完成后执行程序
$(document).ready(function() {
    /* init Obj or read Obj from cache */
    var oParsed = JSON.parse(sessionStorage.getItem("lastFormData")); // 当前页面缓存的Obj数据
    var oInput;
    // obj内无需缓存但仍需在第一次初始化的key
    var aIgnID = [
        "PrecInput",
        "DDKeyInput",
        "CNInput",
        "TWInput",
        "ENInput",
        "VisbInput"
    ];
    if (oParsed) {
        oInput = oParsed;
    } else {
        oInput = { // warning:形参的顺序必须和 moniData 对象完全一致
            "ManufacturerInput": "STD",
            "CtrlTypeInput": "0000",
            "MachTypeInput": "00000000",
            "Reserved0Input": "0",
            "Reserved1Input": "0",
            "Reserved2Input": "0",
            "Reserved3Input": "0",
            "Reserved4Input": "0",
            "DDKeyInput": "",
            "CNInput": "",
            "TWInput": "",
            "ENInput": "",
            "PrecInput": 0,
            "VisbInput": 1
        };
    }
    //加载数据表及数据----------
    $('#moniDBTable').DataTable({
        aLengthMenu: [15, 30],
        ajax: {
            url: '/app/HMIPrint/getMoniInfo',
            dataSrc: ''
        },
        columns: [
            { data: 'Manufacturer' },
            { data: 'CtrlType' },
            { data: 'MachType' },
            { data: 'Reserved0' },
            { data: 'Reserved1' },
            { data: 'Reserved2' },
            { data: 'Reserved3' },
            { data: 'Reserved4' },
            { data: 'DDKey' },
            { data: 'CN' },
            { data: 'TW' },
            { data: 'EN' },
            { data: 'Prec' },
            { data: 'Visb' }
        ],
        "language": {
            "url": "dataTables.german.lang",
            "sProcessing": "处理中...",
            "sLengthMenu": "显示 _MENU_ 项结果",
            "sZeroRecords": "没有匹配结果",
            "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
            "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
            "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
            "sInfoPostFix": "",
            "sSearch": "搜索:",
            "sUrl": "",
            "sEmptyTable": "表中数据为空",
            "sLoadingRecords": "载入中...",
            "sInfoThousands": ",",
            "oPaginate": {
                "sFirst": "首页",
                "sPrevious": "上页",
                "sNext": "下页",
                "sLast": "末页"
            },
            "oAria": {
                "sSortAscending": ": 以升序排列此列",
                "sSortDescending": ": 以降序排列此列"
            }
        }
    });

    //判断是否选中数据-------
    var table = $('#moniDBTable').DataTable();
    $('#moniDBTable tbody').on('click', 'tr', function() {
        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        } else {
            table.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
        }
    });

    //为表单的必填文本框添加提示信息（选择form中的所有后代input元素）
    $("form :input.required").each(function() {
        //通过jquery api：$("HTML字符串") 创建jquery对象
        var $required = $("<strong class='high'> *</strong>");
        //添加到this对象的父级对象下
        $(this).parent().append($required);
    });

    // 添加按钮-----
    // Chenly 2018-10-31 加上默认值
    $('#Add').click(function() {
        $('#win').window('open');
        $('#AddDoButton').show();
        $('#UpdDoButton').hide();

        // 读取上一次提交表格内数据的值（仅input元素）
        var inputNum = $("#win").find("input").length;
        for (var i = 0; i < inputNum; ++i) {
            var inputElem = $("#win").find("input").eq(i);
            var inputID = inputElem.attr("id");
            // console.log("#2", inputID);
            // mark，初始化的内容直接按照构造的数据来就行了
            if (oInput.hasOwnProperty(inputID) /*&& (aIgnID.indexOf(inputID) === -1)*/ ) {
                var IDTmp = "#" + inputID; // id选择器要加个#
                $(IDTmp).val(oInput[inputID]); // inputElem.attr("value", oInput[objID]);
            }
        }
    });
    //更新按钮---------
    $('#Upd').click(function() {
        //alert("seclet: "+JSON.stringify(table.row('.selected').data()));
        // table.row('.selected').remove().draw( false );
        var dataSelect = table.row('.selected').data();
        if (dataSelect == undefined) {
            alert("当前未选择任何数据,请先点击需要更新的数据行!");
        } else {
            /* ===== 增加对STD数据进行更新时的提示信息 =====*/
            let oStdTmp = {
                    "Manufacturer": "STD",
                    "CtrlType": "0000",
                    "MachType": "00000000",
                    "Reserved0": "0",
                    "Reserved1": "0",
                    "Reserved2": "0",
                    "Reserved3": "0",
                    "Reserved4": "0"
                },
                bStdKeysNum = Object.getOwnPropertyNames(oStdTmp).length,
                bSelectKeysNum = 0;
            /* -- 只对所罗列的key进行判断 --*/
            for (let key in oStdTmp) {
                if (dataSelect[key] && (dataSelect[key] == oStdTmp[key])) {
                    ++bSelectKeysNum;
                }
            }
            if (bSelectKeysNum == bStdKeysNum) {
                alert("风险操作！\n    您当前更新的数据为'标准'内容，变更此数据或影响所有HMI程式的解析结果，请确保操作正确无误!");
            }

            $('#win').window('open');
            $('#AddDoButton').hide();
            $('#UpdDoButton').show();
            $('#ManufacturerInput').val(dataSelect.Manufacturer);
            $('#PrecInput').val(dataSelect.Prec);
            $('#CtrlTypeInput').val(dataSelect.CtrlType);
            $('#MachTypeInput').val(dataSelect.MachType);
            $('#DDKeyInput').val(dataSelect.DDKey);
            $('#CNInput').val(dataSelect.CN);
            $('#TWInput').val(dataSelect.TW);
            $('#ENInput').val(dataSelect.EN);
            $('#VisbInput').val(dataSelect.Visb);
            $('#Reserved0Input').val(dataSelect.Reserved0);
            $('#Reserved1Input').val(dataSelect.Reserved1);
            $('#Reserved2Input').val(dataSelect.Reserved2);
            $('#Reserved3Input').val(dataSelect.Reserved3);
            $('#Reserved4Input').val(dataSelect.Reserved4);
        }
    });
    //删除按钮----------
    $('#Del').click(function() {
        var dataSelect = table.row('.selected').data();
        if (dataSelect == undefined) {
            alert("当前未选择任何数据,请先点击需要删除的数据行!");
        } else {
            var msg1 = confirm("风险操作！\n    此行数据内容移除后无法还原，请确认操作是否无误！");
            if (msg1 === true) {
                var msg2 = confirm("确认删除此行数据？");
                if (msg2 === true) {
                    var UID = { "UID": dataSelect.UID };
                    // alert("UID:"+UID);
                    ajaxDel(UID);
                }
            }
        }
        //          table.row('.selected').remove().draw( false );//前端删除显示数据 ,数据库不删除
    });
    //form框添加按钮----------
    $('#AddDoButton').click(function() {
        var UID = "";
        // UID + form的数据 ==> 构造obj
        var aRemainVal = [];
        for (var ID in oInput) {
            ID = "#" + ID;
            var nVal = $(ID).val();
            aRemainVal.push(nVal);
        }
        var formData = new moniData(UID, ...aRemainVal);
        // alert("formData:" + JSON.stringify(formData));

        if (checkinput(formData)) {
            // 保存本次提交表格内数据的值至obj内，便于连续操作
            var inputNum = $("#win").find("input").length;
            for (var i = 0; i < inputNum; ++i) {
                var inputElem = $("#win").find("input").eq(i);
                var inputID = inputElem.attr("id");
                // console.log("#1", inputID);
                if (oInput.hasOwnProperty(inputID) && (aIgnID.indexOf(inputID) === -1)) {
                    var IDTmp = "#" + inputID; // id选择器要加个#
                    oInput[inputID] = $(IDTmp).val();
                }
            }
            sessionStorage.setItem("lastFormData", JSON.stringify(oInput));
            ajaxAdd(formData);
        } else {
            //  alert("输入错误");
        }
    });
    //form 更新按钮
    $('#UpdDoButton').click(function() {
        var UID = table.row('.selected').data().UID;

        var aRemainVal = [];
        for (var ID in oInput) {
            ID = "#" + ID;
            var nVal = $(ID).val();
            aRemainVal.push(nVal);
        }
        var formData = new moniData(UID, ...aRemainVal);
        //      alert("formData:"+JSON.stringify(formData));
        if (checkinput(formData)) {
            //  alert("输入正确");
            ajaxUpd(formData);
        } else {
            //  alert("输入错误");
        }
    });
    //form框 取消按钮
    $('#CancelButton').click(function() {
        $('#win').window('close');
    });
});

</script>
