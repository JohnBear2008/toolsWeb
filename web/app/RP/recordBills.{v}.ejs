<!-- 导入css库 -->
<link rel="stylesheet" type="text/css" href="/rpLib/css/divCss.css">

<!-- 导入js库 -->
<script type="text/javascript" src="/rpLib/publicFuns.js"></script>

<!-- 导入datatables -->
<link rel="stylesheet" type="text/css" href="/rpLib/DataTables/datatables.min.css" />
<script type="text/javascript" src="/rpLib/DataTables/datatables.min.js"></script>

<!-- 导入bootstrapSelect -->
<link rel="stylesheet" href="/rpLib/bootstrapSelect/css/bootstrap-select.min.css" />
<script type="text/javascript" src="/rpLib/bootstrapSelect/js/bootstrap-select.min.js"></script>



<!-- 导入datatimepicker -->
<link href="/rpLib/datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen">
<script type="text/javascript" src="/rpLib/datetimepicker/bootstrap-datetimepicker.min.js" charset="UTF-8"></script>
<script type="text/javascript" src="/rpLib/datetimepicker/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>

<!-- 导入instascan 二维码扫描库 -->
<script type="text/javascript" src="/rpLib/instascan/instascan.min.js"></script>

<!-- 加载foil外框架 -->
<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>

<!-- 定义html元素 -->
<div class="rpContent">

    <!-- 按钮：用于打开模态框 -->

    <div class="row clearfix">
        <div class="col-md-12 column">
            <div class="page-header">
                <h1>工作流程-维修记录单</h1>
            </div>
        </div>
    </div>

    <!-- 功能组按钮 -->
    <div class="well">
        <button id='btnRecordBillNew' type="button" class="btn btn-info">维修登记</button>
        <button id='btnScanRecord' type="button" class="btn btn-success">扫描登记</button>
        <button id='btnScanStaff' type="button" class="btn btn-success">扫描领单</button>
    </div>

    <!-- 记录扫描模态框（Modal） -->

    <div class="modal fade" id="scanRecordModal">
        <div class="modal-dialog" style="width: 675px;">
            <div class="modal-content">

                <div class="modal-body">请将产品二维码放置于摄像头内
                    <div><button id='btnScanRecordStop' type="button" class="btn btn-info">停止扫描</button></div>
                    <div style="width:640;height:480px"><video id="recordVideo"></video>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 维修记录模态框（Modal） -->
    <div class="modal fade" id="recordHistoryModal">
        <div class="modal-dialog" style="width: 80%">
            <div class="modal-content">
                <div class="modal-body">

                    <h2>维修历史</h2>
                    <hr>

                    <!-- 定义基础模块数据表 -->
                    <table id="rp_recordbillsHistory" class=" table table-striped table-bordered" style="width:100%">
                        <thead>
                            <tr>
                                <th>维修码</th>
                                <th>客户简称</th>
                                <th>维修单号</th>
                                <th>产品编号</th>
                                <th>是否返修</th>
                                <th>是否紧急</th>
                                <th>质保期内</th>
                                <th>维修人</th>
                                <th>维修费用</th>
                                <th>流程状态</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>



                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="recordHistoryCloseBtn">关闭
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- 记录扫描模态框（Modal） -->

    <div class="modal fade" id="scanStaffModal">
        <div class="modal-dialog" style="width: 900px;">
            <div class="modal-content">

                <div class="modal-body">

                    <div>
                        <form class="form-horizontal">
                            <div class="form-group">
                                <label class="col-sm-1 control-label">维修码</label>
                                <div class="col-sm-4">
                                    <input class="form-control" id="scanModel-repairId" type="text"
                                        value="将维修码置于摄像头内自动识别"">
                                </div>

                                <label class=" col-sm-1 control-label">维修人</label>
                                    <div class="col-sm-4">
                                        <select id="scanModel-repairStaff" class="selectpicker" data-live-search="true"
                                            data-size="5">
                                        </select>
                                    </div>

                                    <div class="col-sm-2">
                                        <button id='btnBindStaff' type="button" class="btn btn-info">领单</button>
                                    </div>
                                </div>
                        </form>
                    </div>

                    <div style="text-align:center;">
                        <video id="staffVideo"></video>
                    </div>

                </div>

                <div class="modal-footer">
                    <div><button id='btnScanStaffStop' type="button" class="btn btn-info">停止扫描</button></div>
                </div>
            </div>
        </div>
    </div>



    <div class="row clearfix">
        <div class="col-md-12 column">


            <!-- 定义基础模块数据表 -->
            <table id="rp_recordbills" class=" table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>维修码</th>
                        <th>客户简称</th>
                        <th>维修单号</th>
                        <th>产品编号</th>
                        <th>是否返修</th>
                        <th>是否紧急</th>
                        <th>质保期内</th>
                        <th>维修人</th>
                        <th>维修费用</th>
                        <th>流程状态</th>

                    </tr>
                </thead>
                <tbody></tbody>
            </table>

            <!-- 定义主表关联附表数据表 -->
            <table id="rp_recordbillsSub" class=" table table-striped table-bordered" style="width:100%;display: none;">
                <thead>
                    <tr>
                        <th>序号</th>
                        <th>零件编号</th>
                        <th>零件描述</th>
                        <th>位置</th>
                        <th>用量</th>
                        <th>单价</th>
                        <th>金额</th>
                        <th>领用状态</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>


        </div>
    </div>





    <!-- 模态框（Modal） -->
    <div class="modal fade" id="rp_recordbillsModal" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog" style="width: 75%;">

            <!-- 按钮触发模态框 -->
            <button class="btn btn-primary" data-toggle="modal" data-target="#rp_recordbillsModal"
                id="rp_recordbillsModalOpen" style="display: none;">
                开始演示模态框
            </button>
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">
                        表单详情
                    </h4>
                </div>
                <div class="modal-body">

                    <!-- 历史维修记录 -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                                    维修记录
                                </a>
                            </h4>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse ">
                            <div class="panel-body">
                                此处加载此产品历史维修记录

                                <!-- 定义基础模块数据表 -->
                                <table id="rp_recordHistory" class=" table table-striped table-bordered"
                                    style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>申请单号</th>
                                            <th>产品编号</th>
                                            <th>产品描述</th>
                                            <th>问题描述</th>
                                            <th>维修记录</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>

                            </div>
                        </div>
                    </div>

                    <!-- 领料退料接口 -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                                    领料退料
                                </a>
                            </h4>
                        </div>
                        <div id="collapseTwo" class="panel-collapse collapse ">
                            <div class="panel-body">
                                此处放置领料退料

                                <!-- 定义基础模块数据表 -->
                                <table id="rp_materialRecords" class=" table table-striped table-bordered"
                                    style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>单号</th>
                                            <th>类型</th>
                                            <th>零件编号</th>
                                            <th>日期</th>
                                            <th>金额</th>
                                            <th>对应ERP单号</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <!-- 表单面板 -->
                    <div class="panel panel-default">
                        <div class="panel-body">


                            <form class="form-horizontal" role="form" id='rp_recordbillsForm'>

                                <input id="rp_recordbillsForm-DBID" type="hidden" value="">

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">维修单号</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-recordBillId"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">申请单号</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-requestBillId"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">流程状态</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-status"></p>
                                    </div>
                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">产品编号</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-productId"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">产品描述</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-productDescription"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">产品类别</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-productClass"></p>
                                    </div>

                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">系统分类</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-systemType"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">出厂编号</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-factoryNo"></p>
                                    </div>


                                    <label class="col-sm-1 control-label">原厂编号</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-orginFactoryNo"></p>
                                    </div>


                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">生产年份</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-productYear"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">生产月份</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-productMonth"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">生产日期</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-productionDate"></p>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <label class="col-sm-1 control-label">故障描述</label>
                                    <div class="col-sm-11">
                                        <input class="form-control" id="rp_recordbillsForm-faultDescription" type="text"
                                            value="该输入框获得焦点...">
                                    </div>

                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">检测结果</label>
                                    <div class="col-sm-3">
                                        <input class="form-control" id="rp_recordbillsForm-testResult" type="text"
                                            value="该输入框获得焦点...">
                                    </div>
                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">故障现象</label>
                                    <div class="col-sm-3">
                                        <select id="rp_recordbillsForm-faultShow" data-live-search="true" data-size="5"
                                            class="selectpicker" multiple>
                                        </select>
                                    </div>

                                    <label class="col-sm-1 control-label">故障部件</label>
                                    <div class="col-sm-3">
                                        <select id="rp_recordbillsForm-faultPart" data-live-search="true" data-size="5"
                                            class="selectpicker" multiple>
                                        </select>
                                    </div>

                                    <label class="col-sm-1 control-label">故障原因</label>
                                    <div class="col-sm-3">
                                        <select id="rp_recordbillsForm-faultReason" data-live-search="true"
                                            data-size="5" class="selectpicker" multiple>
                                        </select>
                                    </div>

                                </div>


                                <div class="form-group">
                                    <!---添加成色后无法保存单据此处有问题-->
                                    <label class="col-sm-1 control-label">成色</label>
                                    <div class="col-sm-3">
                                        <select id="rp_recordbillsForm-conditionStatus" class="selectpicker">
                                        </select>
                                    </div>


                                    <label class="col-sm-1 control-label">检测项目</label>
                                    <div class="col-sm-3">
                                        <select id="rp_recordbillsForm-testItem" class="selectpicker">
                                        </select>
                                    </div>




                                </div>


                                <div class="form-group">
                                    <label class="col-sm-1 control-label">附件</label>
                                    <div class="col-sm-11">
                                        <input type="file" multiple="multiple" id="fileToUpload"
                                            onchange="fileSelected();" style="display: none;" />
                                        <a class="btn btn-info" onclick="$('#fileToUpload').click()">上传附件</a>
                                        <button type="button" type="button" class="btn btn-warning"
                                            onclick="deleteFiles()">清空附件</button>

                                        <div class="progress progress-striped active" id='progressbarDiv'
                                            style="display: none;">
                                            <div id="progressbar" class="progress-bar progress-bar-success"
                                                role="progressbar" aria-valuenow="60" aria-valuemin="0"
                                                aria-valuemax="100" style="width: 0%;">
                                            </div>
                                        </div>
                                        <p id="files"></p>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">替换零件清单</label>
                                    <div class="col-sm-11">
                                        <p class="form-control-static" id="rp_recordbillsForm-changePartList"></p>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <label class="col-sm-1 control-label">维修结果</label>
                                    <div class="col-sm-5">
                                        <select id="rp_recordbillsForm-repairResult" class="selectpicker">
                                        </select>
                                    </div>

                                    <label class="col-sm-1 control-label">维修人</label>
                                    <div class="col-sm-5">
                                        <select id="rp_recordbillsForm-repairStaff" class="selectpicker"
                                            data-live-search="true" data-size="5">
                                        </select>
                                    </div>

                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">是否返修</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-isRework"></p>
                                    </div>


                                    <label class="col-sm-1 control-label">是否加急</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-urgent"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">质保期内</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-inWarranty"></p>
                                    </div>


                                </div>


                                <div class="form-group">


                                    <label class="col-sm-1 control-label">检测费用</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-testFee"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">零件费用</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-partsFee"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">年份费用</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-yearsFee"></p>
                                    </div>

                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">成色费用</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-conditionFee"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">加急费用</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-urgentFee"></p>
                                    </div>
                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">总费用</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-repairTotalFee"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">免费维修</label>
                                    <div class="col-sm-3">
                                        <p class="form-control-static" id="rp_recordbillsForm-forFree"></p>
                                    </div>

                                </div>
                                <div class="form-group">
                                    <label class="col-sm-1 control-label">
                                        <span class="btn btn-success">最终费用</span>
                                    </label>
                                    <div class="col-sm-3">
                                        <input class="form-control" id="rp_recordbillsForm-repairLastFee" type="text"
                                            value="该输入框获得焦点...">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">制单人</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_recordbillsForm-maker"></p>
                                    </div>

                                    <label class="col-sm-1 control-label">制单时间</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_recordbillsForm-makeDate"></p>
                                    </div>
                                </div>
                            </form>

                            <!-- 子表 -->
                            <hr>

                            <div class="row clearfix">
                                <div class="col-md-12 column">

                                    <!-- 功能组按钮 -->
                                    <div class="well">
                                        <!-- <button id='btnScan' type="button" class="btn btn-success">扫描新增</button> -->
                                        <button id='btnAddPart' type="button" class="btn btn-info">添加零件</button>
                                        <button id='btnDeletePart' type="button" class="btn btn-warning">删除零件</button>
                                        <!-- <button id='btnReturnPart' type="button" class="btn btn-danger">退还零件</button> -->
                                    </div>

                                    <!-- 扫描模态框（Modal） -->

                                    <div class="modal fade" id="scanModal">
                                        <div class="modal-dialog" style="width: 675px;">
                                            <div class="modal-content">

                                                <div class="modal-body">请将产品二维码放置于摄像头内
                                                    <div><button id='btnScanStop' type="button"
                                                            class="btn btn-info">停止扫描</button></div>
                                                    <!-- <button id='btnScanModalClose' data-dismiss="">关闭扫描框</button> -->
                                                    <div style="width:640;height:480px"><video id="preview"></video>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <!-- 定义基础模块数据表 -->
                                    <table id="rp_partsbills" class=" table table-striped table-bordered"
                                        style="width:100%">
                                        <thead>
                                            <tr>
                                                <th>序号</th>
                                                <th>零件编号</th>
                                                <th>零件名称</th>
                                                <th>替换位置</th>
                                                <th>用量</th>
                                                <th>单价</th>
                                                <th>零件费</th>
                                                <th>领用状态</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>

                                    <div class="panel panel-default" id='rp_partsbillsPanel'>
                                        <div class="panel-heading">
                                            <h3 class="panel-title">替换零件</h3>
                                        </div>
                                        <div class="panel-body">

                                            <form class="form-horizontal" role="form" id='rp_partsbillsForm'>

                                                <!-- <input id="rp_partsbillsForm-DBID" type="hidden" value=""> -->
                                                <!-- <input id="rp_partsbillsForm-requestBillId" type="hidden" value=""> -->

                                                <!-- 零件信息div 双击打开时不可编辑 -->
                                                <div id='partInfoDiv'>

                                                    <div class="form-group">
                                                        <label class="col-sm-1 control-label">序号</label>
                                                        <div class="col-sm-3">
                                                            <p class="form-control-static" id="rp_partsbillsForm-rowId">
                                                            </p>
                                                        </div>

                                                        <label class="col-sm-1 control-label">可用库存</label>
                                                        <div class="col-sm-3">
                                                            <p class="form-control-static"
                                                                id="rp_partsbillsForm-stockNum">
                                                            </p>
                                                        </div>

                                                        <label class="col-sm-1 control-label">领用状态</label>
                                                        <div class="col-sm-3">
                                                            <p class="form-control-static"
                                                                id="rp_partsbillsForm-numStatus">
                                                            </p>
                                                        </div>
                                                    </div>

                                                    <div class="form-group">

                                                        <label class="col-sm-1 control-label">零件编号</label>
                                                        <div class="col-sm-5">
                                                            <select id="rp_partsbillsForm-partId"
                                                                class="form-control selectpicker"
                                                                data-live-search="true" data-size="5"
                                                                data-dropup-auto="false">
                                                            </select>
                                                        </div>

                                                        <label class="col-sm-1 control-label">零件位置</label>
                                                        <div class="col-sm-5">
                                                            <select id="rp_partsbillsForm-partLocation"
                                                                class="selectpicker" data-live-search="true"
                                                                data-size="5" data-dropup-auto="false" multiple>
                                                            </select>
                                                        </div>

                                                    </div>


                                                    <div class="form-group">
                                                        <label class="col-sm-1 control-label">零件名称</label>
                                                        <div class="col-sm-5">
                                                            <input class="form-control" id="rp_partsbillsForm-partName"
                                                                type="text">
                                                        </div>

                                                        <label class="col-sm-1 control-label">零件描述</label>
                                                        <div class="col-sm-5">
                                                            <input class="form-control"
                                                                id="rp_partsbillsForm-partDescription" type="text">
                                                        </div>

                                                    </div>

                                                </div>


                                                <div class="form-group">

                                                    <label class="col-sm-1 control-label">用量</label>
                                                    <div class="col-sm-3">
                                                        <input class="form-control" id="rp_partsbillsForm-num"
                                                            type="text">
                                                    </div>

                                                    <label class="col-sm-1 control-label">零件单价</label>
                                                    <div class="col-sm-3">
                                                        <input class="form-control" id="rp_partsbillsForm-price"
                                                            type="text">
                                                    </div>


                                                    <label class="col-sm-1 control-label">零件费用</label>
                                                    <div class="col-sm-3">
                                                        <input class="form-control" id="rp_partsbillsForm-partFee"
                                                            type="text">
                                                    </div>
                                                </div>



                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">备注</label>
                                                    <div class="col-sm-11">
                                                        <input class="form-control" id="rp_partsbillsForm-remark"
                                                            type="text">
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label"></label>
                                                    <div class="col-sm-5">
                                                        <button type="button" class="btn btn-primary" id="btnPartSave">
                                                            保存
                                                        </button>
                                                    </div>
                                                </div>

                                            </form>


                                        </div>
                                    </div>

                                </div>
                            </div>


                        </div>
                    </div>



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="rp_recordbillsModalClose">关闭
                    </button>
                    <button type="button" class="btn btn-primary" id="rp_recordbillsSave">
                        保存单据
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>


</div>


<script type="text/javascript">
    //申请表主表dataTable column 数组

    const mainColumnsArray = [{
            data: 'repairId',
        }, {
            data: 'customerShortName'
        }, {
            data: 'recordBillId'
        },
        {
            data: 'productId'
        }, {
            data: 'isRework',
        }, {
            data: 'urgent',
        }, {
            data: 'inWarranty',
        }, {
            data: 'repairStaff',
        }, {
            data: 'repairLastFee',
        }, {
            data: 'status',
        }
    ]

    //申请表子表dataTable column 数组
    const subColumnsArray = [{
        data: 'rowId',
    }, {
        data: 'partId',
    }, {
        data: 'partName',
    }, {
        data: 'partLocation',
    }, {
        data: 'num',
    }, {
        data: 'price',
    }, {
        data: 'partFee',
    }, {
        data: 'numStatus'
    }]


    //创建记录单新单号
    const createRecordBillId = async () => {
        let r1 = await getDataBySql({
            sql: "getRecordBillsNum",
            params: {
                filter: 'makeDate="' + currentDate() + '"'
            }
        })
        // console.log('r1:' + r1);
        let r2 = r1[0].billsNum
        let r3 = parseInt(r2) + 1;

        let r4 = PrefixInteger(r3, 3);
        // console.log('r4:' + r4);
        let r5 = dateFormat(currentDate(), 'yyyyMMdd');

        let billId = 'R-' + r5 + r4;
        $("#rp_recordbillsForm-recordBillId").text(billId);
    }


    //根据partId 获得最新库存数量

    const getStockNum = async (partId) => {

        let r = await getDataBySql({
            sql: 'getStockNum',
            params: {
                filter: 'partId="' + partId + '"'
            }
        })

        let stockNum = 0
        if (r.length > 0) {
            stockNum = r[0].stockNum
        }
        return stockNum

    }

    //更新所选配件即时库存
    const showStockNum = async () => {
        let stockNum = 0;
        let partId = $('#rp_partsbillsForm-partId option:selected').val();

        if (partId) {
            stockNum = await getStockNum(partId);
        }
        $('#rp_partsbillsForm-stockNum').text(stockNum)
    }


    //选中partId后,填写其他相关信息

    const fillPartInfo = async (partId) => {
        console.log('fillPartInfo partId:' + partId);
        let r1 = await getDataBySql({
            sql: 'getPartInfo',
            params: {
                filter: 'partId="' + partId + '" and productId="' + $('#rp_recordbillsForm-productId')
                    .text() + '"'
            }
        })

        // console.log('r1:' + JSON.stringify(r1));

        if (r1.length === 0) {
            return;
        }
        let r2 = r1[0]
        delete r2.partLocation;
        delete r2.partId;
        r2.partFee = r2.price * r2.num;

        // console.log('r2:' + JSON.stringify(r2));
        fillFormInputs({
            formId: 'rp_partsbillsForm',
            params: r2
        })
        // $("#rp_recordbillsForm-customerArea").selectpicker('val', r2.customerArea)
    }

    //添加检测项目监听器
    const addTestItemListener = () => {
        $('#rp_recordbillsForm-testItem').unbind();
        $('#rp_recordbillsForm-testItem').change(function () {
            let testFee = $('#rp_recordbillsForm-testItem option:selected').attr("data-tokens");
            if (testFee) {
                $('#rp_recordbillsForm-testFee').text(testFee);
                CalcRepairTotalFee();
            }
        })
    }

    //添加成色监听器
    const addConditionStatusListener = () => {
        $('#rp_recordbillsForm-conditionStatus').unbind();
        $('#rp_recordbillsForm-conditionStatus').change(function () {
            let conditionStatus = $('#rp_recordbillsForm-testItem option:selected').val();
            if (conditionStatus) {
                CalcRepairTotalFee();
            }
        })
    }

    //添加维修结果监听器
    const addRepairResultListener = () => {
        $('#rp_recordbillsForm-repairResult').unbind();
        $('#rp_recordbillsForm-repairResult').change(function () {
            let repairResult = $('#rp_recordbillsForm-repairResult option:selected').val();
            if (repairResult) {
                CalcRepairTotalFee();
            }
        })
    }






    // //添加替换位置监听器
    // const addPartLocationListener = () => {
    //     $('#rp_partsbillsForm-partLocation').unbind();
    //     $('#rp_partsbillsForm-partLocation').change(function () {
    //         let partLocation = $('#rp_partsbillsForm-partLocation option:selected').val();
    //         if (partLocation) {
    //             // console.log('partLocation11111', partLocation);

    //             //重新刷新显示
    //             $('#rp_partsbillsForm-partLocation').selectpicker('refresh');

    //             // //获取partId当前值
    //             // let partId = $('#rp_partsbillsForm-partId option:selected').val();

    //             loadBootStrapSelector({
    //                 elementId: 'rp_partsbillsForm-partId',
    //                 sqlParams: {
    //                     sql: 'getPartSelector',
    //                     params: {
    //                         filter: 'partLocation="' + partLocation + '"'
    //                     }
    //                 },
    //             })
    //         }
    //     })
    // }


    //加载位置信息selector
    const loadLocationsSelector = async (i) => {
        $('#' + i.elementId).empty(); //清空原有选项
        $('#' + i.elementId).selectpicker('destroy'); //销毁selectpicker 避免显示异常

        $('#' + i.elementId).selectpicker({
            noneSelectedText: "未选择" //默认显示内容
        });

        // if (!i.sqlParams) {
        //     $('#' + i.elementId).append($('<option value="">未选择</option>'));
        //     return
        // }

        let locationsRS = await getDataBySql(i.sqlParams);
        if (locationsRS.length === 0) {
            return
        }

        let locationsStr = locationsRS[0].locations;
        let locationsArr = locationsStr.split(',');

        for (const n of locationsArr) {
            // console.log('n', n);
            if (n) {
                $('#' + i.elementId).append($('<option  data-tokens=' + n + ' value=' + n + '>' + n +
                    '</option>'));
            }
        }

        let defaultValue = '';
        console.log('len', $('#' + i.elementId + ' option').length);

        if ($('#' + i.elementId + ' option').length === 1) {
            defaultValue = locationsArr[0];
            console.log('defaultValueArr', defaultValue);
        }

        if (i.initValue) {
            defaultValue = i.initValue;
        }

        console.log('defaultValue', defaultValue);


        $('#' + i.elementId).selectpicker('val', defaultValue);
        $('#' + i.elementId).selectpicker('refresh');

    }

    //添加替换位置监听器
    const addPartIdListener = () => {
        $('#rp_partsbillsForm-partId').unbind();
        $('#rp_partsbillsForm-partId').change(async function () {
            let partId = $('#rp_partsbillsForm-partId option:selected').val();
            // console.log('partId', partId);
            if (partId) {
                $('#rp_partsbillsForm-partId').selectpicker('refresh');
                fillPartInfo(partId);
                showStockNum();

                loadLocationsSelector({
                    elementId: 'rp_partsbillsForm-partLocation',
                    sqlParams: {
                        sql: 'getPartLocations',
                        params: {
                            filter: 'partId="' + partId + '" and productId="' +
                                $('#rp_recordbillsForm-productId').text() + '"'
                        }
                    },
                })
            }
        })
    }


    //添加主表监听器,定义双击打开事件
    const addMainTableListener = () => {

        //解绑原事件,避免重复加载
        $('#rp_recordbills tbody').unbind();

        //定义主表单击击事件
        $('#rp_recordbills tbody').on('click', 'tr', async function () {
            //设定选中
            let table = $('#rp_recordbills').DataTable();

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');

                $('#rp_recordbillsSub').hide();
            } else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');

                let rowSelect = table.row('.selected').data();
                // console.log("rowSelect:" + JSON.stringify(rowSelect));

                await loadMainBillSubTable(rowSelect.recordBillId)

                //打开面板
                $('#rp_recordbillsSub').show();

            }

        });

        //定义主表双击事件
        $('#rp_recordbills tbody').on('dblclick', 'tr', function () {

            //设定选中
            let table = $('#rp_recordbills').DataTable();
            table.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
            $('#btnRecordBillNew').click()
        });

    }

    //加载展开选定表子表关联数据

    const loadMainBillSubTable = async (billId) => {
        let dataArray = await getDataBySql({
            sql: 'sqlSubPartBills',
            params: {
                filter: 'recordBillId="' + billId + '"'
            }
        })

        // console.log('dataArray', dataArray);

        //将表数据同步到共用数组
        subTableData = dataArray;


        // loadDataSubTable({
        //     elementId: 'rp_recordbillsSub',
        //     dataArray: subTableData
        // });

        loadBillDataTable({
            elementId: 'rp_recordbillsSub',
            dtParams: {
                dtConfig: 'dtConfigData',
                data: subTableData,
                columns: subColumnsArray
            }
        })
    }



    //主表加载数据函数;

    const loadBillMainTable = async () => {
        //初始化主表
        loadBillDataTable({
            elementId: 'rp_recordbills',
            sqlParams: {
                sqlId: 'sqlRecordBills',
                params: {
                    orderBy: 'billSaveTimeStamp desc'
                }
            },
            dtParams: {
                columns: mainColumnsArray
            }
        })
        addMainTableListener();
    }


    //添加子表监听器,定义双击展开事件
    const addSubTableListener = () => {
        let subTable = $('#rp_partsbills').DataTable();

        //解绑原事件
        $('#rp_partsbills tbody').unbind();

        //定义子表双击事件
        $('#rp_partsbills tbody').on('click', 'tr', async function () {

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                $('#rp_partsbillsPanel').hide();
            } else {
                subTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');

                let rowSelect = subTable.row('.selected').data();
                // console.log("rowSelect:" + JSON.stringify(rowSelect));

                //解绑监听器
                // $('#rp_partsbillsForm-partLocation').unbind();
                $('#rp_partsbillsForm-partId').unbind();


                //设置禁止修改
                if (rowSelect.numStatus === '预领') {
                    $('#rp_partsbillsForm').find('select,input,textarea').attr("disabled", false);
                }
                if (rowSelect.numStatus === '已领') {
                    $('#rp_partsbillsForm').find('select,input,textarea').attr("disabled", true);
                }

                await loadBootStrapSelector({
                    elementId: 'rp_partsbillsForm-partId',
                    sqlParams: {
                        sql: 'getPartSelector',
                        params: {
                            filter: 'productId="' + $('#rp_recordbillsForm-productId').text() +
                                '"'
                        }
                    },
                })

                await loadLocationsSelector({
                    elementId: 'rp_partsbillsForm-partLocation',
                    sqlParams: {
                        sql: 'getPartLocations',
                        params: {
                            filter: 'partId="' + rowSelect.partId + '" and productId="' +
                                $('#rp_recordbillsForm-productId').text() + '"'
                        }
                    },
                })

                // console.log('initAndFillFormInputs rowSelect:', rowSelect);


                //初始化并填写form内inputs
                initAndFillFormInputs({
                    formId: 'rp_partsbillsForm',
                    params: rowSelect
                })

                // $('#partInfoDiv input,select').attr("disabled", true); 会影响到div外select


                //加载库存
                showStockNum()

                //重新添加监听器
                addPartFeeListener();

                //打开面板
                $('#rp_partsbillsPanel').show();

            }

        });
    }



    //用数组重载子表
    const loadDataSubTable = async ({
        elementId,
        dataArray
    }) => {

        //加载表格
        loadBillDataTable({
            elementId: elementId,
            dtParams: {
                dtConfig: 'dtConfigData',
                data: dataArray,
                columns: subColumnsArray
            }
        })



        //如数据为0,清空tbody 避免直接获取size =1;
        if (dataArray.length === 0) {
            $('#rp_partsbills tbody').html("");
        }

        //添加子表双击事件
        addSubTableListener();
    }

    //加载展开选定表子表关联数据

    const loadBillSubTable = async (billId) => {
        let dataArray = await getDataBySql({
            sql: 'sqlChangeparts',
            params: {
                filter: 'recordBillId="' + billId + '"'
            }
        })
        //将表数据同步到共用数组
        subTableData = dataArray;
        loadDataSubTable({
            elementId: 'rp_partsbills',
            dataArray: subTableData
        });
    }

    //计算零件费用
    const CalcPartFee = () => {
        let num = $('#rp_partsbillsForm-num').val();
        let price = $('#rp_partsbillsForm-price').val();
        let partFee = parseInt(num) * parseInt(price);
        $('#rp_partsbillsForm-partFee').val(partFee);
    }

    //计算总费用
    const CalcRepairTotalFee = () => {
        //初始话费用
        let [testFee, partsFee, yearsFee, conditionFee, urgentFee, repairTotalFee, repairLastFee] = [0, 0, 0, 0, 0,
            0, 0
        ]

        //检测费
        if ($('#rp_recordbillsForm-testFee').text()) {
            testFee = parseInt($('#rp_recordbillsForm-testFee').text());
        }

        //配件费
        let rowNum = $("#rp_partsbills tbody tr").size();
        if (rowNum > 0) {
            let subTable = $('#rp_partsbills').DataTable();
            let rowsData = subTable.rows().data();
            // console.log('rows:' + JSON.stringify(rowsData));
            for (let n = 0; n < rowNum; n++) {
                partsFee = partsFee + parseInt(rowsData[n].partFee);
            }
        }
        $('#rp_recordbillsForm-partsFee').text(partsFee);

        //A部分费用
        let partAFee = testFee + partsFee;


        if (partAFee > 0) {
            //年份费用
            let productDate = $('#rp_recordbillsForm-productYear').text() + '-' +
                $('#rp_recordbillsForm-productMonth').text() + '-01';
            let months = getMonths(productDate, currentDate())
            console.log('months', months);
            switch (true) {
                case months > 120:
                    yearsFee = partAFee * 0.15;
                    break;
                case months <= 120 && months > 60:
                    yearsFee = partAFee * 0.1;
                    break;
                case months <= 60 && months > 36:
                    yearsFee = partAFee * 0.05;
                    break;
                case months <= 36:
                    break;
            }
            yearsFee = yearsFee.toFixed(2)
            $('#rp_recordbillsForm-yearsFee').text(yearsFee);

            //成色费用
            let conditionStatus = $('#rp_recordbillsForm-conditionStatus option:selected').val();
            switch (conditionStatus) {
                case '好':
                    break;
                case '一般':
                    conditionFee = partAFee * 0.05;
                    break;
                case '差':
                    conditionFee = partAFee * 0.1;
                    break;
            }

            conditionFee = conditionFee.toFixed(2)
            $('#rp_recordbillsForm-conditionFee').text(conditionFee);
        }

        //加急费
        if ($('#rp_recordbillsForm-urgent').text() === '是') {
            urgentFee = 20;
        }
        $('#rp_recordbillsForm-urgentFee').text(urgentFee);


        //总费用
        console.log(testFee, partsFee, yearsFee, conditionFee, urgentFee, repairTotalFee, repairLastFee);

        //特定费用转换为浮点
        repairTotalFee = partAFee + parseFloat(yearsFee) + parseFloat(conditionFee) + urgentFee;
        repairTotalFee = Number(repairTotalFee).toFixed(2)
        $('#rp_recordbillsForm-repairTotalFee').text(repairTotalFee);

        //是否免费
        let forFree = '否';
        if ($('#rp_recordbillsForm-inWarranty').text() === '是') { //质保期内免费
            forFree = '是'
        }
        if ($('#rp_recordbillsForm-isRework').text() === '是') { //返修
            forFree = '是'
        }

        if ($('#rp_recordbillsForm-repairResult option:selected').val() === '检测后正常' ||
            $('#rp_recordbillsForm-repairResult option:selected').val() === '报废') { //ok或报废
            forFree = '是'
        }

        $('#rp_recordbillsForm-forFree').text(forFree);

        //最终费用

        if (forFree === '是') {
            $('#rp_recordbillsForm-repairLastFee').val(0);
        } else {
            $('#rp_recordbillsForm-repairLastFee').val(Math.round(repairTotalFee / 10) * 10);
        }

        // console.log('repairTotalFee:' + repairTotalFee);
    }


    //零件费监听器
    const addPartFeeListener = () => {
        $("#rp_partsbillsForm-num").on("input propertychange", function () {
            CalcPartFee();
        });

        $("#rp_partsbillsForm-price").on("input propertychange", function () {
            CalcPartFee();
        });
    }

    //总费用监听器
    const addRepairTotalFeeListener = () => {
        $("#rp_recordbillsForm-testFee").on("input propertychange", function () {
            CalcRepairTotalFee();
        });


    }




    //检查需求单Id函数,防止多人同时填单时出现的覆盖问题

    const checkRecordBillId = async () => {
        let billId = $("#rp_recordbillsForm-recordBillId").text();

        let r1 = await getDataBySql({
            sql: 'getRecordBillsNum',
            params: {
                filter: 'recordBillId="' + billId + '"'
            }
        })

        let r2 = r1[0].billsNum;
        // console.log("checkRecordBillId:" + r2);

        let o = r2 > 0 ? false : true;
        return o;

    }


    //更新记录单号加1
    const updateRecordBillId = () => {
        let billId = $("#rp_recordbillsForm-recordBillId").text();
        if (billId) {
            billIdArr = billId.split('-');
            let newBillId = billIdArr[0] + '-' + (parseInt(billIdArr[1]) + 1);
            $("#rp_recordbillsForm-recordBillId").text(newBillId);
        }
    }


    //递归更新单号直到不存在冲突单号;

    const autoUpdateRecordBillId = async () => {
        let r = await checkRecordBillId();
        if (r) {
            return true
        } else {
            // console.log('fail:' + $("#rp_recordbillsForm-recordBillId").text());
            updateRecordBillId()
            // console.log('fail11:' + $("#rp_recordbillsForm-recordBillId").text());
            return await autoUpdateRecordBillId();
        }
    }

    //获取partIds 多零件实时库存数组,以数组返回,减少数据库交互次数 提高效率;

    const getStockNums = async (partIdsArr) => {
        let partIdsRange = '';

        for (const n of partIdsArr) {
            partIdsRange = partIdsRange + '"' + n + '",'
        }

        partIdsRange = partIdsRange.substring(0, partIdsRange.length - 1);

        let r = await getDataBySql({
            sql: 'getStockNum',
            params: {
                filter: 'partId in (' + partIdsRange + ')'
            }
        })

        stockNums = r
        return stockNums

    }

    //合并subTableData有效同类项 
    const getNeedUpdatePartsArr = (subTableData) => {

        let partsArr = []

        for (const n of subTableData) {

            if (n.numStatus === '预领') {

                let findSamePartId = false;
                for (let m of partsArr) {
                    if (n.partId === m.partId) {
                        findSamePartId = true
                        m.num = parseInt(m.num) + parseInt(n.num);
                    }
                }

                if (!findSamePartId) {
                    partsArr.push({
                        partId: n.partId,
                        num: n.num
                    });
                }
            }
        }

        return partsArr

    }



    //检测库存状态subTableData=[{partId,num,numStatus}]
    const checkPartsStock = async (subTableData) => {

        let checkResult = true;
        let partsArr = getNeedUpdatePartsArr(subTableData);
        let partIdsArr = [];
        // let nums = [];
        for (const n of partsArr) {
            partIdsArr.push(n.partId)
        }

        let o = {
            result: true
        }

        if (partIdsArr.length > 0) {

            //获取即时库存
            let JITStock = await getStockNums(partIdsArr);

            // console.log('JITStock:', JITStock);

            for (const n of JITStock) {
                for (const m of partsArr) {
                    if (n.partId === m.partId && n.stockNum < m.num) {
                        // console.log('发现不足库存');
                        checkResult = false;
                    }
                }
            }
            o = {
                result: checkResult,
                JITStock: JITStock
            }
        }

        return o
    }

    //刷新零件清单
    const refreshPartList = () => {
        let partList = '';
        for (const n of subTableData) {
            partList = partList + n.partId + '*' + n.num + ','
        }

        partList = partList.substring(0, partList.length - 1);

        $('#rp_recordbillsForm-changePartList').text(partList);

    }


    //保存维修记录单函数
    const saveRecordBill = async () => {

        //合并相同
        let checkResultData = await checkPartsStock(subTableData);
        // alert('checkResultData:' + JSON.stringify(checkResultData))

        if (checkResultData.result) {

            let mainFormData = getPostFormData({
                formId: 'rp_recordbillsForm'
            })

            //给主表数据添加,maker 和makeDate时间;新增状态等待单号检测完成,制单人为空则为新增状态

            if (!mainFormData.data[0].maker) {
                await autoUpdateRecordBillId();
                mainFormData.data[0].maker = sessionName;
                mainFormData.data[0].makeDate = currentDate();
                mainFormData.data[0].status = '维修中'
            }

            if (mainFormData.data[0].repairResult) {
                mainFormData.data[0].status = '维修完成'
                mainFormData.data[0].finishDate = currentDate();
            }

            //添加附件信息

            let filesArr = getFilesJson();
            mainFormData.data[0].files = filesArr;

            //添加update key
            mainFormData.key = 'DBID';

            // alert(JSON.stringify(mainFormData))

            console.log('mainFormData:' + JSON.stringify(mainFormData));

            if (subTableData.length > 0) {
                let r1 = await postDBData({
                    sql: 'update',
                    params: mainFormData
                })

                //获取需要更新库存数据零件
                let partsNeedUpdateStockArr = getNeedUpdatePartsArr(subTableData);

                //扣减零件库存
                let r2;
                if (partsNeedUpdateStockArr.length > 0) {
                    // console.log('checkResultData.JITStock', checkResultData.JITStock);

                    for (let n of partsNeedUpdateStockArr) {
                        //扣减库存转为负数
                        n.num = -n.num;

                        for (const m of checkResultData.JITStock) {
                            if (n.partId === m.partId) {
                                n.stockNum = m.stockNum;
                            }
                        }

                    }
                    // console.log('partsNeedUpdateStockArr', partsNeedUpdateStockArr);

                    r2 = await updateStock({
                        updateStock: partsNeedUpdateStockArr,
                        actType: '领料',
                        rpBillId: mainFormData.data[0].recordBillId
                    });
                }

                if (r2) {
                    for (let n = 0; n < subTableData.length; n++) {
                        if (subTableData[n].numStatus === '预领') {
                            subTableData[n].numStatus = '已领'
                            delete subTableData[n].stockNum;
                        }
                    }
                    alert('扣减库存成功！')
                }

                let r3 = await postDBData({
                    sql: 'replace',
                    params: {
                        tableId: 'rp_partsbills',
                        data: subTableData
                    }
                })

                // console.log('saveRecordBill r1:' + JSON.stringify(r1));
                // console.log('saveRecordBill r2:' + JSON.stringify(r2));
                // console.log('saveRecordBill r3:' + JSON.stringify(r3));

                if (r1.affectedRows && r3.affectedRows) {
                    alert('保存成功!')
                    $('#rp_recordbillsModalClose').click()
                    loadBillMainTable();
                } else {
                    alert('出现错误!')
                }

            } else {
                let r4 = await postDBData({
                    sql: 'update',
                    params: mainFormData
                })

                if (r4.affectedRows) {
                    alert('保存成功!')
                    $('#rp_recordbillsModal').modal('hide');
                    loadBillMainTable();
                } else {
                    alert('出现错误!')
                }
            }



        } else {
            alert('存在库存不足零件,请检查!')
        }

    }

    $(document).ready(function () {

        //定义全局变量,当前用户名
        sessionName = "<%-locals.session.yjUser.Name%>";
        //定义子表全局变量临时数据数组
        subTableData = [];

        //初始化主表
        loadBillMainTable();

        //初始化子表
        loadDataSubTable({
            elementId: 'rp_partsbills',
            dataArray: subTableData
        });


        //扫描登记按钮
        $('#btnScanRecord').click(function () {

            let scanner = new Instascan.Scanner({
                video: document.getElementById('recordVideo')
            });
            scanner.addListener('scan', async function (repairId) {
                // console.log('repairId:' + repairId);

                //设定选中
                let table = $('#rp_recordbills').DataTable();
                table.$('tr.selected').removeClass('selected');
                let rows = table.rows().data();
                // console.log('rows', rows);

                for (let i = 0; i < rows.length; i++) {

                    if (rows[i].repairId === repairId) {
                        table.rows(i).select();
                        $('#btnRecordBillNew').click()
                        break;
                    }
                }

                // $(this).addClass('selected');
                // $('#btnRecordBillNew').click()

                scanner.stop().then(function () {
                    // alert('stoped');
                    $('#scanRecordModal').modal('hide')


                });
            });
            Instascan.Camera.getCameras().then(function (cameras) {
                if (cameras.length > 0) {
                    scanner.start(cameras[0]).then(function () {
                        // alert('start');
                    }).catch(function (err) {
                        alert('err:' + err);
                    });
                } else {
                    console.error('No cameras found.');
                }
            }).catch(function (e) {
                console.error(e);
                alert("系统错误,请检查摄像头设备!")

            });

            // 停止扫描按钮功能定义
            $('#btnScanRecordStop').unbind();
            $('#btnScanRecordStop').click(function () {
                scanner.stop()
                $('#scanRecordModal').modal('hide')
            })


            $('#scanRecordModal').modal('show');
        })


        //扫描领单按钮
        $('#btnScanStaff').click(function () {

            //清空信息
            $('#scanModel-repairId').val('');

            loadBootStrapSelector({
                elementId: 'scanModel-repairStaff',
                sqlParams: {
                    sql: 'getStaffSelector'
                },
                // initValue:'中国,北京'
            })

            //领单按钮
            $('#btnBindStaff').unbind();
            $('#btnBindStaff').click(async function () {
                let repairId = $('#scanModel-repairId').val();
                let repairStaff = $('#scanModel-repairStaff option:selected').val();
                // console.log(repairId, repairStaff);

                if (!repairId || !repairStaff) {
                    alert('维修码与维修人不能为空,请检查!')
                    return;
                }

                //设定选中
                let table = $('#rp_recordbills').DataTable();
                table.$('tr.selected').removeClass('selected');
                let rows = table.rows().data();

                for (let i = 0; i < rows.length; i++) {
                    if (rows[i].repairId === repairId) {
                        // console.log('rows[i]', rows[i]);
                        let DBID = rows[i].DBID;
                        if (rows[i].repairStaff && rows[i].repairStaff !== repairStaff) {
                            if (!confirm('该维修码已存在维修人,是否覆盖?')) {
                                return
                            }
                        }

                        //绑定维修人

                        let updateData = {
                            tableId: 'rp_recordbills',
                            key: ['DBID'],
                            data: [{
                                DBID: DBID,
                                repairStaff: repairStaff,
                                status: '维修中'
                            }]
                        }

                        let rs = await postDBData({
                            sql: 'update',
                            params: updateData
                        })

                        // console.log('rs', rs);

                        if (rs.affectedRows > 0) {
                            alert('成功绑定维修人!')

                            //清空信息
                            $('#scanModel-repairId').val('');
                            $('#scanModel-repairStaff').selectpicker('val', '');

                            loadBillMainTable();
                        }

                        break;
                    }
                }

            })




            let scanner = new Instascan.Scanner({
                video: document.getElementById('staffVideo')
            });
            scanner.addListener('scan', async function (repairId) {
                console.log('repairId:' + repairId);

                $('#scanModel-repairId').val(repairId);
                alert('扫描成功,请选择维修人!')


                // scanner.stop().then(function () {
                //     // alert('stoped');
                //     $('#scanStaffModal').modal('hide')
                // });
            });
            Instascan.Camera.getCameras().then(function (cameras) {
                if (cameras.length > 0) {
                    scanner.start(cameras[0]).then(function () {
                        // alert('start');
                    }).catch(function (err) {
                        alert('err:' + err);
                    });
                } else {
                    console.error('No cameras found.');
                }
            }).catch(function (e) {
                console.error(e);
                alert("系统错误,请检查摄像头设备!")

            });

            // 停止扫描按钮功能定义
            $('#btnScanStaffStop').unbind();
            $('#btnScanStaffStop').click(function () {
                scanner.stop()
                $('#scanStaffModal').modal('hide')
            })
            $('#scanStaffModal').modal('show');
        })


        // 扫描按钮
        $('#btnScan').click(function () {

            let scanner = new Instascan.Scanner({
                video: document.getElementById('preview')
            });
            scanner.addListener('scan', async function (partId) {
                console.log('partId:' + partId);
                let partData = await getDataBySql({
                    sql: 'getPart',
                    params: {
                        filter: 'partId="' + partId + '"'
                    }
                })

                console.log("partData:" + JSON.stringify(partData));

                let rowNum = $("#rp_partsbills tbody tr").size();

                console.log('rowNum:' + rowNum);


                let rowData = {};

                // {"rowId":2,"stockNum":"0","numStatus":"预领","partLocation":"位置3","partId":"1BP_KS_HTA3563K","partName":"1BP_KS_HTA3563K","partDescription":"HTA3563K按键板","num":"17","price":"143","partFee":"2431","remark":"","recordBillId":"R-20200220001"}
                rowData.rowId = rowNum + 1;
                rowData.numStatus = "预领";
                rowData.partLocation = partData[0].partLocation;
                rowData.partId = partData[0].partId;
                rowData.partName = partData[0].partName;
                rowData.partDescription = partData[0].partDescription;
                rowData.num = partData[0].num;
                rowData.price = partData[0].price;
                rowData.partFee = parseInt(partData[0].num) * parseInt(partData[0].price);
                rowData.recordBillId = $("#rp_recordbillsForm-recordBillId").text();


                console.log("rowData:" + JSON.stringify(rowData));

                subTableData.push(rowData);
                //重新加载子表
                loadDataSubTable({
                    elementId: 'rp_partsbills',
                    dataArray: subTableData
                });




                // alert('partId:' + partId);
                // $('#rp_recordbillsPanel').show();


                scanner.stop().then(function () {
                    // alert('stoped');
                    $('#scanModal').modal('hide')

                    //重新计算总费用
                    CalcRepairTotalFee();

                });
            });
            Instascan.Camera.getCameras().then(function (cameras) {
                if (cameras.length > 0) {
                    scanner.start(cameras[0]).then(function () {
                        // alert('start');
                    }).catch(function (err) {
                        alert('err:' + err);
                    });
                } else {
                    console.error('No cameras found.');
                }
            }).catch(function (e) {
                console.error(e);
                alert("系统错误,请检查摄像头设备!")

            });

            // 停止扫描按钮功能定义
            $('#btnScanStop').unbind();
            $('#btnScanStop').click(function () {
                scanner.stop()
                $('#scanModal').modal('hide')
            })


            $('#scanModal').modal('show');
        })




        // 新增按钮
        $('#btnAddPart').click(async function () {
            let subTable = $('#rp_partsbills').DataTable();

            //删除子表选中状态
            subTable.rows().deselect();

            //取消零件信息div禁用
            $('#rp_partsbillsForm').find('select,input,textarea').attr("disabled", false);

            //清空panel数据
            clearFormInputs({
                formId: 'rp_partsbillsForm'
            })

            //设置默认值
            $("#rp_partsbillsForm-numStatus").text('预领')

            //解绑监听器
            // $('#rp_partsbillsForm-partLocation').unbind();
            $('#rp_partsbillsForm-partId').unbind();

            await loadBootStrapSelector({
                elementId: 'rp_partsbillsForm-partId',
                sqlParams: {
                    sql: 'getPartSelector',
                    params: {
                        filter: 'productId="' + $('#rp_recordbillsForm-productId').text() +
                            '"'
                    }
                },
            })

            await loadBootStrapSelector({
                elementId: 'rp_partsbillsForm-partLocation',
                // sqlParams: {
                //     sql: 'getPartLocationSelector',
                // },
            })

            //添加监听器
            // addPartLocationListener()
            addPartIdListener();
            addPartFeeListener();

            //打开面板
            $('#rp_partsbillsPanel').show();


        })


        //删除零件按钮
        $('#btnDeletePart').click(function () {

            let subTable = $('#rp_partsbills').DataTable();
            let rowSelect = subTable.row('.selected').data();
            // alert(JSON.stringify(rowSelect))

            //检查删除零件条件
            if (!rowSelect) {
                alert('请先点击表格选中需要删除的零件!')
                return;
            }
            if (rowSelect.numStatus !== '预领') {
                alert('非预领状态不允许删除!')
                return
            }

            //删除元素
            for (const n in subTableData) {
                if (subTableData[n].rowId === rowSelect.rowId) {
                    subTableData.splice(n, 1);
                }
            }
            //重新排序rowId,避免空缺
            for (const n in subTableData) {
                subTableData[n].rowId = parseInt(n) + 1;
            }

            //重新加载子表
            loadDataSubTable({
                elementId: 'rp_partsbills',
                dataArray: subTableData
            });

            //重新计算总费用
            CalcRepairTotalFee();

            //关闭面板
            $('#rp_partsbillsPanel').hide();
            // //自动点击添加按钮,清空遗留数据
            // $('#btnAddPart').click();


        })


        //退还零件按钮
        $('#btnReturnPart').click(function () {

            let subTable = $('#rp_partsbills').DataTable();
            let rowSelect = subTable.row('.selected').data();
            // alert(JSON.stringify(rowSelect))

            //检查退还零件条件
            if (!rowSelect) {
                alert('请先点击表格选中需要退还的零件!')
                return;
            }
            if (rowSelect.numStatus !== '已领') {
                alert('非已领状态不允许退还!')
                return
            }

        })



        //保存产品按钮

        $('#btnPartSave').click(function () {

            let recordBillId = $("#rp_recordbillsForm-recordBillId").text();

            let rowNum = $("#rp_partsbills tbody tr").size();
            console.log('rowNum:' + rowNum);

            let partData = getFormData({
                formId: 'rp_partsbillsForm'
            })
            // //格式化位置多选数据
            // partData['data'][0]['partLocation'] = partData['data'][0]['partLocation'].substring(1,
            //     partData['data'][0]['partLocation'].length - 1);


            let rowData = formDataToRowData(partData.data)
            //删除stockNum 属性
            delete rowData.stockNum;

            console.log('rowData:' + JSON.stringify(rowData))


            rowData.recordBillId = recordBillId;
            console.log('rowData:' + JSON.stringify(rowData))

            // //更新rowId
            // if (!rowData.rowId) {
            //     rowData.rowId = rowNum + 1;
            // }
            // savePartsBill([rowData]);

            //检查是否存在序号,区分新增还是编辑
            if (rowData.rowId) {
                for (const n in subTableData) {
                    console.log("subTableData[n]:" + JSON.stringify(subTableData[n]));
                    // console.log("rowData:" + JSON.stringify(rowData.rowId));

                    //此处不用===避免,字符类型不匹配导致相关问题
                    if (subTableData[n].rowId == rowData.rowId) {
                        subTableData[n] = rowData;
                        break;
                    }
                }
                // console.log("subTableData:" + JSON.stringify(subTableData));

            } else {
                // console.log("subTableData before:" + JSON.stringify(subTableData));
                // console.log("rowData:" + JSON.stringify(rowData.status));
                rowData.rowId = rowNum + 1;
                subTableData.push(rowData);

            }
            console.log("subTableData T:" + JSON.stringify(subTableData));


            //重新加载子表
            loadDataSubTable({
                elementId: 'rp_partsbills',
                dataArray: subTableData
            });

            //重新计算总费用
            CalcRepairTotalFee();

            //刷新零件清单
            refreshPartList();

        })

        //维修登记按钮
        $('#btnRecordBillNew').click(async function () {

            let table = $('#rp_recordbills').DataTable();
            let dataSelect = table.row('.selected').data();

            //检测选定数据 

            if (!dataSelect) {
                alert('未选定单据!')
                return
            }



            //打开面板
            $('#rp_recordbillsModal').modal('show');


            //校验最近返修记录
            if (!dataSelect.makeDate) {
                let rs = await checkRecordHistory({
                    customerShortName: dataSelect.customerShortName,
                    productId: dataSelect.productId
                })

                if (rs.length > 0) {
                    alert('检测到可能的返修品,上次维修信息如下:\n' +
                        '维修日期:' + rs[0].finishDate + '\n' +
                        '维修人:' + rs[0].repairStaff + '\n' +
                        '故障描述:' + rs[0].faultDescription + '\n' +
                        '检测结果:' + rs[0].testResult + '\n' +
                        '更换原件:' + rs[0].changePartList + '\n' +
                        '费用:' + rs[0].repairLastFee
                    )
                }
            }

            // //打开关联信息
            // $("#accordion").show();

            let options = await getDataBySql({
                sql: 'getTestItemSelector',
                params: {
                    filter: 'systemType="' + dataSelect.systemType +
                        '" and productClass="' + dataSelect.productClass + '"'
                }
            })

            console.log('options', options);


            //按系统类型重新加载检测项目

            loadDataSelector({
                elementId: 'rp_recordbillsForm-testItem',
                options: options,
            })




            //初始化并填写form内inputs
            initAndFillFormInputs({
                formId: 'rp_recordbillsForm',
                params: dataSelect
            })


            //检测项目为空则加载默认值,必须在赋值完成后检查
            if (!$('#rp_recordbillsForm-testItem option:selected').val() && options.length === 1) {
                $('#rp_recordbillsForm-testItem').selectpicker('val', options[0].value);
                $('#rp_recordbillsForm-testItem').selectpicker('refresh');
                //手动触发change事件
                $('#rp_recordbillsForm-testItem').change()
            }




            //如存在file属性,对其单独处理生成下载链接
            // alert(JSON.stringify(dataSelect))
            if (dataSelect.files) {
                let filesLink = getFilesUrl(dataSelect.files)
                $('#files').html(filesLink);
            }




            //不存在单号则创造记录单号
            let recordBillId = $('#rp_recordbillsForm-recordBillId').text();
            if (!recordBillId) {
                createRecordBillId()
            }



            //关闭子表panel
            $('#rp_partsbillsPanel').hide();


            //加载子表记录表数据
            loadBillSubTable(dataSelect.recordBillId);
        })


        //表单保存按钮
        $('#rp_recordbillsSave').click(function () {

            // alert(1)
            saveRecordBill();
        })



        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-testItem',
            sqlParams: {
                sql: 'getTestItemSelector',
            },
        })

        //添加监听器
        addTestItemListener();
        addConditionStatusListener();
        addRepairResultListener()


        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-faultShow',
            sqlParams: {
                sql: 'getFaultSelector',
                params: {
                    filter: 'faultClass="故障现象"',
                    orderBy: 'orderId'
                }
            }
        })

        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-faultPart',
            sqlParams: {
                sql: 'getFaultSelector',
                params: {
                    filter: 'faultClass="故障部件"',
                    orderBy: 'orderId'
                }
            },
        })



        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-faultReason',
            sqlParams: {
                sql: 'getFaultSelector',
                params: {
                    filter: 'faultClass="故障原因"',
                    orderBy: 'orderId'
                }
            },
        })



        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-conditionStatus',
            sqlParams: {
                sql: 'getOptionSelector',
                params: {
                    filter: 'optionClass="成色"',
                    orderBy: 'orderId'
                }
            },
            // initValue:'好'
        })


        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-repairResult',
            sqlParams: {
                sql: 'getOptionSelector',
                params: {
                    filter: 'optionClass="维修结果"',
                    orderBy: 'orderId'
                }
            },
        })


        loadBootStrapSelector({
            elementId: 'rp_recordbillsForm-repairStaff',
            sqlParams: {
                sql: 'getStaffSelector'
            },
            // initValue:'中国,北京'
        })


        // loadBootStrapSelector({
        //     elementId: 'rp_partsbillsForm-partId',
        //     sqlParams: {
        //         sql: 'getPartSelector',
        //     },
        // })

        //添加监听器
        addRepairTotalFeeListener();


        // 关闭事件重置选中datatable选中,避免显示错误
        $('#rp_recordbillsModal').on('hidden.bs.modal', function () {
            let table = $('#rp_recordbills').DataTable();
            table.$('tr.selected').removeClass('selected');

            // //添加监听出来扫描modal关闭 表单modal失效问题
            $(this).removeData('bs.modal');
            $(document.body).addClass("modal-open");

        })

        // 处理多model 滚动失效问题
        $('#scanRecordModal').on('hidden.bs.modal', function () {

            $(this).removeData('bs.modal');
            $(document.body).addClass("modal-open");

        })



        // let [x, y, z] = [0];
        // console.log(x, y, z);



    });
</script>