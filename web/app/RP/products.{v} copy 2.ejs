<!-- 导入css库 -->
<link rel="stylesheet" type="text/css" href="/rpLib/css/divCss.css">

<!-- 导入js库 -->
<script type="text/javascript" src="/rpLib/publicFuns.js"></script>

<script type="text/javascript" src="/rpLib/t9PublicFuns.js"></script>

<!-- 导入datatables -->
<link rel="stylesheet" type="text/css" href="/rpLib/DataTables/datatables.min.css" />
<script type="text/javascript" src="/rpLib/DataTables/datatables.min.js"></script>

<!-- 导入bootstrapSelect -->
<link rel="stylesheet" href="/rpLib/bootstrapSelect/css/bootstrap-select.min.css" />
<script type="text/javascript" src="/rpLib/bootstrapSelect/js/bootstrap-select.min.js"></script>


<!-- 导入datatimepicker -->
<link href="/rpLib/datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen">
<script type="text/javascript" src="/rpLib/datetimepicker/bootstrap-datetimepicker.min.js" charset="UTF-8"></script>
<script type="text/javascript" src="/rpLib/datetimepicker/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>



<!-- 加载foil外框架 -->
<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>

<!-- 定义html元素 -->
<div class="rpContent">

    <!-- 按钮：用于打开模态框 -->

    <!-- <div class="row clearfix">
        <div class="col-md-12 column">
            <div class="page-header">
                <h1>基础信息-产品信息</h1>
            </div>
        </div>
    </div> -->

    <div>
        <button type="button" style="display: none;" id="rp_productsNew">
            新增
        </button>
        <button type="button" style="display: none;" id="rp_productsDelete">
            删除
        </button>
    </div>



    <div class="row clearfix">
        <div class="col-md-12 column">


            <!-- 定义基础模块数据表 -->
            <table id="rp_products" class=" table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>产品编号</th>
                        <th>产品名称</th>
                        <th>系统类别</th>
                        <th>产品类别</th>
                        <th>系统分类</th>
                        <th>所属部件</th>

                    </tr>
                </thead>
                <tbody></tbody>
            </table>


        </div>
    </div>





    <!-- 模态框（Modal） -->
    <div class="modal fade" id="rp_productsModal" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog" style="width: 65%;">

            <!-- 按钮触发模态框 -->
            <button class="btn btn-primary" data-toggle="modal" data-target="#rp_productsModal"
                id="rp_productsModalOpen" style="display: none;">
                开始演示模态框
            </button>
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">
                        产品信息
                    </h4>


                </div>
                <div class="modal-body">




                    <!-- 表单面板 -->
                    <div class="panel panel-default">
                        <div class="panel-body">


                            <form class="form-horizontal" role="form" id='rp_productsForm'>

                                <input id="rp_productsForm-DBID" type="hidden" value="">

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">产品编号</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-productId" type="text"
                                            value="该输入框获得焦点...">
                                    </div>

                                    <label class="col-sm-1 control-label">产品名称</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-productName" type="text"
                                            value="该输入框获得焦点...">
                                    </div>

                                </div>



                                <div class="form-group">

                                    <label class="col-sm-1 control-label">产品描述</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-productDescription" type="text"
                                            value="该输入框获得焦点...">
                                    </div>

                                    <label class="col-sm-1 control-label">系统类别</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-systemClass" type="text"
                                            value="该输入框获得焦点...">
                                    </div>
                                </div>

                                <div class="form-group">


                                    <label class="col-sm-1 control-label">所属部件</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-partBelong" type="text"
                                            value="该输入框获得焦点...">
                                    </div>

                                    <label class="col-sm-1 control-label">系统分类</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-systemType" type="text"
                                            value="该输入框获得焦点...">
                                    </div>




                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">产品类别</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-productClass" type="text"
                                            value="该输入框获得焦点...">
                                    </div>


                                    <label class="col-sm-1 control-label">单位</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-unit" type="text"
                                            value="该输入框获得焦点...">

                                    </div>
                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label">创建人</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_productsForm-creater" type="text"
                                            value="该输入框获得焦点...">
                                    </div>


                                    <label class="col-sm-1 control-label">有效性</label>
                                    <div class="col-sm-5">
                                        <select id="rp_productsForm-effective" class="selectpicker"
                                            data-dropup-auto="true">
                                            <option>是</option>
                                            <option>否</option>
                                        </select>

                                    </div>
                                </div>

                            </form>
                        </div>
                    </div>



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="rp_productsModalClose">关闭
                    </button>
                    <button type="button" class="btn btn-primary" id="rp_productsSave">
                        保存
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>


</div>



<script type="text/javascript">
    const mainColumnsArray = [{
            data: 'productId'
        },
        {
            data: 'productName'
        }, {
            data: 'systemClass',
        }, {
            data: 'partBelong',
        }, {
            data: 'systemType',
        }, {
            data: 'productClass',
        }
    ]

    //表dt参数
    const mainDtParams = {
        // dtConfig: 'dtConfigDataFull',
        dtConfig: 'dtConfigFull',
        // bStateSave: true, //true刷新保存当前页码,搜索信息
        columns: mainColumnsArray
    }


    //添加主表监听器,定义双击打开事件

    const addMainTableListener = () => {
        //定义主表双击事件
        $('#rp_products tbody').on('dblclick', 'tr', function () {

            //设定选中
            let table = $('#rp_products').DataTable();
            table.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
            let dataSelect = table.row('.selected').data();

            //初始化并填写form内inputs
            initAndFillFormInputs({
                formId: 'rp_productsForm',
                params: dataSelect
            })

            //打开面板
            $('#rp_productsModal').modal('show');

        });
    }
    //主表加载数据函数;
    const loadBillMainTable = async () => {

        // console.log('loadBillMainTable MainTableData', MainTableData);
        //初始化主表
        loadBillDataTable({
            elementId: 'rp_products',
            sqlParams: {
                sqlId: 'sqlTableSelect',
                params: {
                    tableId: 'rp_products',
                    orderBy: 'saveTimeStamp desc'
                }
            },
            sqlParams: "",
            dtParams: mainDtParams,
            // tableData: MainTableData,
        })
    }

    //新增产品 
    const addProduct = async () => {
        clearFormInputs({
            formId: 'rp_productsForm'
        })

        //设置初始值

        //打开面板
        $('#rp_productsModalOpen').click();

    }

    const deleteProduct = async () => {

        //check-选中检查
        let table = $('#rp_products').DataTable();
        let rowsSelect = table.rows('.selected').data();
        // console.log('rowsSelect', rowsSelect);

        if (rowsSelect.length === 0) {
            alert('请先选中需要删除的产品')
            return
        }

        //check-系统产品是否包含检查
        for (let i = 0; i < rowsSelect.length; i++) {
            if (rowsSelect[i].isSystemOption === '是') {
                alert('选中产品中包含系统产品,无法删除')
                return
            }
        }

        //do-删除产品
        let DBIDArr = []
        let rowsSelectArr = []
        for (let i = 0; i < rowsSelect.length; i++) {
            DBIDArr.push(rowsSelect[i].DBID)
            rowsSelectArr.push(rowsSelect[i])
        }

        let r1 = await postDBData({
            sql: 'delete',
            params: {
                tableId: 'rp_products',
                data: DBIDArr
            }
        })

        //return-结果提醒
        if (r1.affectedRows > 0) {
            MainTableData = getUpdateArr({
                type: 'delete',
                mainArr: MainTableData,
                infoArr: rowsSelectArr,
                keys: ['DBID']
            })
            //return-重载表格
            // loadBillMainTable();

            MainTable.ajax.reload();
            alert('删除成功')
        } else {
            alert('出现错误')
        }


    }





    //保存产品
    const saveProduct = async () => {
        //检查是否为系统产品
        if ($('#rp_productsForm-isSystemOption').text() === '是') {
            alert('系统产品不允许修改!')
            return
        }

        //检查保存条件
        if (!$('#rp_productsForm-productId').val()) {
            alert('产品编号未填!')
            return
        }



        // //校验重复数据
        // let duplicateRows = await checkDuplicateProduct();
        // if (duplicateRows.length > 0) {
        //     let duplicateIds = '';
        //     for (const row of duplicateRows) {
        //         duplicateIds = duplicateIds + row.ProductId + ',';
        //     }
        //     duplicateIds = duplicateIds.substring(0, duplicateIds.length - 1);
        //     if (!confirm('检测到可能和以下产品编号:' + duplicateIds + ' 包含重复信息,是否继续')) {
        //         return
        //     }
        // }

        let mainFormData = getPostFormData({
            formId: 'rp_productsForm'
        })





        //有备注时记录备注人
        if (mainFormData.data[0].remark) {
            mainFormData.data[0].remarker = sessionName
        }


        console.log('mainFormData:' + JSON.stringify(mainFormData));

        let r1 = await postDBData({
            sql: 'replace',
            params: mainFormData
        })

        if (r1.affectedRows > 0) {
            if (mainFormData.data.DBID) {
                MainTableData = getUpdateArr({
                    type: 'update',
                    mainArr: MainTableData,
                    infoArr: mainFormData.data,
                    keys: ['DBID']
                })
                loadBillMainTable();
            } else {
                initMainTableData();
            }


            alert('保存成功!')

            // $('#rp_productsModal').modal('hide');多层modal存在失效问题,改用click关闭
            $('#rp_productsModalClose').click()


        } else {
            alert('出现错误!')
        }

    }

    const initMainTableData = async () => {
        MainTableData = await getDataBySql({
            sql: 'sqlTableSelect',
            params: {
                tableId: 'rp_products',
                orderBy: 'saveTimeStamp desc'
            }
        })
        // console.log('MainTableData11111', MainTableData);


        loadBillMainTable();
    }




    $(document).ready(function () {
        getT9Data({
            to: 'RP',
            type: 'material'
        })

        //定义主表数据全局变量
        MainTableData = []



        //初始化主表
        // initMainTableData()
        loadBillMainTable()


        let MainTable = $('#rp_products').DataTable()


        //添加主表监听
        addMainTableListener();


        //产品新增按钮
        $('#rp_productsNew').click(function () {
            addProduct();
        })

        //产品新增按钮
        $('#rp_productsDelete').click(function () {
            deleteProduct();
        })

        //表单保存按钮
        $('#rp_productsSave').click(function () {
            saveProduct();
        })




        // 关闭事件重置选中datatable选中,避免显示错误
        $('#rp_productsModal').on('hidden.bs.modal', function () {
            let table = $('#rp_products').DataTable();
            table.$('tr.selected').removeClass('selected');


        })


    });
</script>