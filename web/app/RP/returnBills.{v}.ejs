<!-- 导入css库 -->
<link rel="stylesheet" type="text/css" href="/rpLib/css/divCss.css">

<!-- 导入js库 -->
<script type="text/javascript" src="/rpLib/publicFuns.js"></script>

<!-- 导入datatables -->
<link rel="stylesheet" type="text/css" href="/rpLib/DataTables/datatables.min.css" />
<script type="text/javascript" src="/rpLib/DataTables/datatables.min.js"></script>

<!-- 导入bootstrapSelect -->
<link rel="stylesheet" href="/rpLib/bootstrapSelect/css/bootstrap-select.min.css" />
<script type="text/javascript" src="/rpLib/bootstrapSelect/js/bootstrap-select.min.js"></script>


<!-- 导入bootstrapSwitch -->
<link rel="stylesheet" href="/rpLib/bootstrapSwitch/css/bootstrap3/bootstrap-switch.min.css" />
<script type="text/javascript" src="/rpLib/bootstrapSwitch/js/bootstrap-switch.min.js"></script>

<!-- 导入datatimepicker -->
<link href="/rpLib/datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet" media="screen">
<script type="text/javascript" src="/rpLib/datetimepicker/bootstrap-datetimepicker.min.js" charset="UTF-8"></script>
<script type="text/javascript" src="/rpLib/datetimepicker/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>


<!-- 导入qrcode 二维码库 -->
<script type="text/javascript" src="/rpLib/qrcode/qrcode.min.js"></script>

<!-- 导入instascan 二维码扫描库 -->
<script type="text/javascript" src="/rpLib/instascan/instascan.min.js"></script>

<!-- 导入print 打印库 -->
<script type="text/javascript" src="/rpLib/print/print.js"></script>

<!-- 加载foil外框架 -->
<% layout(locals.global.theme_layout_dir+'/master.ejs') -%>

<!-- 定义html元素 -->
<div class="rpContent">

    <!-- 按钮：用于打开模态框 -->

    <div class="row clearfix">
        <div class="col-md-12 column">
            <div class="page-header">
                <h1>库存管理-还货凭单</h1>
            </div>
        </div>
    </div>


    <div class="row clearfix">
        <div class="col-md-12 column">


            <!-- 定义基础模块数据表 -->

            <div class="panel panel-default" id='mainTablePanel'>
                <div class="panel-heading">
                    <div style="float: left;">
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary">过滤</button>
                            <button type="button" id="btnFilterToday" class="btn btn-default">当天</button>
                            <button type="button" id="btnFilterUnAudit" class="btn btn-default">待审核</button>
                            <button type="button" id="btnFilterDiy" class="btn btn-default">自定义</button>
                        </div>
                    </div>
                    <!-- 功能组按钮 -->
                    <div style="float:right">
                        <button id='btnReturnStart' type="button" class="btn btn-info">还货</button>
                        <button id='btnReturnBillDetail' type="button" class="btn btn-info">查看</button>
                        <!-- <button id='btnReturnBillDelete' type="button" class="btn btn-danger">删除</button> -->
                        <button id='btnReturnBillAudit' type="button" class="btn btn-success">审核</button>
                        <button id='btnReturnBillReject' type="button" class="btn btn-warning">驳回</button>
                        <!-- <button type="button" class="btn btn-info" id="listPrintBtn">
                            打印还货码
                        </button> -->
                        <button type="button" class="btn btn-primary" id="rp_returnBillsPrint">
                            打印还货凭单
                        </button>
                    </div>
                    <div style="clear:both"></div>
                </div>
                <div class="panel-body">
                    <table id="rp_returnBills" class=" table table-striped table-bordered" style="width:100%">
                        <thead>
                            <tr>
                                <th>还货单号</th>
                                <th>单据来源</th>
                                <th>客户简称</th>
                                <th>经手人</th>
                                <th>审核人</th>
                                <th>备注</th>
                                <th>制单日期</th>
                                <th>状态</th>
                                <th>搜索值</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <!-- 定义主表关联附表数据表 -->

            <div class="panel panel-default" id='subTablePanel' style="width:100%;display: none;">
                <div class="panel-heading">
                    <h3 class="panel-title">产品清单</h3>
                </div>
                <div class="panel-body">
                    <table id="rp_returnBillsSub" class=" table table-striped table-bordered" style="min-width:100%;">
                        <thead>
                            <tr>
                                <th>序号</th>
                                <th>借货单号</th>
                                <th>产品编号</th>
                                <th>产品名称</th>
                                <th>单位</th>
                                <th>数量</th>
                                <th>备注</th>
                                <th>状态</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>


    <!-- 待还货模态框（Modal） -->
    <div class="modal fade" id="unReturnModal" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog" style="width: 90%;">

            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">
                        待还货
                    </h4>
                </div>
                <div class="modal-body">



                    <div class="panel panel-default" id='mainTablePanel'>
                        <div class="panel-heading">

                            <!-- 功能组按钮 -->
                            <div style="float:right">
                                <button id='btnReturnBillNew' type="button" class="btn btn-info">生成还货单</button>

                            </div>
                            <div style="clear:both"></div>
                        </div>
                        <div class="panel-body">
                            <table id="rp_borrowProductBills" class=" table table-striped table-bordered"
                                style="width:100%">
                                <thead>
                                    <tr>

                                        <th>借货单号</th>
                                        <th>客户简称</th>
                                        <th>产品编号</th>
                                        <th>经手人</th>
                                        <th>借货日期</th>
                                        <th>未还数量</th>
                                        <th>状态</th>
                                        <th>备注</th>
                                        <th>搜索值</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>




                </div><!-- /.modal-content -->

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">关闭
                    </button>

                </div>
            </div><!-- /.modal -->
        </div>
    </div>

    <!-- 过滤器模态框（Modal） -->
    <div class="modal fade" id="filterModal" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog" style="width: 800px;">

            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">
                        过滤器
                    </h4>
                </div>
                <div class="modal-body">

                    <div class="panel panel-info">
                        <div class="panel-body" style="height:300px">
                            <form class="form-horizontal" role="form" id='filterForm'>

                                <div class="form-group">
                                    <label class="col-sm-2 control-label">还货日期</label>
                                    <div class="col-sm-5">
                                        <div class="input-group date form_date ">
                                            <input id="filterForm-returnDateB" class="form-control " size="16"
                                                type="text" value="" placeholder="起始日期" readonly>
                                            <span class="input-group-addon"><span
                                                    class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>

                                    <div class="col-sm-5">
                                        <div class="input-group date form_date ">
                                            <input id="filterForm-returnDateE" class="form-control " size="16"
                                                type="text" value="" placeholder="结束日期" readonly>
                                            <span class="input-group-addon"><span
                                                    class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>

                                </div>

                                <div class="form-group">
                                    <label class="col-sm-2 control-label">制单日期</label>
                                    <div class="col-sm-5">
                                        <div class="input-group date form_date ">
                                            <input id="filterForm-makeDateB" class="form-control " size="16" type="text"
                                                value="" placeholder="起始日期" readonly>
                                            <span class="input-group-addon"><span
                                                    class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>

                                    <div class="col-sm-5">
                                        <div class="input-group date form_date ">
                                            <input id="filterForm-makeDateE" class="form-control " size="16" type="text"
                                                value="" placeholder="结束日期" readonly>
                                            <span class="input-group-addon"><span
                                                    class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>

                                </div>



                                <div class="form-group">
                                    <label class="col-sm-2 control-label"></label>

                                    <div class="col-sm-10">
                                        <button type="button" class="btn btn-default" data-dismiss="modal"
                                            id="closeFilter">关闭
                                        </button>
                                        <button type="button" class="btn btn-primary" id="confirmFilter">
                                            确定
                                        </button>

                                    </div>


                                </div>
                            </form>

                        </div>
                    </div>


                </div><!-- /.modal-content -->
            </div><!-- /.modal -->
        </div>
    </div>



    <!-- 打印预览模态框（Modal） -->
    <div class="modal fade" id="printViewModal">
        <div class="modal-dialog" style="width: 80%;">
            <div class="modal-content">
                <div class="modal-body">
                    <div id="printViewDiv">

                        <h2>弘讯科技股份有限公司还货单</h2>
                        <hr>

                        <table id='printViewMainTable' style="border: 0ch; width: 100%;table-layout:fixed;">
                            <tbody>
                                <tr>
                                    <td width='80px'>还货单号:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-returnBillId"></p>
                                    </td>
                                    <td width='80px'>客户编号:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-customerId"></p>
                                    </td>
                                </tr>
                                <tr>
                                    <td width='80px'>客户简称:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-customerShortName">
                                        </p>
                                    </td>
                                    <td width='80px'>客户名称:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-customerName"></p>
                                    </td>
                                </tr>
                                <tr>
                                    <td width='80px'>联系人:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-contact"></p>
                                    </td>
                                    <td width='80px'>移动电话:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-mobilePhone"></p>
                                    </td>
                                </tr>
                                <tr>
                                    <td width='80px'>还货类型:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-returnType"></p>
                                    </td>
                                    <td width='80px'>经手人:</td>
                                    <td>
                                        <p class="form-control-static" id="printViewMainTable-operator"></p>
                                    </td>
                                </tr>

                            </tbody>
                        </table>



                        <hr>
                        <table id='printViewSubTable' class="table table-condensed">

                            <thead>
                                <tr>
                                    <th>序号</th>
                                    <th>产品编号</th>
                                    <th>产品名称</th>
                                    <th>单位</th>
                                    <th>数量</th>
                                </tr>
                            </thead>
                            <tbody>

                            </tbody>
                        </table>

                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="printCloseBtn">关闭
                    </button>
                    <button type="button" class="btn btn-primary" id="confirmPrintBtn">
                        确认打印
                    </button>
                </div>
            </div>
        </div>
    </div>



    <!-- 打印预览模态框（Modal） -->
    <!-- <div class="modal fade" id="listPrintViewModal">
        <div class="modal-dialog" style="width: 600px;">
            <div class="modal-content">
                <div class="modal-body">

                    <h2>弘讯科技股份有限公司还货清单</h2>
                    <hr>

                    <div id="listPrintViewDiv">


                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="listPrintCloseBtn">关闭
                    </button>
                    <button type="button" class="btn btn-primary" id="listPrintConfirmBtn">
                        确认打印
                    </button>
                </div>
            </div>
        </div>
    </div> -->





    <!-- 模态框（Modal） -->
    <div class="modal fade" id="rp_returnBillsModal" tabindex="-1" role="dialog" aria-hidden="true"
        data-backdrop="static">

        <div class="modal-dialog" style="width: 75%;">

            <!-- 按钮触发模态框 -->
            <button class="btn btn-primary" data-toggle="modal" data-target="#rp_returnBillsModal"
                id="rp_returnBillsModalOpen" style="display: none;">
                开始演示模态框
            </button>
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">
                        表单详情
                    </h4>


                </div>
                <div class="modal-body">


                    <!-- 表单面板 -->
                    <div class="panel panel-default">
                        <div class="panel-body">


                            <form class="form-horizontal" role="form" id='rp_returnBillsForm'>

                                <!-- <input id="rp_returnBillsForm-DBID" type="hidden" value=""> -->

                                <div class="form-group">
                                    <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-returnBillId">还货单号</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-returnBillId"></p>
                                    </div>



                                    <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-returnDate">还货日期:</label>
                                    <div class="col-sm-5 ">
                                        <div class="input-group date form_date ">
                                            <input id="rp_returnBillsForm-returnDate" class="form-control " size="16"
                                                type="text" value="" readonly>
                                            <span class="input-group-addon"><span
                                                    class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-fromBillId">单据来源</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-billFrom"></p>
                                    </div>


                                    <label class="col-sm-1 control-label "
                                        for="rp_returnBillsForm-customerId">客户编号</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-customerId"></p>
                                    </div>

                                </div>

                                <div class="form-group">

                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-customerShortName">客户简称</label>
                                    <div class="col-sm-5">
                                        <select id="rp_returnBillsForm-customerShortName"
                                            class="selectpicker form-control" data-live-search="true" data-size="10">
                                        </select>
                                    </div>





                                    <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-customerName">客户名称</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_returnBillsForm-customerName" type="text">
                                    </div>


                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label" for="rp_returnBillsForm-isInland">国内外</label>
                                    <div class="col-sm-5">
                                        <select id="rp_returnBillsForm-isInland" class="selectpicker">

                                        </select>
                                    </div>

                                    <!-- <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-customerArea">客户区域</label>
                                    <div class="col-sm-5">
                                        <select id="rp_returnBillsForm-customerArea" class="selectpicker form-control"
                                            data-live-search="true" data-size="10">
                                        </select>
                                    </div> -->
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label text-warning"
                                        for="customerContacts">可选联系人</label>
                                    <div class="col-sm-5">
                                        <!-- <input class="form-control" id="rp_returnBillsForm-contact" type="text"> -->
                                        <select id="customerContacts" class="selectpicker">
                                        </select>
                                    </div>

                                    <!-- <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-customerId">保固期</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-warrantyPeriod"></p>
                                    </div> -->
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-contact">联系人</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_returnBillsForm-contact" type="text">
                                    </div>

                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-mobilePhone">移动电话</label>
                                    <div class="col-sm-5">
                                        <input class="form-control" id="rp_returnBillsForm-mobilePhone" type="text">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-customerBelongShort">归属公司简称</label>
                                    <div class="col-sm-5">
                                        <!-- <input class="form-control" id="rp_returnBillsForm-customerBelongShort"
                                            type="text"> -->
                                        <select id="rp_returnBillsForm-customerBelongShort"
                                            class="selectpicker form-control" data-live-search="true" data-size="10">
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group">


                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-operator">经手人</label>
                                    <div class="col-sm-5">
                                        <!-- <input class="form-control" id="rp_returnBillsForm-operator" type="text"> -->
                                        <select id="rp_returnBillsForm-operator" class="selectpicker"
                                            data-live-search="true" data-size="5">
                                        </select>
                                    </div>
                                </div>

                                <!-- <div class="form-group">
                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-address">地址</label>
                                    <div class="col-sm-11">
                                        <input class="form-control" id="rp_returnBillsForm-address" type="text">
                                    </div>
                                </div> -->

                                <div class="form-group">
                                    <label class="col-sm-1 control-label">单据备注</label>
                                    <div class="col-sm-11">
                                        <input class="form-control" id="rp_returnBillsForm-remark" type="text">
                                    </div>
                                </div>

                                <!-- <div class="form-group">
                                    <label class="col-sm-1 control-label" for="msgSwitch">短信提醒</label>
                                    <div class="col-sm-11">
                                        <input id="msgSwitch" type="checkbox">
                                    </div>
                                </div> -->

                                <div class="form-group">

                                    <label class="col-sm-1 control-label text-warning"
                                        for="rp_returnBillsForm-returnType">还货类型</label>
                                    <div class="col-sm-5">
                                        <select id="rp_returnBillsForm-returnType" class="selectpicker">
                                        </select>
                                    </div>
                                    <label class="col-sm-1 control-label">单据状态</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-status"></p>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="col-sm-1 control-label" for="rp_returnBillsForm-maker">制单人</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-maker"></p>
                                    </div>

                                    <label class="col-sm-1 control-label" for="rp_returnBillsForm-makeDate">制单日期</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-makeDate"></p>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-1 control-label" for="rp_returnBillsForm-auditor">审核人</label>
                                    <div class="col-sm-5">
                                        <select id="rp_returnBillsForm-auditor" class="selectpicker"
                                            data-live-search="true" data-size="5">
                                        </select>
                                    </div>

                                    <label class="col-sm-1 control-label"
                                        for="rp_returnBillsForm-auditDate">审核日期</label>
                                    <div class="col-sm-5">
                                        <p class="form-control-static" id="rp_returnBillsForm-auditDate"></p>
                                    </div>
                                </div>

                            </form>

                            <!-- 子表 -->
                            <hr>

                            <div class="row clearfix">
                                <div class="col-md-12 column">

                                    <!-- 功能组按钮 -->
                                    <!-- <div class="well">
                                        <button id='btnAddProduct' type="button" class="btn btn-info">新增产品</button>
                                        <button id='btnDeleteProduct' type="button" class="btn btn-danger">删除产品</button>
                                       <button id='btnScan' type="button" class="btn btn-success">扫描新增</button> 

                                    </div> -->

                                    <!-- 定义基础模块数据表 -->
                                    <table id="rp_returnsubbills" class=" table table-striped table-bordered"
                                        style="width:100%">
                                        <thead>
                                            <tr>
                                                <th>序号</th>
                                                <th>借货单号</th>
                                                <th>产品编号</th>
                                                <th>产品描述</th>
                                                <th>单位</th>
                                                <th>数量</th>
                                                <th>备注</th>
                                                <th>状态</th>

                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>

                                    <div class="panel panel-default" id='rp_returnsubbillsPanel'>
                                        <div class="panel-heading">
                                            <h3 class="panel-title">产品详情</h3>
                                        </div>
                                        <div class="panel-body">




                                            <form class="form-horizontal" role="form" id='rp_returnsubbillsForm'>

                                                <!-- <input id="rp_returnsubbillsForm-DBID" type="hidden" value=""> -->
                                                <input id="rp_returnsubbillsForm-returnBillId" type="hidden" value="">


                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">序号</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static" id="rp_returnsubbillsForm-rowId">
                                                        </p>
                                                    </div>

                                                    <label class="col-sm-1 control-label">未还数量</label>
                                                    <div class="col-sm-3">
                                                        <p class="form-control-static" id="unreturnNum">
                                                        </p>
                                                    </div>

                                                    <!-- <label class="col-sm-1 control-label">状态</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-status">
                                                        </p>
                                                    </div> -->
                                                </div>

                                                <div class="form-group">


                                                    <label class="col-sm-1 control-label">借货单号</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-borrowBillId">
                                                        </p>
                                                    </div>

                                                    <label class="col-sm-1 control-label">状态</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-status">
                                                        </p>

                                                    </div>



                                                </div>


                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">产品编号</label>
                                                    <div class="col-sm-5">
                                                        <!-- <select id="rp_returnsubbillsForm-productId"
                                                            class="selectpicker form-control" data-live-search="true"
                                                            data-size="5" data-dropup-auto="false">
                                                        </select> -->

                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-productId">
                                                        </p>
                                                    </div>

                                                    <label class="col-sm-1 control-label">仓库</label>
                                                    <div class="col-sm-5">
                                                        <select id="rp_returnsubbillsForm-warehouseId"
                                                            class="selectpicker form-control" data-live-search="true"
                                                            data-size="5" data-dropup-auto="false" disabled>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">产品名称</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-productName">
                                                        </p>
                                                    </div>

                                                    <label class="col-sm-1 control-label">产品描述</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-productDescription">
                                                        </p>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">产品类别</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-productClass">
                                                        </p>

                                                    </div>

                                                    <label class="col-sm-1 control-label">系统分类</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static"
                                                            id="rp_returnsubbillsForm-systemType">
                                                        </p>
                                                    </div>

                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">单位</label>
                                                    <div class="col-sm-5">
                                                        <p class="form-control-static" id="rp_returnsubbillsForm-unit">
                                                        </p>

                                                    </div>

                                                    <label class="col-sm-1 control-label">数量</label>
                                                    <div class="col-sm-5">
                                                        <input class="form-control" id="rp_returnsubbillsForm-num"
                                                            type="text">
                                                    </div>

                                                </div>


                                                <div class="form-group">

                                                    <label class="col-sm-1 control-label">备注</label>
                                                    <div class="col-sm-11">
                                                        <input class="form-control" id="rp_returnsubbillsForm-remark"
                                                            type="text">
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label"></label>
                                                    <div class="col-sm-5">
                                                        <button type="button" class="btn btn-primary"
                                                            id="btnProductSave">
                                                            保存
                                                        </button>

                                                    </div>
                                                </div>

                                            </form>


                                        </div>
                                    </div>

                                </div>
                            </div>

                            <!-- 扫描模态框（Modal） -->

                            <!-- <div class="modal fade" id="scanModal">
                                <div class="modal-dialog" style="width: 675px;">
                                    <div class="modal-content">

                                        <div class="modal-body">请将产品二维码放置于摄像头内
                                            <div><button id='btnScanStop' type="button"
                                                    class="btn btn-info">停止扫描</button></div>
                                            <div style="width:640;height:480px"><video id="preview"></video>
                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div> -->








                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="rp_returnBillsModalClose">关闭
                    </button>

                    <button type="button" class="btn btn-primary" id="rp_returnBillsSave">
                        保存单据
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>



</div>



<script type="text/javascript">
    //申请表主表dataTable column 数组

    const mainColumnsArray = [{
        data: 'returnBillId',
        // visible: 'false'
    }, {
        data: 'billFrom'
    }, {
        data: 'customerShortName'
    }, {
        data: 'operator',
    }, {
        data: 'auditor',
    }, {
        data: 'remark',
    }, {
        data: 'makeDate',
    }, {
        data: 'status',
    }, {
        data: 'searchText',
        visible: false
    }];

    //申请表子表dataTable column 数组
    const subColumnsArray = [{
        data: 'rowId',
    }, {
        data: 'borrowBillId',
    }, {
        data: 'productId',
    }, {
        data: 'productName',
    }, {
        data: 'unit',
    }, {
        data: 'num',
    }, {
        data: 'remark',
    }, {
        data: 'status',
    }]


    const unReturnColumnsArray = [{
        data: 'borrowBillId'
    }, {
        data: 'customerShortName'
    }, {
        data: 'productId'
    }, {
        data: 'operator',
    }, {
        data: 'borrowDate',
    }, {
        data: 'unreturnNum',
    }, {
        data: 'status',
    }, {
        data: 'remark',
    }, {
        data: 'searchText',
        visible: false
    }];

    //加载待还货表格
    const loadUnReturnTable = async () => {

        //初始化主表
        loadBillDataTable({
            elementId: 'rp_borrowProductBills',
            sqlParams: {
                sqlId: 'sqlUnreturnBills',
                params: {
                    filter: 'unreturnNum>0 and (returnStatus<>"预还入" or returnStatus is null)',
                    // orderBy: 'billSaveTimeStamp desc'
                }
            },
            dtParams: {
                // bAutoWidth: false,//取消自动宽度
                columns: unReturnColumnsArray,
                // scrollX: true,
                // autoWidth: true
            }
        })

    }

    //选中客户后,填写其他相关信息

    const fillCustomerInfo = async (customerShortName) => {
        let r1 = await getDataBySql({
            sql: 'getCustomers',
            params: {
                filter: 'customerShortName="' + customerShortName + '"'
            }
        })

        // console.log('r1:' + JSON.stringify(r1));

        customerData = r1[0]; //将查询结果赋给全局变量
        // console.log('customerData:' + JSON.stringify(customerData));

        //黑名单警告
        if (customerData.creditRank === '黑名单') {
            alert('当前客户为黑名单客户!备注:' + customerData.remark + ',备注人:' + customerData.remarker)
        }



        loadContactOptions(customerData)


        let r2 = r1[0]
        delete r2.customerShortName;
        // console.log('r2:' + JSON.stringify(r2));
        fillFormInputs({
            formId: 'rp_returnBillsForm',
            params: r2
        })
        // $("#rp_returnBillsForm-customerArea").selectpicker('val', r2.customerArea)
    }

    //选定客户修改事件
    const addCustomerListener = () => {
        $('#rp_returnBillsForm-customerShortName').unbind();
        $('#rp_returnBillsForm-customerShortName').change(function () {
            let customerShortName = $('#rp_returnBillsForm-customerShortName option:selected').val();
            if (customerShortName) {
                $('#rp_returnBillsForm-customerShortName').selectpicker('refresh');
                fillCustomerInfo(customerShortName);
            }
        });
    }

    // //填写产品信息功能
    // const fillProductInfo = async (productId) => {
    //     let r1 = await getDataBySql({
    //         sql: 'getProduct',
    //         params: {
    //             filter: 'productId="' + productId + '"'
    //         }
    //     })

    //     // console.log('r1:' + JSON.stringify(r1));
    //     let r2 = r1[0]
    //     delete r2.productId;
    //     // console.log('r2:' + JSON.stringify(r2));
    //     fillFormInputs({
    //         formId: 'rp_returnsubbillsForm',
    //         params: r2
    //     })

    //     // $('#rp_returnsubbillsForm-productId').selectpicker('val',r1[0].productId)

    // }



    // //选定产品修改事件
    // const addProductListener = () => {
    //     // $('#rp_returnsubbillsForm-productId').unbind();
    //     $('#rp_returnsubbillsForm-productId').change(async function () {
    //         let productId = $('#rp_returnsubbillsForm-productId option:selected')
    //             .val()
    //         if (productId) {
    //             $('#rp_returnsubbillsForm-productId').selectpicker('refresh');
    //             showStockNum()
    //             fillProductInfo(productId);

    //             $('#rp_returnsubbillsForm-num').val(1)

    //         }
    //     });

    // }

    // //仓库选择修改事件
    // const addWarehouseListener = () => {
    //     // $('#rp_outsubbillsForm-warehouseId').unbind();
    //     $('#rp_returnsubbillsForm-warehouseId').change(async function () {
    //         let warehouseId = $('#rp_returnsubbillsForm-warehouseId option:selected')
    //             .val()
    //         if (warehouseId) {
    //             $('#rp_returnsubbillsForm-warehouseId').selectpicker('refresh');
    //             showStockNum();
    //         }
    //     });
    // }

    // //保固期自动计算事件
    // const addInWarrantyListener = () => {
    //     $('#rp_returnsubbillsForm-productYear,#rp_returnsubbillsForm-productMonth').unbind('change'); //仅解绑change事件
    //     $('#rp_returnsubbillsForm-productYear,#rp_returnsubbillsForm-productMonth').change(function () {
    //         let warrantyPeriod = parseInt($('#rp_returnBillsForm-warrantyPeriod').text());
    //         let year = $('#rp_returnsubbillsForm-productYear').val() || '2000'
    //         let month = $('#rp_returnsubbillsForm-productMonth').val() || '01'
    //         console.log(warrantyPeriod, year, month);

    //         //计算月份差函数
    //         const getIntervalMonth = (startDate, endDate) => {
    //             var startMonth = startDate.getMonth();
    //             var endMonth = endDate.getMonth();
    //             var intervalMonth = (startDate.getFullYear() * 12 + startMonth) - (endDate
    //                 .getFullYear() *
    //                 12 + endMonth);
    //             return intervalMonth;
    //         }

    //         let nowDate = new Date()
    //         let productDate = new Date(year + '-' + month + '-01');
    //         let intervalMonth = getIntervalMonth(productDate, nowDate)

    //         if (warrantyPeriod + intervalMonth >= 0) {
    //             console.log('保内');
    //             $("#rp_returnsubbillsForm-inWarranty").selectpicker('val', '是')
    //             // $("#rp_returnsubbillsForm-inWarranty").selectpicker('refresh')
    //         } else {
    //             $("#rp_returnsubbillsForm-inWarranty").selectpicker('val', '否')
    //         }
    //     });
    // }

    //创建还货单新单号
    const createReturnBillId = async () => {
        let r1 = await getDataBySql({
            sql: "getReturnBillsNum",
            params: {
                filter: 'makeDate="' + currentDate() + '"'
            }
        })
        // console.log('r1:' + r1);
        let r2 = r1[0].billsNum
        let r3 = parseInt(r2) + 1;

        let r4 = PrefixInteger(r3, 3);
        // console.log('r4:' + r4);
        let r5 = dateFormat(currentDate(), 'yyyyMMdd');

        let billId = 'T-' + r5 + r4;
        $("#rp_returnBillsForm-returnBillId").text(billId);
    }



    //添加主表监听器,定义双击打开事件

    const addMainTableListener = () => {

        //解绑原事件
        $('#rp_returnBills tbody').unbind();

        //定义主表单击击事件
        $('#rp_returnBills tbody').on('click', 'tr', async function () {
            //设定选中
            let table = $('#rp_returnBills').DataTable();

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                //清空选中单据数据
                mainTableData = {}
                $('#subTablePanel').hide();
            } else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');

                // let rowSelect = table.row('.selected').data();
                let rowSelect = table.row(this).data();


                mainTableData = rowSelect; //刷新全局主表对象数据
                console.log("mainTableData:", mainTableData);

                // let rowsSelect = table.rows('.selected').data();


                // subTableData = [];
                // for (let i = 0; i < rowsSelect.length; i++) {
                //     // //删除多余字段
                //     // delete rowsSelect[i].borrowBillId;
                //     // delete rowsSelect[i].unreturnNum;
                //     // delete rowsSelect[i].status;

                //     subTableData.push({
                //         DBID: rowsSelect[i].DBID,
                //         rowId: rowsSelect[i].rowId,
                //         productId: rowsSelect[i].productId,
                //         productName: rowsSelect[i].productName,
                //         unreturnNum: rowsSelect[i].unreturnNum,
                //         num: rowsSelect[i].num,
                //         unit: rowsSelect[i].unit,
                //         remark: rowsSelect[i].remark,

                //     });
                // }
                // console.log("subTableData:", subTableData);

                if (mainTableData.returnBillId) {
                    await loadMainBillSubTable(rowSelect.returnBillId)
                    //打开面板
                    $('#subTablePanel').show();
                } else {
                    $('#subTablePanel').hide();
                }



            }

            // let table = $('#rp_responsebills').DataTable();
            // table.$('tr.selected').removeClass('selected');
            // $(this).addClass('selected');
            // let dataSelect = table.row('.selected').data();

        });


        //定义主表双击事件
        $('#rp_returnBills tbody').on('dblclick', 'tr', async function () {

            //打开关联信息,打印功能
            $("#accordion").show();

            // $("#listPrintBtn").show();
            // $("#rp_returnBillsPrint").show();

            //设定选中
            let table = $('#rp_returnBills').DataTable();
            table.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
            let dataSelect = table.row('.selected').data();

            mainTableData = dataSelect; //刷新全局主表对象数据
            customerDataChanged = false

            $('#btnReturnBillDetail').click();

            // // console.log('mainTableData', mainTableData);

            // //解除客户监听事件
            // $('#rp_returnBillsForm-customerShortName').unbind();

            // //初始化并填写form内inputs
            // initAndFillFormInputs({
            //     formId: 'rp_returnBillsForm',
            //     params: dataSelect
            // })

            // let r1 = await getDataBySql({
            //     sql: 'getCustomers',
            //     params: {
            //         filter: 'customerShortName="' + dataSelect.customerShortName + '"'
            //     }
            // })

            // // console.log('r1:' + JSON.stringify(r1));

            // customerData = r1[0]; //将查询结果赋给全局变量
            // //加载备选联系人
            // loadContactOptions(customerData);

            // //关闭子表panel
            // $('#rp_returnsubbillsPanel').hide();

            // //加载子表记录表数据

            // loadBillSubTable(dataSelect.returnBillId);

            // //客户选定监听事件
            // addCustomerListener();

            // //打开面板
            // $('#rp_returnBillsModal').modal('show');

        });

    }

    //主表加载数据函数;

    const loadBillMainTable = async () => {

        //显示过滤模式
        switch (true) {
            case mainTableFilter === 'to_days(makeDate) = to_days(now())':
                $('#btnFilterToday').addClass('active');
                $('#btnFilterUnAudit').removeClass('active');
                $('#btnFilterDiy').removeClass('active');
                break;
            case mainTableFilter === 'status ="待审核"':
                $('#btnFilterToday').removeClass('active');
                $('#btnFilterUnAudit').addClass('active');
                $('#btnFilterDiy').removeClass('active');
                break;
            default:
                $('#btnFilterToday').removeClass('active');
                $('#btnFilterUnAudit').removeClass('active');
                $('#btnFilterDiy').addClass('active');
                break;
        }

        //初始化主表
        loadBillDataTable({
            elementId: 'rp_returnBills',
            sqlParams: {
                sqlId: 'sqlReturnBills',
                params: {
                    filter: mainTableFilter,
                    orderBy: 'billSaveTimeStamp desc'
                }
            },
            dtParams: {
                // bAutoWidth: false,//取消自动宽度
                columns: mainColumnsArray,
                // scrollX: true,
                // autoWidth: true
            }
        })
        //清空选项值
        $('.dataTables_filter input').val('')

        //自定义样式调整
        $('.dataTables_filter input').attr({
            'name': 'search',
            'size': 45
        });
        $('.dataTables_filter input').attr({
            'name': 'search',
            'placeholder': '可用表属性过滤'
        });



        // //添加搜索框监听事件,值变动自动隐藏主页附表
        // $('#rp_returnBills').on('search.dt', function () {
        //     console.log(1111);
        //     $('#subTablePanel').hide();
        // })


        //隐藏搜索值数据列,bStateSave 会导致列中visible 属性失效,采用指定隐藏方案
        let table = $('#rp_returnBills').DataTable();
        table.column('last').visible(false)

        addMainTableListener();

        //隐藏子面板
        $('#subTablePanel').hide();
    }

    //添加子表监听器,定义双击展开事件
    const addSubTableListener = () => {
        let subTable = $('#rp_returnsubbills').DataTable();

        //解绑原事件
        $('#rp_returnsubbills tbody').unbind();

        //定义子表双击事件
        $('#rp_returnsubbills tbody').on('click', 'tr', function () {

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');

                $('#rp_returnsubbillsPanel').hide();
            } else {
                subTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');

                let rowSelect = subTable.row('.selected').data();
                console.log("rowSelect:" + JSON.stringify(rowSelect));


                //初始化并填写form内inputs
                initAndFillFormInputs({
                    formId: 'rp_returnsubbillsForm',
                    params: rowSelect
                })

                //填写未归还数量
                $('#unreturnNum').text(rowSelect.unreturnNum);

                //打开面板
                $('#rp_returnsubbillsPanel').show();

                // //选定产品修改事件
                // addProductListener();
            }

        });
    }





    //用数组重载子表
    const loadDataSubTable = async ({
        elementId,
        dataArray
    }) => {

        //加载表格
        await loadBillDataTable({
            elementId: elementId,
            dtParams: {
                dtConfig: 'dtConfigData',
                data: dataArray,
                columns: subColumnsArray,
                // scrollX: true,
                // bAutoWidth: true
            }
        })

        //如数据为0,清空tbody 避免直接获取size =1;
        if (dataArray.length === 0) {
            $('#' + elementId + ' tbody').html("");
        }


        //添加子表双击事件
        addSubTableListener();
    }

    //加载展开选定表子表关联数据

    const loadBillSubTable = async (billId) => {


        loadDataSubTable({
            elementId: 'rp_returnsubbills',
            dataArray: subTableData
        });

        // loadDataSubTable({
        //     elementId: 'rp_returnBillsSub',
        //     dataArray: subTableData
        // });

    }

    //加载展开选定表子表关联数据

    const loadMainBillSubTable = async (billId) => {
        let dataArray = await getDataBySql({
            sql: 'sqlReturnSubBills',
            params: {
                filter: 'returnBillId="' + billId + '"'
            }
        })
        //将表数据同步到共用数组
        subTableData = dataArray;

        loadDataSubTable({
            elementId: 'rp_returnBillsSub',
            dataArray: subTableData
        });
    }







    //检查需求单Id函数,防止多人同时填单时出现的覆盖问题

    const checkReturnBillId = async () => {
        let billId = $("#rp_returnBillsForm-returnBillId").text();

        let r1 = await getDataBySql({
            sql: 'getReturnBillsNum',
            params: {
                filter: 'returnBillId="' + billId + '"'
            }
        })

        let r2 = r1[0].billsNum;
        // console.log("checkReturnBillId:" + r2);

        let o = r2 > 0 ? false : true;
        return o;

    }

    //更新需求单号加1
    const updateReturnBillId = () => {
        let billId = $("#rp_returnBillsForm-returnBillId").text();
        if (billId) {
            billIdArr = billId.split('-');
            let newBillId = billIdArr[0] + '-' + (parseInt(billIdArr[1]) + 1);
            $("#rp_returnBillsForm-returnBillId").text(newBillId);
        }
    }

    //递归更新单号直到不存在冲突单号;

    const autoUpdateReturnBillId = async () => {
        let r = await checkReturnBillId();
        if (r) {
            return true
        } else {
            // console.log('fail:' + $("#rp_returnBillsForm-returnBillId").text());
            updateReturnBillId()
            // console.log('fail11:' + $("#rp_returnBillsForm-returnBillId").text());
            return await autoUpdateReturnBillId();
        }
    }


    //检查删除单据数据
    const checkDeleteBills = async () => {

        let resultData = {
            result: null,
            data: {}
        }

        let table = $('#rp_returnBills').DataTable();
        let dataSelect = table.rows('.selected').data();
        let mainDBIDArr = [];
        let subDBIDArr = [];
        let billsIdArr = [];

        for (let n = 0; n < dataSelect.length; n++) {
            mainDBIDArr.push(dataSelect[n].DBID);
            billsIdArr.push(dataSelect[n].returnBillId);
        }

        switch (true) {
            case billsIdArr.length === 0:
                alert('请先选中需要删除的还货单!')

                resultData.result = false;
                return resultData
                break;
            case billsIdArr.length > 0:
                let billIdRange = getRangeString(billsIdArr);
                // console.log("billsIdArr:" + JSON.stringify(billsIdArr));

                let statusArr = await getDataBySql({
                    sql: 'sqlReturnSubBills',
                    params: {
                        filter: 'returnBillId in ' + billIdRange
                    }
                })

                console.log("statusArr:" + JSON.stringify(statusArr));
                for (const n of statusArr) {
                    // if (n.status !== '待审核') {
                    //     alert('选中单据已审核,不符合删除条件!')
                    //     resultData.result = false;
                    //     return resultData
                    // }
                    subDBIDArr.push(n.DBID)
                }
                break;
        }

        resultData = {
            result: true,
            data: {
                mainDBIDArr: mainDBIDArr,
                subDBIDArr: subDBIDArr
            }
        }

        return resultData;
    }



    // //更新所选产品即时库存
    // const showStockNum = async () => {
    //     let unreturnNum = 0;
    //     let productId = $('#rp_returnsubbillsForm-productId option:selected').val();
    //     let warehouseId = $('#rp_returnsubbillsForm-warehouseId option:selected').val();
    //     // console.log(warehouseId);

    //     if (productId && warehouseId) {
    //         unreturnNum = await getStockNum(productId, warehouseId);
    //     }
    //     $('#unreturnNum').text(unreturnNum)
    // }


    //加载多联系人数据
    const loadContactOptions = (customerData) => {
        // console.log('customerData', customerData);

        //补齐联系人待选项
        let contacts = [];
        if (!customerData.contacts) {
            contacts.push({
                name: customerData.contact,
                phone: customerData.mobilePhone
            })
        }

        if (customerData.contacts) {
            let contactsStr = customerData.contacts;

            // console.log('contactsStr', contactsStr);
            let contactsArr = contactsStr.split(';')
            // console.log('contactsArr', contactsArr);
            for (const n of contactsArr) {
                if (n) {
                    let name = n.split(',')[0];
                    let phone = n.split(',')[1];
                    contacts.push({
                        name: name,
                        phone: phone
                    })
                }
            }
        }

        $("#customerContacts").empty(); //清空原有
        // console.log('contacts', contacts);

        if (contacts.length > 0) {
            for (const contact of contacts) {
                $("#customerContacts").append(
                    "<option data-tokens='" + contact.phone + " ' value='" + contact.name + "'>" + contact
                    .name +
                    "</option>"
                );
            }
            $("#customerContacts").selectpicker('val', customerData.contact);
            $("#customerContacts").selectpicker('refresh');
        }


        //添加监听事件

        $('#customerContacts').unbind();
        $('#customerContacts').change(function () {
            let contact = $('#customerContacts option:selected').val();
            if (contact) {
                $("#customerContacts").selectpicker('refresh'); //刷新显示
                $('#rp_returnbillsForm-contact').val($('#customerContacts option:selected')
                    .val());
                $('#rp_returnbillsForm-mobilePhone').val($('#customerContacts option:selected')
                    .data("tokens"));
            }
        });
    }


    $(document).ready(function () {

        // alert(parseInt(''))
        //定义全局变量,当前用户名
        sessionName = "<%-locals.session.yjUser.Name%>";
        //定义主表全局变量临时数据对象
        mainTableData = {};
        //定义子表全局变量临时数据数组
        subTableData = [];

        //存储当前客户信息
        customerData = {}
        //记录客户基本信息是否被改变
        customerDataChanged = false
        //主表过滤器
        mainTableFilter = '';




        //初始化子表
        loadDataSubTable({
            elementId: 'rp_returnsubbills',
            dataArray: subTableData
        });

        //过滤器当天按钮
        $('#btnFilterToday').click(function () {
            mainTableFilter = 'to_days(makeDate) = to_days(now())';
            //初始化主表
            loadBillMainTable();

        })

        $('#btnFilterToday').click(); //默认开启当天过滤

        //过滤器待审核
        $('#btnFilterUnAudit').click(function () {
            mainTableFilter = 'status ="待审核"';
            //初始化主表
            loadBillMainTable();

        })


        //过滤器自定义按钮
        $('#btnFilterDiy').click(function () {
            //打开面板
            $('#filterModal').modal('show');
            clearFormInputs({
                formId: 'filterForm'
            })

        })

        //过滤器确认按钮

        $('#confirmFilter').click(function () {
            //获取filterform内数据
            let filter = '';

            //申请日期过滤
            let returnDateB = $('#filterForm-returnDateB').val();
            let returnDateE = $('#filterForm-returnDateE').val();

            if (returnDateB) {
                filter = filter + ' and returnDate>="' + returnDateB + '"'
            }

            if (returnDateE) {
                filter = filter + ' and returnDate<="' + returnDateE + '"'
            }

            //制单日期过滤
            let makeDateB = $('#filterForm-makeDateB').val();
            let makeDateE = $('#filterForm-makeDateE').val();

            if (makeDateB) {
                filter = filter + ' and makeDate>="' + makeDateB + '"'
            }

            if (makeDateE) {
                filter = filter + ' and makeDate<="' + makeDateE + '"'
            }



            //去除filter中开始的and关键字避免sql错误;
            if (filter) {
                filter = filter.substring(4, filter.length);
            }

            mainTableFilter = filter

            $('#closeFilter').click();
            loadBillMainTable()

        })

        //还货按钮
        $('#btnReturnStart').click(async function () {



            //打开面板
            $('#unReturnModal').modal('show');

            loadUnReturnTable()

        })

        //还货单新增按钮

        $('#btnReturnBillNew').click(async function () {

            //check-选中检测
            let table = $('#rp_borrowProductBills').DataTable();
            let rowsSelect = table.rows('.selected').data();
            if (rowsSelect.length < 1) {
                alert('请先选中需要归还的产品!')
                return;
            }

            //check-多选合法性检测

            for (let i = 0; i < rowsSelect.length; i++) {
                if (i === 0) {
                    continue
                }
                if (rowsSelect[i].customerShortName !== rowsSelect[i - 1]
                    .customerShortName) {
                    alert('不支持不同客户合并还货,请重选!')
                    return
                }
            }


            //do-填写主表数据

            console.log('rowsSelect[0]', rowsSelect[0]);

            //解除客户监听事件
            $('#rp_returnBillsForm-customerShortName').unbind();

            //初始化并填写form内inputs
            initAndFillFormInputs({
                formId: 'rp_returnBillsForm',
                params: rowsSelect[0]
            })

            let r1 = await getDataBySql({
                sql: 'getCustomers',
                params: {
                    filter: 'customerShortName="' + rowsSelect[0].customerShortName + '"'
                }
            })

            // console.log('r1:' + JSON.stringify(r1));

            customerData = r1[0]; //将查询结果赋给全局变量
            //加载备选联系人
            loadContactOptions(customerData);

            //关闭子表panel
            $('#rp_returnsubbillsPanel').hide();


            //设置默认值

            createReturnBillId();
            $("#rp_returnBillsForm-billFrom").text('电脑端');
            $("#rp_returnBillsForm-returnDate").val(currentDate());
            $("#rp_returnBillsForm-status").text('');
            $("#rp_returnBillsForm-isInland").selectpicker('val', '国内');
            $("#rp_returnBillsForm-auditor").selectpicker('val', '');
            $("#rp_returnBillsForm-returnType").selectpicker('val', '维修申请');


            //客户选定监听事件
            addCustomerListener();


            //do-加载子表数据

            let returnSubArr = [];
            for (let i = 0; i < rowsSelect.length; i++) {

                returnSubArr.push({
                    rowId: i + 1,
                    borrowBillId: rowsSelect[i].borrowBillId,
                    productId: rowsSelect[i].productId,
                    productName: rowsSelect[i].productName,
                    unreturnNum: rowsSelect[i].unreturnNum,
                    num: rowsSelect[i].unreturnNum,
                    unit: rowsSelect[i].unit,
                    remark: rowsSelect[i].remark,
                    status: '预还入'
                })

            }

            subTableData = returnSubArr
            loadDataSubTable({
                elementId: 'rp_returnsubbills',
                dataArray: subTableData
            });


            // loadBillSubTable(dataSelect.returnBillId);

            //打开面板
            $('#rp_returnBillsModal').modal('show');




        })


        //查看按钮
        $('#btnReturnBillDetail').click(async function () {

            //check-选中检测
            if (!mainTableData.returnBillId) {
                alert('请先选中需要查看的还货单')
                return;
            }

            //check-多选合法性检测
            if (subTableData.length > 0) {
                for (let i = 0; i < subTableData.length; i++) {
                    if (i === 0) {
                        continue
                    }
                    if (subTableData[i].customerShortName !== subTableData[i - 1]
                        .customerShortName) {
                        alert('不支持不同客户合并还货,请重选!')
                        return
                    }
                }
            }

            //do-填写主表数据

            // console.log('mainTableData', mainTableData);

            //解除客户监听事件
            $('#rp_returnBillsForm-customerShortName').unbind();

            //初始化并填写form内inputs
            initAndFillFormInputs({
                formId: 'rp_returnBillsForm',
                params: mainTableData
            })

            let r1 = await getDataBySql({
                sql: 'getCustomers',
                params: {
                    filter: 'customerShortName="' + mainTableData.customerShortName + '"'
                }
            })

            // console.log('r1:' + JSON.stringify(r1));

            customerData = r1[0]; //将查询结果赋给全局变量
            //加载备选联系人
            loadContactOptions(customerData);

            //关闭子表panel
            $('#rp_returnsubbillsPanel').hide();


            //设置默认值
            if (!mainTableData.returnBillId) {
                createReturnBillId();
            }

            if (!mainTableData.returnDate) {
                $("#rp_returnBillsForm-returnDate").val(currentDate());
            }



            //客户选定监听事件
            addCustomerListener();


            //do-加载子表数据
            for (let i = 0; i < subTableData.length; i++) {
                subTableData[i].rowId = i + 1;
            }

            loadDataSubTable({
                elementId: 'rp_returnsubbills',
                dataArray: subTableData
            });


            // loadBillSubTable(dataSelect.returnBillId);

            //打开面板
            $('#rp_returnBillsModal').modal('show');


            // //清空form数据
            // clearFormInputs({
            //     formId: 'rp_returnBillsForm'
            // })

            // //清空原有选项
            // $('#customerContacts').empty();
            // $('#customerContacts').selectpicker('destroy');


            // // //清空子表及全局变量
            // // subTableData = [];
            // // $('#rp_returnsubbills tbody').html("");


            // //打开面板
            // $('#rp_returnsubbillsPanel').hide();


            // createReturnBillId();
            // $("#rp_returnBillsForm-returnDate").val(currentDate());
            // $("#rp_returnBillsForm-isInland").selectpicker('val', '国内')
            // $("#rp_returnBillsForm-returnType").selectpicker('val', '邮寄过来')

            // //在保存时赋值
            // // $("#rp_returnBillsForm-maker").text(sessionName);
            // // $("#rp_returnBillsForm-makeDate").text(currentDate());

            // // //客户选定监听事件
            // // addCustomerListener();


            // //显示/隐藏
            // //关闭关联信息,打印按钮
            // $("#accordion").hide();

            // // $("#listPrintBtn").hide();
            // // $("#rp_returnBillsPrint").hide();

            // //打开面板
            // $('#rp_returnBillsModal').modal('show');

        })


        //删除需求单
        $('#btnReturnBillDelete').click(async function () {
            //检查条件
            let resultData = await checkDeleteBills();
            if (!resultData.result) {
                return;
            }

            //提醒删除风险
            if (!confirm('删除后无法恢复,确认删除?')) {
                return;
            }

            //删除单据

            // let table = $('#rp_returnBills').DataTable();
            // let dataSelect = table.rows('.selected').data();
            // let DBIDArr = [];
            // for (let n = 0; n < dataSelect.length; n++) {
            //     DBIDArr.push(dataSelect[n].DBID);
            // }

            let r1 = await postDBData({
                sql: 'delete',
                params: {
                    tableId: 'rp_returnBills',
                    data: resultData.data.mainDBIDArr
                }
            })

            let r2 = await postDBData({
                sql: 'delete',
                params: {
                    tableId: 'rp_returnsubbills',
                    data: resultData.data.subDBIDArr
                }
            })

            if (r1.affectedRows && r2.affectedRows) {
                alert('删除成功!')
                //重新加载表单
                loadBillMainTable();

            }


        })

        //审核按钮
        $('#btnReturnBillAudit').click(async function () {
            //check-检查选中
            if (!mainTableData.returnBillId) {
                alert('请先点击表格选中需要审核的还货单!')
                return
            }
            //check-检查审核条件
            if (mainTableData.status !== '待审核') {
                alert('非待审核状态,请检查!')
                return
            }
            //check-审核确认
            if (!confirm('审核后无法修改,是否继续')) {
                return
            }

            //do-判断还货方式
            let returnType = mainTableData.returnType;

            if (returnType === '正常入库') {
                //do-系统入库
                let mainTable = {
                    billFrom: '还货单',
                    billId: mainTableData.returnBillId,
                    customerId: mainTableData.customerId,
                    customerShortName: mainTableData.customerShortName,
                    customerName: mainTableData.customerName,
                    customerBelongShort: mainTableData.customerBelongShort,
                    contact: mainTableData.contact,
                    mobilePhone: mainTableData.mobilePhone,
                    workPhone: mainTableData.workPhone,
                    // returnType: mainTableData.returnType,
                    operator: mainTableData.operator,
                    // address: mainTableData.address,
                    auditor: mainTableData.auditor,
                    makeDate: mainTableData.makeDate,
                    auditDate: currentDate(),
                    status: '已审核',
                    remark: mainTableData.remark,
                };
                let subTable = [];
                for (const n of subTableData) {
                    subTable.push({
                        billId: n.returnBillId,
                        rowId: n.rowId,
                        productId: n.productId,
                        productName: n.productName,
                        productDescription: n.productDescription,
                        productClass: n.productClass,
                        systemType: n.systemType,
                        warehouseId: 'W1',
                        warehouseName: '客服仓',
                        unit: n.unit,
                        num: n.num,
                        status: '已入',
                        remark: n.remark,
                        actType: '还货单',
                        rpBillId: mainTableData.returnBillId
                    })
                }

                let r1 = await autoInStoreBills({
                    mainTable: mainTable,
                    subTable: subTable
                })

                console.log('r1', r1);


                //do-更新还货单状态

                if (!r1) {
                    alert('出现错误')
                    return;
                }

                let billUpdateData = {
                    returnBillId: mainTableData.returnBillId,
                    status: '已审核',
                    auditDate: currentDate()
                }

                let r2 = await postDBData({
                    sql: 'update',
                    params: {
                        tableId: 'rp_returnbills',
                        data: [billUpdateData],
                        key: 'returnBillId'
                    }
                })

                //do-更新还货单子表

                for (let n of subTableData) {
                    if (n.status === '预还入') {
                        n.status = '已还入'
                    }
                }

                let r3 = await postDBData({
                    sql: 'replace',
                    params: {
                        tableId: 'rp_returnsubbills',
                        data: subTableData
                    }
                })

                //do-更新借货单子表状态
                console.log('subTableData huan', subTableData);



                //do-更新借货单还货数量
                let updateBorrowProductArr = [];
                let borrowBillIdsStr = ''
                for (const n of subTableData) {
                    borrowBillIdsStr = borrowBillIdsStr + '"' + n.borrowBillId + '",'
                    updateBorrowProductArr.push({
                        borrowBillId: n.borrowBillId,
                        productId: n.productId,
                        returnNum: n.num
                    })
                }
                let r4 = await postDBData({
                    sql: 'updateNum',
                    params: {
                        tableId: 'rp_borrowsubbills',
                        keyTitles: ['borrowBillId', 'productId'],
                        numTitles: ['returnNum'],
                        data: updateBorrowProductArr
                    }
                })

                //do-更新借货单状态
                borrowBillIdsStr = borrowBillIdsStr.substring(0, borrowBillIdsStr.length - 1)
                let r5 = await postDBData({
                    sql: 'updateBorrowStatus',
                    params: {
                        filter: 'borrowBillId in (' + borrowBillIdsStr + ')'
                    }
                })


                //return-操作成功信息
                if (r2 && r3 && r4 && r5) {
                    alert('审核成功,系统已自动生成相应入库单!')
                } else {
                    alert('审核失败')
                }

            }

            //转维修申请

            if (returnType === '维修申请') {
                let billUpdateData = {
                    returnBillId: mainTableData.returnBillId,
                    status: '待维修',
                    auditDate: currentDate()
                }

                let r1 = await postDBData({
                    sql: 'update',
                    params: {
                        tableId: 'rp_returnbills',
                        data: [billUpdateData],
                        key: 'returnBillId'
                    }
                })

                //do-更新还货单子表

                for (let n of subTableData) {
                    if (n.status === '预还入') {
                        n.status = '待维修'
                    }
                }

                let r2 = await postDBData({
                    sql: 'replace',
                    params: {
                        tableId: 'rp_returnsubbills',
                        data: subTableData
                    }
                })

                //do-更新借货单子表状态
                console.log('subTableData huan', subTableData);

                //do-更新借货单还货数量
                let updateBorrowProductArr = [];
                let borrowBillIdsStr = ''
                for (const n of subTableData) {
                    borrowBillIdsStr = borrowBillIdsStr + '"' + n.borrowBillId + '",'
                    updateBorrowProductArr.push({
                        borrowBillId: n.borrowBillId,
                        productId: n.productId,
                        returnNum: n.num
                    })
                }
                let r3 = await postDBData({
                    sql: 'updateNum',
                    params: {
                        tableId: 'rp_borrowsubbills',
                        keyTitles: ['borrowBillId', 'productId'],
                        numTitles: ['returnNum'],
                        data: updateBorrowProductArr
                    }
                })

                //do-更新借货单状态
                borrowBillIdsStr = borrowBillIdsStr.substring(0, borrowBillIdsStr.length - 1)
                let r4 = await postDBData({
                    sql: 'updateBorrowStatus',
                    params: {
                        filter: 'borrowBillId in (' + borrowBillIdsStr + ')'
                    }
                })


                //return-操作成功信息
                if (r1 && r2 && r3 && r4) {
                    alert('审核成功,请在申请单模块继续转维修流程!')
                } else {
                    alert('审核失败')
                }
            }



            //return-刷新主表
            loadBillMainTable();



        })

        //驳回按钮
        $('#btnReturnBillReject').click(async function () {
            //check-检查选中
            // console.log(mainTableData);
            if (!mainTableData.returnBillId) {
                alert('请先点击表格选中需要驳回的还货单!')
                return
            }
            //check-检查驳回条件
            if (mainTableData.status !== '待审核') {
                alert('只能驳回待审核的还货单,请检查!')
                return
            }
            //check-驳回确认
            if (!confirm('驳回后该还货单即将失效,是否继续')) {
                return
            }

            //do-更新还货单状态
            let billUpdateData = {
                returnBillId: mainTableData.returnBillId,
                status: '已驳回'
            }

            let r1 = await postDBData({
                sql: 'update',
                params: {
                    tableId: 'rp_returnbills',
                    data: [billUpdateData],
                    key: 'returnBillId'
                }
            })

            //do-更新还货单子表状态
            let subbillUpdateData = [];
            for (const n of subTableData) {
                subbillUpdateData.push({
                    returnBillId: n.returnBillId,
                    status: '已驳回'
                })
            }

            let r2 = await postDBData({
                sql: 'update',
                params: {
                    tableId: 'rp_returnsubbills',
                    data: subbillUpdateData,
                    key: 'returnBillId'
                }
            })

            //return-操作成功信息
            if (r1.affectedRows > 0 && r2.affectedRows > 0) {
                alert('驳回成功!')
            } else {
                alert('驳回失败')
            }
            //return-刷新主表
            loadBillMainTable();

        })



        // 扫描按钮
        $('#btnScan').click(function () {

            let scanner = new Instascan.Scanner({
                video: document.getElementById('preview')
            });
            scanner.addListener('scan', async function (productId) {
                // console.log('productId:' + productId);
                let productData = await getDataBySql({
                    sql: 'getProduct',
                    params: {
                        filter: 'productId="' + productId + '"'
                    }
                })
                // console.log("productData:" + JSON.stringify(productData));
                let rowNum = $("#rp_returnsubbills tbody tr").size();
                let rowData = {};

                rowData.rowId = rowNum + 1;
                rowData.status = '新增'
                rowData.productId = productData[0].productId;
                rowData.productName = productData[0].productName;
                rowData.productDescription = productData[0].productDescription;
                rowData.factoryNo = '11111'
                rowData.origin = 'nb'
                rowData.isRework = '否';
                rowData.urgent = '否';
                rowData.inWarranty = '否';
                rowData.productFrom = '终端客户';
                rowData.productBelong = '客户 ';

                // console.log("rowData:" + JSON.stringify(rowData));

                subTableData.push(rowData);
                //重新加载子表
                loadDataSubTable({
                    elementId: 'rp_returnsubbills',
                    dataArray: subTableData
                });

                // alert('productId:' + productId);
                // $('#rp_returnsubbillsPanel').show();


                scanner.stop().then(function () {
                    // alert('stoped');
                    $('#scanModal').modal('hide')
                });
            });
            Instascan.Camera.getCameras().then(function (cameras) {
                if (cameras.length > 0) {
                    scanner.start(cameras[0]).then(function () {
                        // alert('start');
                    }).catch(function (err) {
                        alert('err:' + err);
                    });
                } else {
                    console.error('No cameras found.');
                }
            }).catch(function (e) {
                console.error(e);
                alert("系统错误,请检查摄像头设备!")

            });

            // 停止扫描按钮功能定义
            $('#btnScanStop').unbind();
            $('#btnScanStop').click(function () {
                scanner.stop()
                $('#scanModal').modal('hide')
            })

            $('#scanModal').modal('show');
        })





        //保存产品按钮

        $('#btnProductSave').click(async function () {

            //check-库存不足警告
            let unreturnNum = parseInt($('#unreturnNum').text());
            let num = parseInt($('#rp_returnsubbillsForm-num').val())
            if (num > unreturnNum) {
                alert('数量不能超过未归还数量,请检查')
                return;
            }

            let returnBillId = $("#rp_returnBillsForm-returnBillId").text();

            let rowNum = $("#rp_returnsubbills tbody tr").size();
            // console.log('rowNum:' + rowNum);
            let productData = getFormData({
                formId: 'rp_returnsubbillsForm'
            })
            // console.log('productData:' + JSON.stringify(productData.data))
            let rowData = formDataToRowData(productData.data)
            rowData.returnBillId = returnBillId;
            // console.log('rowData:' + JSON.stringify(rowData))

            //检查是否存在序号,区分新增还是编辑
            if (rowData.rowId) {
                for (let n in subTableData) {
                    // console.log("subTableData[n]:" + JSON.stringify(subTableData[n].rowId));
                    // console.log("rowData:" + JSON.stringify(rowData.rowId));

                    //此处不用===避免,字符类型不匹配导致相关问题
                    if (subTableData[n].rowId == rowData.rowId) {
                        subTableData[n] = rowData;
                        break;
                    }
                }
                // console.log("subTableData:" + JSON.stringify(subTableData));

            } else {
                // console.log("subTableData before:" + JSON.stringify(subTableData));
                // console.log("rowData:" + JSON.stringify(rowData.status));
                rowData.rowId = rowNum + 1;

                subTableData.push(rowData);
                // console.log("subTableData:" + JSON.stringify(subTableData));

            }

            //重新加载子表
            loadDataSubTable({
                elementId: 'rp_returnsubbills',
                dataArray: subTableData
            });

        })




        //表单打印按钮
        $('#rp_returnBillsPrint').click(function () {

            // let formData = getFormData({
            //     formId: 'rp_returnBillsForm',
            // })

            // fillTableInputs({
            //     tableId: 'printViewMainTable',
            //     params: formDataToRowData(formData.data)
            // })
            // console.log('print mainTableData:', mainTableData);
            if (!mainTableData.returnBillId) {
                alert('请先选中需要打印的单据!')
                return
            }


            fillTableInputs({
                tableId: 'printViewMainTable',
                params: mainTableData
            })


            fillTableRows({
                tableId: 'printViewSubTable',
                cols: ['rowId', 'productId', 'productName', 'unit', 'num'],
                data: subTableData
            })

            $('#printViewModal').modal('show')
        })

        //确认打印按钮
        $('#confirmPrintBtn').click(function () {
            Print('#printViewDiv', {
                onStart: function () {
                    console.log('onStart', new Date())
                },
                onEnd: function () {
                    console.log('onEnd', new Date())
                }
            })
        })


        //打印关闭按钮
        $('#printCloseBtn').click(function () {
            $('#printViewModal').modal('hide')
        })

        //表单保存按钮
        $('#rp_returnBillsSave').click(async function () {

            //check-单据状态
            let billStatus = $("#rp_returnBillsForm-status").text()
            if (billStatus !== '' && billStatus !== '待审核') {
                alert('只能保存待审核单据,请检查!')
                return;
            }


            //check-不存在子表项目则中断保存
            if (subTableData.length === 0) {
                alert('未添加需要还货的产品,无法保存单据,请检查!')
                return;
            }

            //do-保存还货单主表

            let mainFormData = getPostFormData({
                formId: 'rp_returnBillsForm'
            })

            //给主表数据添加,maker 和makeDate日期;新增状态等待单号检测完成,制单人为空则为新增状态

            if (!mainFormData.data[0].maker) {
                await autoUpdateReturnBillId();
                //刷新还货单号
                mainFormData.data[0].returnBillId = $("#rp_returnBillsForm-returnBillId").text();
                mainFormData.data[0].maker = sessionName;
                mainFormData.data[0].makeDate = currentDate();
            }

            //更新表单状态
            if (!mainFormData.data[0].status) {
                mainFormData.data[0].status = '待审核';
            }

            console.log('mainFormData', mainFormData);



            let r1 = await postDBData({
                sql: 'replace',
                params: mainFormData
            })

            //调整参数,删除unreturnNum 避免保存出错
            for (let n of subTableData) {
                n.returnBillId = mainFormData.data[0].returnBillId
                delete n.DBID
                delete n.unreturnNum
            }

            let r2 = await postDBData({
                sql: 'replace',
                params: {
                    tableId: 'rp_returnsubbills',
                    data: subTableData
                }
            })

            // let PIDArr = [];
            // for (const n of subTableData) {
            //     PIDArr.push({
            //         PID: n.productId,
            //         warehouseId: n.warehouseId
            //     })
            // }

            // let r3 = await initWarehousePID({
            //     PIDArr: PIDArr
            // })

            console.log('saveReturnBill r1:' + JSON.stringify(r1));
            console.log('saveReturnBill r2:' + JSON.stringify(r2));
            // console.log('saveReturnBill r3:' + JSON.stringify(r3));

            if (r1 && r2) {
                alert('保存成功!')
            } else {
                alert('出现错误!')
            }

            //更新客户信息功能

            // console.log('customerData:' + JSON.stringify(customerData));
            // console.log('mainFormData:' + JSON.stringify(mainFormData));

            //定义当前表内实际填写客户数据
            let billCustomerData = {
                customerId: mainFormData.data[0].customerId,
                // customerArea: mainFormData.data[0].customerArea,
                customerName: mainFormData.data[0].customerName,
                contact: mainFormData.data[0].contact,
                mobilePhone: mainFormData.data[0].mobilePhone,
                customerBelongShort: mainFormData.data[0].customerBelongShort,
                isInland: mainFormData.data[0].isInland
            }


            for (const p in billCustomerData) {
                if (billCustomerData[p] !== customerData[p]) {

                    console.log(p + ':' + 'billCustomerData[p]' + billCustomerData[p] +
                        ',customerData[p]:' +
                        customerData[p] + '不同');
                    customerData[p] = billCustomerData[p];
                    customerDataChanged = true

                    // break;
                }
            }

            //存在不同则更新客户信息
            if (customerDataChanged) {

                if (confirm('是否更新该客户基础信息?')) {
                    let rc = await postDBData({
                        sql: 'update',
                        params: {
                            tableId: 'rp_customers',
                            data: [customerData],
                            key: 'customerId'
                        }
                    })
                    if (rc.affectedRows > 0) {
                        alert('更新客户信息成功!')
                    }

                }
            }

            // $('#rp_returnBillsModal').modal('hide');多层modal存在失效问题,改用click关闭
            $('#rp_returnBillsModalClose').click()

            loadBillMainTable();
        })

        //初始化过滤器日期组
        loadDatePickers({
            elementIds: [
                'filterForm-returnDateB',
                'filterForm-returnDateE',
                'filterForm-makeDateB',
                'filterForm-makeDateE'
            ]
        })


        //初始化组件
        loadDatePicker({
            elementId: "rp_returnBillsForm-returnDate",
        })

        // //初始化组件
        // loadDatePicker({
        //     elementId: "rp_returnsubbillsForm-productYear",
        //     params: {
        //         startView: 4,
        //         minView: 4,
        //         format: 'yyyy'
        //     }
        // })

        // //初始化组件
        // loadDatePicker({
        //     elementId: "rp_returnsubbillsForm-productMonth",
        //     params: {
        //         startView: 3,
        //         minView: 3,
        //         format: 'mm'
        //     }
        // })



        // $("#msgSwitch").bootstrapSwitch({
        //     onText: "是",
        //     offText: "否"
        // });


        //初始化selector

        loadBootStrapSelector({
            elementId: 'rp_returnBillsForm-customerShortName',
            sqlParams: {
                sql: 'getCustomerSelector'
            },
        })




        // loadBootStrapSelector({
        //     elementId: 'rp_returnBillsForm-customerArea',
        //     sqlParams: {
        //         sql: 'getRegionSelector',
        //         // params: {
        //         //     filter: 'mername like "%宁波%"'
        //         // }
        //     },
        //     // initValue:'中国,北京'
        // })

        loadBootStrapSelector({
            elementId: 'rp_returnBillsForm-operator',
            sqlParams: {
                sql: 'getStaffSelector'
            },
            // initValue:'中国,北京'
        })


        loadBootStrapSelector({
            elementId: 'rp_returnsubbillsForm-productId',
            sqlParams: {
                sql: 'getProductSelector'
            },
        })



        loadBootStrapSelector({
            elementId: 'rp_returnBillsForm-isInland',
            sqlParams: {
                sql: 'getOptionSelector',
                params: {
                    filter: 'optionClass="国内外"',
                    orderBy: 'orderId'
                }
            },
        })

        loadBootStrapSelector({
            elementId: 'rp_returnBillsForm-customerBelongShort',
            // initValue:'',
            sqlParams: {
                sql: 'getCustomerSelector',
                params: {
                    filter: 'customerType="客户"'
                }
            },
            // initValue:'中国,北京'
        })


        loadBootStrapSelector({
            elementId: 'rp_returnBillsForm-returnType',
            sqlParams: {
                sql: 'getOptionSelector',
                params: {
                    filter: 'optionClass="还货类型"',
                    orderBy: 'orderId'
                }
            },
        })

        loadBootStrapSelector({
            elementId: 'rp_returnBillsForm-auditor',
            sqlParams: {
                sql: 'getStaffSelector'
            },
            // initValue:''
        })

        loadBootStrapSelector({
            elementId: 'rp_returnsubbillsForm-warehouseId',
            sqlParams: {
                sql: 'getWarehouseSelector',
            },
            initValue: 'W1'
        })


        // loadBootStrapSelector({
        //     elementId: 'rp_returnsubbillsForm-productFrom',
        //     sqlParams: {
        //         sql: 'getOptionSelector',
        //         params: {
        //             filter: 'optionClass="产品来源"',
        //             orderBy: 'orderId'
        //         }
        //     },
        // })


        // loadBootStrapSelector({
        //     elementId: 'rp_returnsubbillsForm-origin',
        //     sqlParams: {
        //         sql: 'getOptionSelector',
        //         params: {
        //             filter: 'optionClass="原产地"',
        //             orderBy: 'orderId'
        //         }
        //     },
        // })


        // loadBootStrapSelector({
        //     elementId: 'rp_returnsubbillsForm-productBelong',
        //     sqlParams: {
        //         sql: 'getOptionSelector',
        //         params: {
        //             filter: 'optionClass="产品归属"',
        //             orderBy: 'orderId'
        //         }
        //     },
        // })

        // loadBootStrapSelector({
        //     elementId: 'rp_returnsubbillsForm-isRework',
        //     sqlParams: {
        //         sql: 'getOptionSelector',
        //         params: {
        //             filter: 'optionClass="是或否"'
        //         }
        //     },
        // })

        // loadBootStrapSelector({
        //     elementId: 'rp_returnsubbillsForm-urgent',
        //     sqlParams: {
        //         sql: 'getOptionSelector',
        //         params: {
        //             filter: 'optionClass="是或否"'
        //         }
        //     },
        // })

        // loadBootStrapSelector({
        //     elementId: 'rp_returnsubbillsForm-inWarranty',
        //     sqlParams: {
        //         sql: 'getOptionSelector',
        //         params: {
        //             filter: 'optionClass="是或否"'
        //         }
        //     },
        // })



        //客户选定监听事件
        addCustomerListener();

        // //选定产品修改事件
        // addProductListener();

        // //仓库选择修改事件
        // addWarehouseListener();

        // //保固期计算事件
        // addInWarrantyListener();



        // 关闭事件重置选中datatable选中,避免显示错误
        $('#rp_returnBillsModal').on('hidden.bs.modal', function () {
            let table = $('#rp_returnBills').DataTable();
            table.$('tr.selected').removeClass('selected');
            mainTableData = {}

            // //添加监听出来扫描modal关闭 表单modal失效问题
            $(this).removeData('bs.modal');
            $(document.body).addClass("modal-open");
        })

        //自动调整modal显示位置
        $('#scanModal').on('show.bs.modal', function (
            e) {
            // 关键代码，如没将modal设置为 block，则$modala_dialog.height() 为零 
            $(this).css('display', 'block');
            // var modalHeight = $(window).height() / 2;
            let modalHeight = $(window).height() / 3;
            $(this).find('.modal-dialog').css({
                'margin-top': modalHeight
            });
        });






    });
</script>